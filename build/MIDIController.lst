ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MIDIController.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy9DaisySeedD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2556:
  29              		.file 1 "../../libDaisy/src/daisy_seed.h"
   1:../../libDaisy/src/daisy_seed.h **** #pragma once
   2:../../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy/src/daisy_seed.h **** 
   5:../../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy/src/daisy_seed.h **** 
   7:../../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy/src/daisy_seed.h **** 
  10:../../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../../libDaisy/src/daisy_seed.h **** {
  12:../../libDaisy/src/daisy_seed.h **** /**
  13:../../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy/src/daisy_seed.h **** 
  16:../../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy/src/daisy_seed.h **** */
  18:../../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy/src/daisy_seed.h **** {
  20:../../libDaisy/src/daisy_seed.h ****   public:
  21:../../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB416:
  36              	.LBI416:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 2


  37              		.file 2 "../../libDaisy/src/sys/system.h"
   1:../../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy/src/sys/system.h **** 
   4:../../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy/src/sys/system.h **** 
   6:../../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy/src/sys/system.h **** 
   9:../../libDaisy/src/sys/system.h **** namespace daisy
  10:../../libDaisy/src/sys/system.h **** {
  11:../../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy/src/sys/system.h ****  **
  15:../../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy/src/sys/system.h ****  */
  18:../../libDaisy/src/sys/system.h **** class System
  19:../../libDaisy/src/sys/system.h **** {
  20:../../libDaisy/src/sys/system.h ****   public:
  21:../../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy/src/sys/system.h ****     struct Config
  23:../../libDaisy/src/sys/system.h ****     {
  24:../../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy/src/sys/system.h ****         {
  27:../../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy/src/sys/system.h ****         };
  30:../../libDaisy/src/sys/system.h **** 
  31:../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy/src/sys/system.h ****          ** */
  35:../../libDaisy/src/sys/system.h ****         void Defaults()
  36:../../libDaisy/src/sys/system.h ****         {
  37:../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy/src/sys/system.h ****         }
  42:../../libDaisy/src/sys/system.h **** 
  43:../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy/src/sys/system.h ****          ** */
  47:../../libDaisy/src/sys/system.h ****         void Boost()
  48:../../libDaisy/src/sys/system.h ****         {
  49:../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy/src/sys/system.h ****         }
  54:../../libDaisy/src/sys/system.h **** 
  55:../../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy/src/sys/system.h ****         bool       use_dcache;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 3


  57:../../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy/src/sys/system.h ****     };
  60:../../libDaisy/src/sys/system.h **** 
  61:../../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy/src/sys/system.h ****     {
  64:../../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy/src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy/src/sys/system.h ****         SDRAM,
  71:../../libDaisy/src/sys/system.h ****         QSPI,
  72:../../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy/src/sys/system.h ****     };
  74:../../libDaisy/src/sys/system.h **** 
  75:../../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../../libDaisy/src/sys/system.h ****     {
  78:../../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy/src/sys/system.h ****         {
  80:../../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy/src/sys/system.h ****         } status;
  85:../../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy/src/sys/system.h ****         {
  88:../../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy/src/sys/system.h ****             LAST
  93:../../libDaisy/src/sys/system.h ****         } version;
  94:../../libDaisy/src/sys/system.h ****     };
  95:../../libDaisy/src/sys/system.h **** 
  96:../../libDaisy/src/sys/system.h ****     System() {}
  97:../../libDaisy/src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE416:
  41              	.LBB417:
  42              	.LBI417:
  43              		.file 3 "../../libDaisy/src/hid/usb.h"
   1:../../libDaisy/src/hid/usb.h **** #pragma once
   2:../../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy/src/hid/usb.h **** 
   7:../../libDaisy/src/hid/usb.h **** namespace daisy
   8:../../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy/src/hid/usb.h ****     @{
  10:../../libDaisy/src/hid/usb.h **** */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 4


  11:../../libDaisy/src/hid/usb.h **** 
  12:../../libDaisy/src/hid/usb.h **** {
  13:../../libDaisy/src/hid/usb.h **** /** 
  14:../../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../../libDaisy/src/hid/usb.h **** */
  18:../../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../../libDaisy/src/hid/usb.h **** {
  20:../../libDaisy/src/hid/usb.h ****   public:
  21:../../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy/src/hid/usb.h ****     enum class Result
  23:../../libDaisy/src/hid/usb.h ****     {
  24:../../libDaisy/src/hid/usb.h ****         OK,
  25:../../libDaisy/src/hid/usb.h ****         ERR,
  26:../../libDaisy/src/hid/usb.h ****     };
  27:../../libDaisy/src/hid/usb.h **** 
  28:../../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy/src/hid/usb.h ****     {
  31:../../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy/src/hid/usb.h ****     };
  35:../../libDaisy/src/hid/usb.h **** 
  36:../../libDaisy/src/hid/usb.h **** 
  37:../../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy/src/hid/usb.h **** 
  40:../../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy/src/hid/usb.h **** 
  42:../../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE417:
  47              	.LBB418:
  48              	.LBI418:
  49              		.file 4 "../../libDaisy/src/per/adc.h"
   1:../../libDaisy/src/per/adc.h **** #pragma once
   2:../../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy/src/per/adc.h **** 
   9:../../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy/src/per/adc.h **** 
  11:../../libDaisy/src/per/adc.h **** namespace daisy
  12:../../libDaisy/src/per/adc.h **** {
  13:../../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy/src/per/adc.h ****     @{
  15:../../libDaisy/src/per/adc.h **** */
  16:../../libDaisy/src/per/adc.h **** 
  17:../../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy/src/per/adc.h **** later without breaking existing functionality.
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 5


  20:../../libDaisy/src/per/adc.h **** */
  21:../../libDaisy/src/per/adc.h **** 
  22:../../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy/src/per/adc.h ****  *           one channel.
  26:../../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy/src/per/adc.h **** */
  31:../../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy/src/per/adc.h **** {
  33:../../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../../libDaisy/src/per/adc.h ****     {
  36:../../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy/src/per/adc.h ****     };
  41:../../libDaisy/src/per/adc.h **** 
  42:../../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy/src/per/adc.h ****     {
  45:../../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy/src/per/adc.h ****     };
  54:../../libDaisy/src/per/adc.h **** 
  55:../../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy/src/per/adc.h ****      */
  59:../../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy/src/per/adc.h **** 
  61:../../libDaisy/src/per/adc.h ****     /** 
  62:../../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy/src/per/adc.h ****     */
  74:../../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 6


  77:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy/src/per/adc.h **** 
  81:../../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy/src/per/adc.h **** };
  86:../../libDaisy/src/per/adc.h **** 
  87:../../libDaisy/src/per/adc.h **** /**
  88:../../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy/src/per/adc.h **** */
  90:../../libDaisy/src/per/adc.h **** class AdcHandle
  91:../../libDaisy/src/per/adc.h **** {
  92:../../libDaisy/src/per/adc.h ****   public:
  93:../../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../../libDaisy/src/per/adc.h ****     {
  96:../../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy/src/per/adc.h ****     };
 108:../../libDaisy/src/per/adc.h **** 
 109:../../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE418:
  53              	.LBB419:
  54              	.LBI419:
  55              		.file 5 "../../libDaisy/src/hid/audio.h"
   1:../../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy/src/hid/audio.h **** 
   4:../../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy/src/hid/audio.h **** 
   6:../../libDaisy/src/hid/audio.h **** namespace daisy
   7:../../libDaisy/src/hid/audio.h **** {
   8:../../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 7


  18:../../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy/src/hid/audio.h ****  */
  22:../../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../../libDaisy/src/hid/audio.h **** {
  24:../../libDaisy/src/hid/audio.h ****   public:
  25:../../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy/src/hid/audio.h ****     struct Config
  28:../../libDaisy/src/hid/audio.h ****     {
  29:../../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy/src/hid/audio.h **** 
  32:../../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy/src/hid/audio.h **** 
  35:../../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy/src/hid/audio.h ****         float postgain;
  37:../../libDaisy/src/hid/audio.h **** 
  38:../../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy/src/hid/audio.h ****          */
  41:../../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy/src/hid/audio.h **** 
  43:../../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy/src/hid/audio.h ****         Config()
  45:../../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy/src/hid/audio.h ****         {
  50:../../libDaisy/src/hid/audio.h ****         }
  51:../../libDaisy/src/hid/audio.h ****     };
  52:../../libDaisy/src/hid/audio.h **** 
  53:../../libDaisy/src/hid/audio.h ****     enum class Result
  54:../../libDaisy/src/hid/audio.h ****     {
  55:../../libDaisy/src/hid/audio.h ****         OK,
  56:../../libDaisy/src/hid/audio.h ****         ERR,
  57:../../libDaisy/src/hid/audio.h ****     };
  58:../../libDaisy/src/hid/audio.h **** 
  59:../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy/src/hid/audio.h ****      */
  63:../../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy/src/hid/audio.h **** 
  65:../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy/src/hid/audio.h ****      */
  68:../../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy/src/hid/audio.h **** 
  70:../../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy/src/hid/audio.h ****      */
  73:../../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 8


  75:../../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy/src/hid/audio.h **** 
  77:../../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy/src/hid/audio.h ****     */
  81:../../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy/src/hid/audio.h **** 
  83:../../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy/src/hid/audio.h ****     */
  86:../../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy/src/hid/audio.h **** 
  88:../../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy/src/hid/audio.h ****      */
  91:../../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy/src/hid/audio.h **** 
  95:../../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE419:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2556:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev,"axG",%progbits,_ZN5daisy11MidiH
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	_ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev:
  75              	.LVL1:
  76              	.LFB5286:
  77              		.file 6 "../../libDaisy/src/hid/midi.h"
   1:../../libDaisy/src/hid/midi.h **** #pragma once
   2:../../libDaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy/src/hid/midi.h **** 
   5:../../libDaisy/src/hid/midi.h **** #include <stdint.h>
   6:../../libDaisy/src/hid/midi.h **** #include <stdlib.h>
   7:../../libDaisy/src/hid/midi.h **** #include <algorithm>
   8:../../libDaisy/src/hid/midi.h **** #include "per/uart.h"
   9:../../libDaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  10:../../libDaisy/src/hid/midi.h **** #include "util/FIFO.h"
  11:../../libDaisy/src/hid/midi.h **** #include "hid/midi_parser.h"
  12:../../libDaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  13:../../libDaisy/src/hid/midi.h **** #include "sys/dma.h"
  14:../../libDaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy/src/hid/midi.h **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 9


  16:../../libDaisy/src/hid/midi.h **** namespace daisy
  17:../../libDaisy/src/hid/midi.h **** {
  18:../../libDaisy/src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART
  19:../../libDaisy/src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy/src/hid/midi.h ****  *           There is an additional 2kB of RAM data used within this class
  21:../../libDaisy/src/hid/midi.h ****  *           for processing bulk data from the UART peripheral
  22:../../libDaisy/src/hid/midi.h ****  *  @ingroup midi
  23:../../libDaisy/src/hid/midi.h **** */
  24:../../libDaisy/src/hid/midi.h **** class MidiUartTransport
  25:../../libDaisy/src/hid/midi.h **** {
  26:../../libDaisy/src/hid/midi.h ****   public:
  27:../../libDaisy/src/hid/midi.h ****     typedef void (*MidiRxParseCallback)(uint8_t* data,
  28:../../libDaisy/src/hid/midi.h ****                                         size_t   size,
  29:../../libDaisy/src/hid/midi.h ****                                         void*    context);
  30:../../libDaisy/src/hid/midi.h **** 
  31:../../libDaisy/src/hid/midi.h ****     MidiUartTransport() {}
  32:../../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  33:../../libDaisy/src/hid/midi.h **** 
  34:../../libDaisy/src/hid/midi.h ****     /** @brief Configuration structure for UART MIDI */
  35:../../libDaisy/src/hid/midi.h ****     struct Config
  36:../../libDaisy/src/hid/midi.h ****     {
  37:../../libDaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  38:../../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  39:../../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  40:../../libDaisy/src/hid/midi.h **** 
  41:../../libDaisy/src/hid/midi.h ****         /** Pointer to buffer for DMA UART rx byte transfer in background.
  42:../../libDaisy/src/hid/midi.h ****          *
  43:../../libDaisy/src/hid/midi.h ****          *  @details By default this uses a shared buffer in DMA_BUFFER_MEM_SECTION,
  44:../../libDaisy/src/hid/midi.h ****          *           which can only be utilized for a single UART peripheral. To
  45:../../libDaisy/src/hid/midi.h ****          *           use MIDI with multiple UART peripherals, you must provide your own
  46:../../libDaisy/src/hid/midi.h ****          *           buffer, allocated to a DMA-capable memory section.
  47:../../libDaisy/src/hid/midi.h ****          */
  48:../../libDaisy/src/hid/midi.h ****         uint8_t* rx_buffer;
  49:../../libDaisy/src/hid/midi.h **** 
  50:../../libDaisy/src/hid/midi.h ****         /** Size in bytes of rx_buffer.
  51:../../libDaisy/src/hid/midi.h ****          *
  52:../../libDaisy/src/hid/midi.h ****          *  @details This size determines the maximum Rx bytes readable by the UART in the backgrou
  53:../../libDaisy/src/hid/midi.h ****          *           By default it's set to the size of the default shared rx_buffer (256 bytes).
  54:../../libDaisy/src/hid/midi.h ****          *           While much smaller sizes can be used, data can get missed if the buffer is too
  55:../../libDaisy/src/hid/midi.h ****          */
  56:../../libDaisy/src/hid/midi.h ****         size_t rx_buffer_size;
  57:../../libDaisy/src/hid/midi.h **** 
  58:../../libDaisy/src/hid/midi.h ****         Config();
  59:../../libDaisy/src/hid/midi.h ****     };
  60:../../libDaisy/src/hid/midi.h **** 
  61:../../libDaisy/src/hid/midi.h ****     /** @brief Initialization of UART using config struct */
  62:../../libDaisy/src/hid/midi.h ****     inline void Init(Config config)
  63:../../libDaisy/src/hid/midi.h ****     {
  64:../../libDaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  65:../../libDaisy/src/hid/midi.h **** 
  66:../../libDaisy/src/hid/midi.h ****         //defaults
  67:../../libDaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  68:../../libDaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  69:../../libDaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  70:../../libDaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  71:../../libDaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  72:../../libDaisy/src/hid/midi.h **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 10


  73:../../libDaisy/src/hid/midi.h ****         //user settings
  74:../../libDaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  75:../../libDaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  76:../../libDaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  77:../../libDaisy/src/hid/midi.h **** 
  78:../../libDaisy/src/hid/midi.h ****         rx_buffer      = config.rx_buffer;
  79:../../libDaisy/src/hid/midi.h ****         rx_buffer_size = config.rx_buffer_size;
  80:../../libDaisy/src/hid/midi.h **** 
  81:../../libDaisy/src/hid/midi.h ****         /** zero the buffer to ensure emptiness regardless of source memory */
  82:../../libDaisy/src/hid/midi.h ****         std::fill(rx_buffer, rx_buffer + rx_buffer_size, 0);
  83:../../libDaisy/src/hid/midi.h **** 
  84:../../libDaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  85:../../libDaisy/src/hid/midi.h ****     }
  86:../../libDaisy/src/hid/midi.h **** 
  87:../../libDaisy/src/hid/midi.h ****     /** @brief Start the UART peripheral in listening mode.
  88:../../libDaisy/src/hid/midi.h ****      *  This will fill an internal data structure in the background */
  89:../../libDaisy/src/hid/midi.h ****     inline void StartRx(MidiRxParseCallback parse_callback, void* context)
  90:../../libDaisy/src/hid/midi.h ****     {
  91:../../libDaisy/src/hid/midi.h ****         parse_context_  = context;
  92:../../libDaisy/src/hid/midi.h ****         parse_callback_ = parse_callback;
  93:../../libDaisy/src/hid/midi.h ****         dsy_dma_clear_cache_for_buffer((uint8_t*)this,
  94:../../libDaisy/src/hid/midi.h ****                                        sizeof(MidiUartTransport));
  95:../../libDaisy/src/hid/midi.h ****         uart_.DmaListenStart(
  96:../../libDaisy/src/hid/midi.h ****             rx_buffer, rx_buffer_size, MidiUartTransport::rxCallback, this);
  97:../../libDaisy/src/hid/midi.h ****     }
  98:../../libDaisy/src/hid/midi.h **** 
  99:../../libDaisy/src/hid/midi.h ****     /** @brief returns whether the UART peripheral is actively listening in the background or not *
 100:../../libDaisy/src/hid/midi.h ****     inline bool RxActive() { return uart_.IsListening(); }
 101:../../libDaisy/src/hid/midi.h **** 
 102:../../libDaisy/src/hid/midi.h ****     /** @brief This is a no-op for UART transport - Rx is via DMA callback with circular buffer */
 103:../../libDaisy/src/hid/midi.h ****     inline void FlushRx() {}
 104:../../libDaisy/src/hid/midi.h **** 
 105:../../libDaisy/src/hid/midi.h ****     /** @brief sends the buffer of bytes out of the UART peripheral */
 106:../../libDaisy/src/hid/midi.h ****     inline void Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
 107:../../libDaisy/src/hid/midi.h **** 
 108:../../libDaisy/src/hid/midi.h ****   private:
 109:../../libDaisy/src/hid/midi.h ****     UartHandler         uart_;
 110:../../libDaisy/src/hid/midi.h ****     uint8_t*            rx_buffer;
 111:../../libDaisy/src/hid/midi.h ****     size_t              rx_buffer_size;
 112:../../libDaisy/src/hid/midi.h ****     void*               parse_context_;
 113:../../libDaisy/src/hid/midi.h ****     MidiRxParseCallback parse_callback_;
 114:../../libDaisy/src/hid/midi.h **** 
 115:../../libDaisy/src/hid/midi.h ****     /** Static callback for Uart MIDI that occurs when
 116:../../libDaisy/src/hid/midi.h ****          *  new data is available from the peripheral.
 117:../../libDaisy/src/hid/midi.h ****          *  The new data is transferred from the peripheral to the
 118:../../libDaisy/src/hid/midi.h ****          *  MIDI instance's byte FIFO that feeds the MIDI parser.
 119:../../libDaisy/src/hid/midi.h ****          *
 120:../../libDaisy/src/hid/midi.h ****          *  TODO: Handle UartHandler errors better/at all.
 121:../../libDaisy/src/hid/midi.h ****          *  (If there is a UART error, there's not really any recovery
 122:../../libDaisy/src/hid/midi.h ****          *  option at the moment)
 123:../../libDaisy/src/hid/midi.h ****          */
 124:../../libDaisy/src/hid/midi.h ****     static void rxCallback(uint8_t*            data,
 125:../../libDaisy/src/hid/midi.h ****                            size_t              size,
 126:../../libDaisy/src/hid/midi.h ****                            void*               context,
 127:../../libDaisy/src/hid/midi.h ****                            UartHandler::Result res)
 128:../../libDaisy/src/hid/midi.h ****     {
 129:../../libDaisy/src/hid/midi.h ****         /** Read context as transport type */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 11


 130:../../libDaisy/src/hid/midi.h ****         MidiUartTransport* transport
 131:../../libDaisy/src/hid/midi.h ****             = reinterpret_cast<MidiUartTransport*>(context);
 132:../../libDaisy/src/hid/midi.h ****         if(res == UartHandler::Result::OK)
 133:../../libDaisy/src/hid/midi.h ****         {
 134:../../libDaisy/src/hid/midi.h ****             if(transport->parse_callback_)
 135:../../libDaisy/src/hid/midi.h ****             {
 136:../../libDaisy/src/hid/midi.h ****                 transport->parse_callback_(
 137:../../libDaisy/src/hid/midi.h ****                     data, size, transport->parse_context_);
 138:../../libDaisy/src/hid/midi.h ****             }
 139:../../libDaisy/src/hid/midi.h ****         }
 140:../../libDaisy/src/hid/midi.h ****     }
 141:../../libDaisy/src/hid/midi.h **** };
 142:../../libDaisy/src/hid/midi.h **** 
 143:../../libDaisy/src/hid/midi.h **** /**
 144:../../libDaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n
 145:../../libDaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n
 146:../../libDaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
 147:../../libDaisy/src/hid/midi.h ****     @author shensley
 148:../../libDaisy/src/hid/midi.h ****     @date March 2020
 149:../../libDaisy/src/hid/midi.h ****     @ingroup midi
 150:../../libDaisy/src/hid/midi.h **** */
 151:../../libDaisy/src/hid/midi.h **** template <typename Transport>
 152:../../libDaisy/src/hid/midi.h **** class MidiHandler
 153:../../libDaisy/src/hid/midi.h **** {
 154:../../libDaisy/src/hid/midi.h ****   public:
 155:../../libDaisy/src/hid/midi.h ****     MidiHandler() {}
 156:../../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
  78              		.loc 6 156 5 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LBB420:
  84              	.LBI420:
  85              		.file 7 "../../libDaisy/src/util/FIFO.h"
   1:../../libDaisy/src/util/FIFO.h **** #pragma once
   2:../../libDaisy/src/util/FIFO.h **** 
   3:../../libDaisy/src/util/FIFO.h **** #include <stdint.h>
   4:../../libDaisy/src/util/FIFO.h **** #include <stddef.h>
   5:../../libDaisy/src/util/FIFO.h **** #include <initializer_list>
   6:../../libDaisy/src/util/FIFO.h **** 
   7:../../libDaisy/src/util/FIFO.h **** namespace daisy
   8:../../libDaisy/src/util/FIFO.h **** {
   9:../../libDaisy/src/util/FIFO.h **** /** Capacity-independent base class for FIFO. Use FIFO instead. */
  10:../../libDaisy/src/util/FIFO.h **** template <typename T>
  11:../../libDaisy/src/util/FIFO.h **** class FIFOBase
  12:../../libDaisy/src/util/FIFO.h **** {
  13:../../libDaisy/src/util/FIFO.h ****   protected:
  14:../../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize)
  15:../../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  16:../../libDaisy/src/util/FIFO.h ****     {
  17:../../libDaisy/src/util/FIFO.h ****     }
  18:../../libDaisy/src/util/FIFO.h **** 
  19:../../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize, std::initializer_list<T> valuesToAdd)
  20:../../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  21:../../libDaisy/src/util/FIFO.h ****     {
  22:../../libDaisy/src/util/FIFO.h ****         PushBack(valuesToAdd);
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 12


  23:../../libDaisy/src/util/FIFO.h ****     }
  24:../../libDaisy/src/util/FIFO.h **** 
  25:../../libDaisy/src/util/FIFO.h ****   public:
  26:../../libDaisy/src/util/FIFO.h ****     /** Copies all elements from another FIFO */
  27:../../libDaisy/src/util/FIFO.h ****     FIFOBase<T>& operator=(const FIFOBase<T>& other)
  28:../../libDaisy/src/util/FIFO.h ****     {
  29:../../libDaisy/src/util/FIFO.h ****         bufferIn_ = bufferOut_ = 0;
  30:../../libDaisy/src/util/FIFO.h ****         if(!other.IsEmpty())
  31:../../libDaisy/src/util/FIFO.h ****         {
  32:../../libDaisy/src/util/FIFO.h ****             int readPtr = other.bufferOut_;
  33:../../libDaisy/src/util/FIFO.h ****             while((readPtr != other.bufferIn_) && (bufferIn_ < bufferSize_))
  34:../../libDaisy/src/util/FIFO.h ****             {
  35:../../libDaisy/src/util/FIFO.h ****                 buffer_[bufferIn_++] = other.buffer_[readPtr++];
  36:../../libDaisy/src/util/FIFO.h ****                 if(readPtr >= other.bufferSize_)
  37:../../libDaisy/src/util/FIFO.h ****                     readPtr -= other.bufferSize_;
  38:../../libDaisy/src/util/FIFO.h ****             }
  39:../../libDaisy/src/util/FIFO.h ****         }
  40:../../libDaisy/src/util/FIFO.h ****         return *this;
  41:../../libDaisy/src/util/FIFO.h ****     }
  42:../../libDaisy/src/util/FIFO.h ****     ~FIFOBase() {}
  43:../../libDaisy/src/util/FIFO.h **** 
  44:../../libDaisy/src/util/FIFO.h ****     /** Removes all elements from the FIFO */
  45:../../libDaisy/src/util/FIFO.h ****     void Clear() { bufferIn_ = bufferOut_ = 0; }
  46:../../libDaisy/src/util/FIFO.h **** 
  47:../../libDaisy/src/util/FIFO.h ****     /** Adds an element to the back of the buffer, returning true on
  48:../../libDaisy/src/util/FIFO.h ****         success */
  49:../../libDaisy/src/util/FIFO.h ****     bool PushBack(const T& elementToAdd)
  50:../../libDaisy/src/util/FIFO.h ****     {
  51:../../libDaisy/src/util/FIFO.h ****         if(!IsFull())
  52:../../libDaisy/src/util/FIFO.h ****         {
  53:../../libDaisy/src/util/FIFO.h ****             buffer_[bufferIn_++] = elementToAdd;
  54:../../libDaisy/src/util/FIFO.h ****             if(bufferIn_ >= bufferSize_)
  55:../../libDaisy/src/util/FIFO.h ****                 bufferIn_ -= bufferSize_;
  56:../../libDaisy/src/util/FIFO.h ****             return true;
  57:../../libDaisy/src/util/FIFO.h ****         }
  58:../../libDaisy/src/util/FIFO.h ****         return false;
  59:../../libDaisy/src/util/FIFO.h ****     }
  60:../../libDaisy/src/util/FIFO.h **** 
  61:../../libDaisy/src/util/FIFO.h ****     /** Adds multiple elements and returns the number of elements that were added */
  62:../../libDaisy/src/util/FIFO.h ****     int PushBack(std::initializer_list<T> valuesToAdd)
  63:../../libDaisy/src/util/FIFO.h ****     {
  64:../../libDaisy/src/util/FIFO.h ****         int numAdded = 0;
  65:../../libDaisy/src/util/FIFO.h ****         for(const auto& v : valuesToAdd)
  66:../../libDaisy/src/util/FIFO.h ****         {
  67:../../libDaisy/src/util/FIFO.h ****             if(IsFull())
  68:../../libDaisy/src/util/FIFO.h ****                 return numAdded;
  69:../../libDaisy/src/util/FIFO.h **** 
  70:../../libDaisy/src/util/FIFO.h ****             PushBack(v);
  71:../../libDaisy/src/util/FIFO.h ****             numAdded++;
  72:../../libDaisy/src/util/FIFO.h ****         }
  73:../../libDaisy/src/util/FIFO.h ****         return numAdded;
  74:../../libDaisy/src/util/FIFO.h ****     }
  75:../../libDaisy/src/util/FIFO.h **** 
  76:../../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  77:../../libDaisy/src/util/FIFO.h ****     T& Back()
  78:../../libDaisy/src/util/FIFO.h ****     {
  79:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 13


  80:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  81:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  82:../../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  83:../../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  84:../../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  85:../../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  86:../../libDaisy/src/util/FIFO.h ****     }
  87:../../libDaisy/src/util/FIFO.h **** 
  88:../../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  89:../../libDaisy/src/util/FIFO.h ****     const T& Back() const
  90:../../libDaisy/src/util/FIFO.h ****     {
  91:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  92:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  93:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  94:../../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  95:../../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  96:../../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  97:../../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  98:../../libDaisy/src/util/FIFO.h ****     }
  99:../../libDaisy/src/util/FIFO.h **** 
 100:../../libDaisy/src/util/FIFO.h ****     /** removes and returns an element from the front of the buffer */
 101:../../libDaisy/src/util/FIFO.h ****     T PopFront()
 102:../../libDaisy/src/util/FIFO.h ****     {
 103:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 104:../../libDaisy/src/util/FIFO.h ****             return T();
 105:../../libDaisy/src/util/FIFO.h ****         else
 106:../../libDaisy/src/util/FIFO.h ****         {
 107:../../libDaisy/src/util/FIFO.h ****             const auto result = buffer_[bufferOut_];
 108:../../libDaisy/src/util/FIFO.h ****             bufferOut_++;
 109:../../libDaisy/src/util/FIFO.h ****             if(bufferOut_ >= bufferSize_)
 110:../../libDaisy/src/util/FIFO.h ****                 bufferOut_ -= bufferSize_;
 111:../../libDaisy/src/util/FIFO.h ****             return result;
 112:../../libDaisy/src/util/FIFO.h ****         }
 113:../../libDaisy/src/util/FIFO.h ****     }
 114:../../libDaisy/src/util/FIFO.h **** 
 115:../../libDaisy/src/util/FIFO.h ****     /** returns a copy of the first element */
 116:../../libDaisy/src/util/FIFO.h ****     T& Front()
 117:../../libDaisy/src/util/FIFO.h ****     {
 118:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 119:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 120:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 121:../../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 122:../../libDaisy/src/util/FIFO.h ****     }
 123:../../libDaisy/src/util/FIFO.h **** 
 124:../../libDaisy/src/util/FIFO.h ****     /** returns a reference to the first element */
 125:../../libDaisy/src/util/FIFO.h ****     const T& Front() const
 126:../../libDaisy/src/util/FIFO.h ****     {
 127:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 128:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 129:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 130:../../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 131:../../libDaisy/src/util/FIFO.h ****     }
 132:../../libDaisy/src/util/FIFO.h **** 
 133:../../libDaisy/src/util/FIFO.h ****     /** Returns true if the buffer contains an element equal to the provided value */
 134:../../libDaisy/src/util/FIFO.h ****     bool Contains(const T& element)
 135:../../libDaisy/src/util/FIFO.h ****     {
 136:../../libDaisy/src/util/FIFO.h ****         auto idx = bufferOut_;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 14


 137:../../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 138:../../libDaisy/src/util/FIFO.h ****         {
 139:../../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 140:../../libDaisy/src/util/FIFO.h ****                 return true;
 141:../../libDaisy/src/util/FIFO.h ****             idx++;
 142:../../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 143:../../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 144:../../libDaisy/src/util/FIFO.h ****         }
 145:../../libDaisy/src/util/FIFO.h ****         return false;
 146:../../libDaisy/src/util/FIFO.h ****     }
 147:../../libDaisy/src/util/FIFO.h **** 
 148:../../libDaisy/src/util/FIFO.h ****     /** Returns the number of elements in the buffer that are equal to the provided value */
 149:../../libDaisy/src/util/FIFO.h ****     size_t CountEqualTo(const T& element)
 150:../../libDaisy/src/util/FIFO.h ****     {
 151:../../libDaisy/src/util/FIFO.h ****         size_t result = 0;
 152:../../libDaisy/src/util/FIFO.h ****         size_t idx    = bufferOut_;
 153:../../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 154:../../libDaisy/src/util/FIFO.h ****         {
 155:../../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 156:../../libDaisy/src/util/FIFO.h ****                 result++;
 157:../../libDaisy/src/util/FIFO.h ****             idx++;
 158:../../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 159:../../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 160:../../libDaisy/src/util/FIFO.h ****         }
 161:../../libDaisy/src/util/FIFO.h ****         return result;
 162:../../libDaisy/src/util/FIFO.h ****     }
 163:../../libDaisy/src/util/FIFO.h **** 
 164:../../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is empty */
 165:../../libDaisy/src/util/FIFO.h ****     bool IsEmpty() const { return bufferIn_ == bufferOut_; }
 166:../../libDaisy/src/util/FIFO.h **** 
 167:../../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is Full */
 168:../../libDaisy/src/util/FIFO.h ****     bool IsFull() const { return GetNumElements() == bufferSize_ - 1; }
 169:../../libDaisy/src/util/FIFO.h **** 
 170:../../libDaisy/src/util/FIFO.h ****     /** returns the number of elements in the buffer */
 171:../../libDaisy/src/util/FIFO.h ****     size_t GetNumElements() const
 172:../../libDaisy/src/util/FIFO.h ****     {
 173:../../libDaisy/src/util/FIFO.h ****         int32_t numElements = bufferIn_ - bufferOut_;
 174:../../libDaisy/src/util/FIFO.h ****         if(numElements < 0)
 175:../../libDaisy/src/util/FIFO.h ****             numElements += bufferSize_;
 176:../../libDaisy/src/util/FIFO.h ****         return size_t(numElements);
 177:../../libDaisy/src/util/FIFO.h ****     }
 178:../../libDaisy/src/util/FIFO.h **** 
 179:../../libDaisy/src/util/FIFO.h ****     /** inserts an element "idx" positions behind the first element and returns true if successful 
 180:../../libDaisy/src/util/FIFO.h ****     bool Insert(size_t idx, const T& element)
 181:../../libDaisy/src/util/FIFO.h ****     {
 182:../../libDaisy/src/util/FIFO.h ****         if(idx > GetNumElements())
 183:../../libDaisy/src/util/FIFO.h ****             return false;
 184:../../libDaisy/src/util/FIFO.h ****         if(IsFull())
 185:../../libDaisy/src/util/FIFO.h ****             return false;
 186:../../libDaisy/src/util/FIFO.h ****         if(idx == GetNumElements())
 187:../../libDaisy/src/util/FIFO.h ****         {
 188:../../libDaisy/src/util/FIFO.h ****             PushBack(element);
 189:../../libDaisy/src/util/FIFO.h ****             return true;
 190:../../libDaisy/src/util/FIFO.h ****         }
 191:../../libDaisy/src/util/FIFO.h ****         // copy last element
 192:../../libDaisy/src/util/FIFO.h ****         PushBack(Back());
 193:../../libDaisy/src/util/FIFO.h ****         // move remaining elements: n => n+1
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 15


 194:../../libDaisy/src/util/FIFO.h ****         for(int i = GetNumElements() - 2; i > int(idx); i--)
 195:../../libDaisy/src/util/FIFO.h ****             (*this)[i] = (*this)[i - 1];
 196:../../libDaisy/src/util/FIFO.h ****         // insert element
 197:../../libDaisy/src/util/FIFO.h ****         (*this)[idx] = element;
 198:../../libDaisy/src/util/FIFO.h ****         return true;
 199:../../libDaisy/src/util/FIFO.h ****     }
 200:../../libDaisy/src/util/FIFO.h **** 
 201:../../libDaisy/src/util/FIFO.h ****     /** removes the element "idx" positions behind the first element 
 202:../../libDaisy/src/util/FIFO.h ****      *  and returns true if successful */
 203:../../libDaisy/src/util/FIFO.h ****     bool Remove(size_t idx)
 204:../../libDaisy/src/util/FIFO.h ****     {
 205:../../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 206:../../libDaisy/src/util/FIFO.h ****             return false;
 207:../../libDaisy/src/util/FIFO.h **** 
 208:../../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 209:../../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 210:../../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 211:../../libDaisy/src/util/FIFO.h ****         size_t nextIndex = index + 1;
 212:../../libDaisy/src/util/FIFO.h ****         if(nextIndex >= bufferSize_)
 213:../../libDaisy/src/util/FIFO.h ****             nextIndex -= bufferSize_;
 214:../../libDaisy/src/util/FIFO.h **** 
 215:../../libDaisy/src/util/FIFO.h ****         while(nextIndex != bufferIn_)
 216:../../libDaisy/src/util/FIFO.h ****         {
 217:../../libDaisy/src/util/FIFO.h ****             buffer_[index] = buffer_[nextIndex];
 218:../../libDaisy/src/util/FIFO.h ****             index++;
 219:../../libDaisy/src/util/FIFO.h ****             nextIndex++;
 220:../../libDaisy/src/util/FIFO.h ****             if(index >= bufferSize_)
 221:../../libDaisy/src/util/FIFO.h ****                 index -= bufferSize_;
 222:../../libDaisy/src/util/FIFO.h ****             if(nextIndex >= bufferSize_)
 223:../../libDaisy/src/util/FIFO.h ****                 nextIndex -= bufferSize_;
 224:../../libDaisy/src/util/FIFO.h ****         }
 225:../../libDaisy/src/util/FIFO.h **** 
 226:../../libDaisy/src/util/FIFO.h ****         int32_t nextBufferIn = int32_t(bufferIn_) - 1;
 227:../../libDaisy/src/util/FIFO.h ****         if(nextBufferIn < 0)
 228:../../libDaisy/src/util/FIFO.h ****             nextBufferIn += bufferSize_;
 229:../../libDaisy/src/util/FIFO.h ****         bufferIn_ = size_t(nextBufferIn);
 230:../../libDaisy/src/util/FIFO.h **** 
 231:../../libDaisy/src/util/FIFO.h ****         return true;
 232:../../libDaisy/src/util/FIFO.h ****     }
 233:../../libDaisy/src/util/FIFO.h **** 
 234:../../libDaisy/src/util/FIFO.h ****     /** removes all elements from the buffer for which
 235:../../libDaisy/src/util/FIFO.h ****         (buffer(index) == element) returns true and returns the number of
 236:../../libDaisy/src/util/FIFO.h ****         elements that were removed. */
 237:../../libDaisy/src/util/FIFO.h ****     size_t RemoveAllEqualTo(const T& element)
 238:../../libDaisy/src/util/FIFO.h ****     {
 239:../../libDaisy/src/util/FIFO.h ****         size_t numRemoved = 0;
 240:../../libDaisy/src/util/FIFO.h ****         int    idx        = GetNumElements() - 1;
 241:../../libDaisy/src/util/FIFO.h ****         while(idx >= 0)
 242:../../libDaisy/src/util/FIFO.h ****         {
 243:../../libDaisy/src/util/FIFO.h ****             if((*this)[idx] == element)
 244:../../libDaisy/src/util/FIFO.h ****             {
 245:../../libDaisy/src/util/FIFO.h ****                 numRemoved++;
 246:../../libDaisy/src/util/FIFO.h ****                 Remove(idx);
 247:../../libDaisy/src/util/FIFO.h ****                 // was that the last element?
 248:../../libDaisy/src/util/FIFO.h ****                 if(idx == int(GetNumElements()) - 1)
 249:../../libDaisy/src/util/FIFO.h ****                     idx--;
 250:../../libDaisy/src/util/FIFO.h ****             }
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 16


 251:../../libDaisy/src/util/FIFO.h ****             else
 252:../../libDaisy/src/util/FIFO.h ****                 idx--;
 253:../../libDaisy/src/util/FIFO.h ****         }
 254:../../libDaisy/src/util/FIFO.h ****         return numRemoved;
 255:../../libDaisy/src/util/FIFO.h ****     }
 256:../../libDaisy/src/util/FIFO.h **** 
 257:../../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 258:../../libDaisy/src/util/FIFO.h ****     T& operator[](size_t idx)
 259:../../libDaisy/src/util/FIFO.h ****     {
 260:../../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 261:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 262:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 263:../../libDaisy/src/util/FIFO.h **** 
 264:../../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 265:../../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 266:../../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 267:../../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 268:../../libDaisy/src/util/FIFO.h ****     }
 269:../../libDaisy/src/util/FIFO.h **** 
 270:../../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 271:../../libDaisy/src/util/FIFO.h ****     const T& operator[](size_t idx) const
 272:../../libDaisy/src/util/FIFO.h ****     {
 273:../../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 274:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 275:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 276:../../libDaisy/src/util/FIFO.h **** 
 277:../../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 278:../../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 279:../../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 280:../../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 281:../../libDaisy/src/util/FIFO.h ****     }
 282:../../libDaisy/src/util/FIFO.h **** 
 283:../../libDaisy/src/util/FIFO.h ****     /** returns the total capacity */
 284:../../libDaisy/src/util/FIFO.h ****     size_t GetCapacity() const { return bufferSize_ - 1; }
 285:../../libDaisy/src/util/FIFO.h **** 
 286:../../libDaisy/src/util/FIFO.h ****   private:
 287:../../libDaisy/src/util/FIFO.h ****     FIFOBase(const FIFOBase<T>&) {} // non copyable
 288:../../libDaisy/src/util/FIFO.h **** 
 289:../../libDaisy/src/util/FIFO.h ****   private:
 290:../../libDaisy/src/util/FIFO.h ****     T*           buffer_;
 291:../../libDaisy/src/util/FIFO.h ****     const size_t bufferSize_;
 292:../../libDaisy/src/util/FIFO.h ****     size_t       bufferIn_;
 293:../../libDaisy/src/util/FIFO.h ****     size_t       bufferOut_;
 294:../../libDaisy/src/util/FIFO.h **** };
 295:../../libDaisy/src/util/FIFO.h **** 
 296:../../libDaisy/src/util/FIFO.h **** /** A simple FIFO ring buffer with a fixed size. */
 297:../../libDaisy/src/util/FIFO.h **** template <typename T, size_t capacity>
 298:../../libDaisy/src/util/FIFO.h **** class FIFO : public FIFOBase<T>
  86              		.loc 7 298 7 view .LVU11
  87              	.LBB421:
  88              	.LBI421:
  42:../../libDaisy/src/util/FIFO.h **** 
  89              		.loc 7 42 5 view .LVU12
  42:../../libDaisy/src/util/FIFO.h **** 
  90              		.loc 7 42 5 is_stmt 0 view .LVU13
  91              	.LBE421:
  92              	.LBE420:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 17


  93              	.LBB422:
  94              	.LBI422:
  95              		.file 8 "../../libDaisy/src/hid/midi_parser.h"
   1:../../libDaisy/src/hid/midi_parser.h **** #pragma once
   2:../../libDaisy/src/hid/midi_parser.h **** #ifndef DSY_MIDI_PARSER_H
   3:../../libDaisy/src/hid/midi_parser.h **** #define DSY_MIDI_PARSER_H
   4:../../libDaisy/src/hid/midi_parser.h **** 
   5:../../libDaisy/src/hid/midi_parser.h **** #include <stdint.h>
   6:../../libDaisy/src/hid/midi_parser.h **** #include <stdlib.h>
   7:../../libDaisy/src/hid/midi_parser.h **** #include "hid/MidiEvent.h"
   8:../../libDaisy/src/hid/midi_parser.h **** 
   9:../../libDaisy/src/hid/midi_parser.h **** namespace daisy
  10:../../libDaisy/src/hid/midi_parser.h **** {
  11:../../libDaisy/src/hid/midi_parser.h **** /** @brief   Utility class for parsing raw byte streams into MIDI messages
  12:../../libDaisy/src/hid/midi_parser.h ****  *  @details Implemented as a state machine designed to parse one byte at a time
  13:../../libDaisy/src/hid/midi_parser.h ****  *  @ingroup midi
  14:../../libDaisy/src/hid/midi_parser.h ****  */
  15:../../libDaisy/src/hid/midi_parser.h **** class MidiParser
  16:../../libDaisy/src/hid/midi_parser.h **** {
  17:../../libDaisy/src/hid/midi_parser.h ****   public:
  18:../../libDaisy/src/hid/midi_parser.h ****     MidiParser(){};
  19:../../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
  96              		.loc 8 19 5 is_stmt 1 view .LVU14
  97              		.loc 8 19 5 is_stmt 0 view .LVU15
  98              	.LBE422:
  99              	.LBB423:
 100              	.LBI423:
 101              		.file 9 "../../libDaisy/src/hid/usb_midi.h"
   1:../../libDaisy/src/hid/usb_midi.h **** #pragma once
   2:../../libDaisy/src/hid/usb_midi.h **** #ifndef __DSY_MIDIUSBTRANSPORT_H__
   3:../../libDaisy/src/hid/usb_midi.h **** #define __DSY_MIDIUSBTRANSPORT_H__
   4:../../libDaisy/src/hid/usb_midi.h **** 
   5:../../libDaisy/src/hid/usb_midi.h **** #include "hid/usb.h"
   6:../../libDaisy/src/hid/usb_midi.h **** #include "sys/system.h"
   7:../../libDaisy/src/hid/usb_midi.h **** #include "util/ringbuffer.h"
   8:../../libDaisy/src/hid/usb_midi.h **** 
   9:../../libDaisy/src/hid/usb_midi.h **** namespace daisy
  10:../../libDaisy/src/hid/usb_midi.h **** {
  11:../../libDaisy/src/hid/usb_midi.h **** /** @brief USB Transport for MIDI
  12:../../libDaisy/src/hid/usb_midi.h ****  *  @ingroup midi
  13:../../libDaisy/src/hid/usb_midi.h ****  */
  14:../../libDaisy/src/hid/usb_midi.h **** class MidiUsbTransport
  15:../../libDaisy/src/hid/usb_midi.h **** {
  16:../../libDaisy/src/hid/usb_midi.h ****   public:
  17:../../libDaisy/src/hid/usb_midi.h ****     typedef void (*MidiRxParseCallback)(uint8_t* data,
  18:../../libDaisy/src/hid/usb_midi.h ****                                         size_t   size,
  19:../../libDaisy/src/hid/usb_midi.h ****                                         void*    context);
  20:../../libDaisy/src/hid/usb_midi.h **** 
  21:../../libDaisy/src/hid/usb_midi.h ****     struct Config
  22:../../libDaisy/src/hid/usb_midi.h ****     {
  23:../../libDaisy/src/hid/usb_midi.h ****         enum Periph
  24:../../libDaisy/src/hid/usb_midi.h ****         {
  25:../../libDaisy/src/hid/usb_midi.h ****             INTERNAL = 0,
  26:../../libDaisy/src/hid/usb_midi.h ****             EXTERNAL
  27:../../libDaisy/src/hid/usb_midi.h ****         };
  28:../../libDaisy/src/hid/usb_midi.h **** 
  29:../../libDaisy/src/hid/usb_midi.h ****         Periph periph;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 18


  30:../../libDaisy/src/hid/usb_midi.h **** 
  31:../../libDaisy/src/hid/usb_midi.h ****         /**
  32:../../libDaisy/src/hid/usb_midi.h ****          * When sending MIDI messages immediately back-to-back in user code,
  33:../../libDaisy/src/hid/usb_midi.h ****          * sometimes the USB CDC driver is still "busy".
  34:../../libDaisy/src/hid/usb_midi.h ****          *
  35:../../libDaisy/src/hid/usb_midi.h ****          * This option configures the number of times to retry a Tx after
  36:../../libDaisy/src/hid/usb_midi.h ****          * delaying for 100 microseconds (default = 3 retries).
  37:../../libDaisy/src/hid/usb_midi.h ****          *
  38:../../libDaisy/src/hid/usb_midi.h ****          * If you set this to zero, Tx will not retry so the attempt will block
  39:../../libDaisy/src/hid/usb_midi.h ****          * for slightly less time, but transmit can fail if the Tx state is busy.
  40:../../libDaisy/src/hid/usb_midi.h ****          */
  41:../../libDaisy/src/hid/usb_midi.h ****         uint8_t tx_retry_count;
  42:../../libDaisy/src/hid/usb_midi.h **** 
  43:../../libDaisy/src/hid/usb_midi.h ****         Config() : periph(INTERNAL), tx_retry_count(3) {}
  44:../../libDaisy/src/hid/usb_midi.h ****     };
  45:../../libDaisy/src/hid/usb_midi.h **** 
  46:../../libDaisy/src/hid/usb_midi.h ****     void Init(Config config);
  47:../../libDaisy/src/hid/usb_midi.h **** 
  48:../../libDaisy/src/hid/usb_midi.h ****     void StartRx(MidiRxParseCallback callback, void* context);
  49:../../libDaisy/src/hid/usb_midi.h ****     bool RxActive();
  50:../../libDaisy/src/hid/usb_midi.h ****     void FlushRx();
  51:../../libDaisy/src/hid/usb_midi.h ****     void Tx(uint8_t* buffer, size_t size);
  52:../../libDaisy/src/hid/usb_midi.h **** 
  53:../../libDaisy/src/hid/usb_midi.h ****     class Impl;
  54:../../libDaisy/src/hid/usb_midi.h **** 
  55:../../libDaisy/src/hid/usb_midi.h ****     MidiUsbTransport() : pimpl_(nullptr) {}
  56:../../libDaisy/src/hid/usb_midi.h ****     ~MidiUsbTransport() {}
 102              		.loc 9 56 5 is_stmt 1 view .LVU16
 103              		.loc 9 56 5 is_stmt 0 view .LVU17
 104              	.LBE423:
 105              		.loc 6 156 21 view .LVU18
 106 0000 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE5286:
 110              		.weak	_ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED1Ev
 111              		.thumb_set _ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED1Ev,_ZN5daisy11MidiHandlerINS_16MidiUsbT
 112 0002 00BF     		.section	.text._Z11initButtonsv,"ax",%progbits
 113              		.align	1
 114              		.p2align 2,,3
 115              		.global	_Z11initButtonsv
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 120              	_Z11initButtonsv:
 121              	.LFB4682:
 122              		.file 10 "MIDIController.cpp"
   1:MIDIController.cpp **** #include "daisy_seed.h"
   2:MIDIController.cpp **** #include "daisysp.h"
   3:MIDIController.cpp **** #include "hid/midi.h"
   4:MIDIController.cpp **** #include <random>
   5:MIDIController.cpp **** // #include "hid/midi_message.h"
   6:MIDIController.cpp **** 
   7:MIDIController.cpp **** using namespace daisy;
   8:MIDIController.cpp **** using namespace daisy::seed;
   9:MIDIController.cpp **** using namespace daisysp;
  10:MIDIController.cpp **** 
  11:MIDIController.cpp **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 19


  12:MIDIController.cpp **** // JUN 6-V definitions
  13:MIDIController.cpp **** #define JUNO_DCO_LFO 77
  14:MIDIController.cpp **** #define JUNO_DCO_SUB_LEVEL 85
  15:MIDIController.cpp **** #define JUNO_DCO_SUB_ON 82
  16:MIDIController.cpp **** #define JUNO_ATTACK  73
  17:MIDIController.cpp **** #define JUNO_DECAY   75
  18:MIDIController.cpp **** #define JUNO_SUSTAIN 76 
  19:MIDIController.cpp **** #define JUNO_RELEASE 72
  20:MIDIController.cpp **** #define JUNO_FILTER_CUTOFF 74 
  21:MIDIController.cpp **** #define JUNO_UNISON 93 
  22:MIDIController.cpp **** #define JUNO_CHORUS1 80
  23:MIDIController.cpp **** #define JUNO_REVERB_DECAY 91
  24:MIDIController.cpp **** #define JUNO_REVERB_LEVEL 81
  25:MIDIController.cpp **** 
  26:MIDIController.cpp **** 
  27:MIDIController.cpp **** bool unison_active = false; 
  28:MIDIController.cpp **** bool chorus_state = false;
  29:MIDIController.cpp **** 
  30:MIDIController.cpp **** // #define ADXL345_ADDR 0x53
  31:MIDIController.cpp **** // #define DATAX0 0x32
  32:MIDIController.cpp **** // #define POWER_CTL 0x2D
  33:MIDIController.cpp **** // #define SCALE_FACTOR 0.004 
  34:MIDIController.cpp **** // #define DATA_FORMAT 0x31 
  35:MIDIController.cpp **** 
  36:MIDIController.cpp **** 
  37:MIDIController.cpp **** DaisySeed hw;
  38:MIDIController.cpp **** MidiUsbHandler midi;
  39:MIDIController.cpp **** // I2CHandle i2c;
  40:MIDIController.cpp **** // daisy::GPIO button;
  41:MIDIController.cpp **** 
  42:MIDIController.cpp **** GPIO button1;
  43:MIDIController.cpp **** GPIO button2;
  44:MIDIController.cpp **** GPIO button3;
  45:MIDIController.cpp **** bool button1_last_state = true;
  46:MIDIController.cpp **** bool button2_last_state = true;
  47:MIDIController.cpp **** bool button3_last_state = true;
  48:MIDIController.cpp **** 
  49:MIDIController.cpp **** GPIO LED_R1;
  50:MIDIController.cpp **** GPIO LED_R2;
  51:MIDIController.cpp **** GPIO LED_W1;
  52:MIDIController.cpp **** GPIO LED_W2;
  53:MIDIController.cpp **** // bool oscillate_leds = false;
  54:MIDIController.cpp **** bool led_state = false;
  55:MIDIController.cpp **** 
  56:MIDIController.cpp **** enum LEDMode {
  57:MIDIController.cpp ****     OFF,
  58:MIDIController.cpp ****     RANDOM_LFO,    // Add mode for button 1
  59:MIDIController.cpp ****     UNISON_BLINK,
  60:MIDIController.cpp ****     CHORUS_CYCLE
  61:MIDIController.cpp **** };
  62:MIDIController.cpp **** LEDMode current_led_mode = OFF;
  63:MIDIController.cpp **** // GPIO accelerometer1_VCC;
  64:MIDIController.cpp **** // GPIO accelerometer1_SC;
  65:MIDIController.cpp **** // GPIO accelerometer1_SDA;
  66:MIDIController.cpp **** // GPIO accelerometer1_SCL;
  67:MIDIController.cpp **** 
  68:MIDIController.cpp **** GPIO encoderA;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 20


  69:MIDIController.cpp **** GPIO encoderB;
  70:MIDIController.cpp **** int encoderPos = 0;
  71:MIDIController.cpp **** int lastEncA;
  72:MIDIController.cpp **** int lastEncB;
  73:MIDIController.cpp **** 
  74:MIDIController.cpp **** AdcChannelConfig fader1cfg;
  75:MIDIController.cpp **** AdcChannelConfig fader2cfg;
  76:MIDIController.cpp **** AdcChannelConfig fader3cfg;
  77:MIDIController.cpp **** AdcChannelConfig knob1cfg;
  78:MIDIController.cpp **** AdcChannelConfig knob2cfg;
  79:MIDIController.cpp **** AdcChannelConfig knob3cfg;
  80:MIDIController.cpp **** void initButtons() {
 123              		.loc 10 80 20 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
  81:MIDIController.cpp ****     // Initialize button
  82:MIDIController.cpp ****     button1.Init(D0, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 127              		.loc 10 82 5 view .LVU20
  80:MIDIController.cpp ****     // Initialize button
 128              		.loc 10 80 20 is_stmt 0 view .LVU21
 129 0000 10B5     		push	{r4, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133              		.loc 10 82 17 view .LVU22
 134 0002 0E49     		ldr	r1, .L6
  80:MIDIController.cpp ****     // Initialize button
 135              		.loc 10 80 20 view .LVU23
 136 0004 82B0     		sub	sp, sp, #8
 137              		.cfi_def_cfa_offset 16
 138              		.loc 10 82 17 view .LVU24
 139 0006 0024     		movs	r4, #0
 140 0008 0123     		movs	r3, #1
 141 000a 0D48     		ldr	r0, .L6+4
 142 000c 2246     		mov	r2, r4
 143 000e 0968     		ldr	r1, [r1]
 144 0010 0094     		str	r4, [sp]
 145 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 146              	.LVL2:
  83:MIDIController.cpp ****     button2.Init(D1, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 147              		.loc 10 83 5 is_stmt 1 view .LVU25
 148              		.loc 10 83 17 is_stmt 0 view .LVU26
 149 0016 0B49     		ldr	r1, .L6+8
 150 0018 2246     		mov	r2, r4
 151 001a 0123     		movs	r3, #1
 152 001c 0968     		ldr	r1, [r1]
 153 001e 0A48     		ldr	r0, .L6+12
 154 0020 0094     		str	r4, [sp]
 155 0022 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 156              	.LVL3:
  84:MIDIController.cpp ****     button3.Init(D2, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 157              		.loc 10 84 5 is_stmt 1 view .LVU27
 158              		.loc 10 84 17 is_stmt 0 view .LVU28
 159 0026 0949     		ldr	r1, .L6+16
 160 0028 0123     		movs	r3, #1
 161 002a 2246     		mov	r2, r4
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 21


 162 002c 0968     		ldr	r1, [r1]
 163 002e 0848     		ldr	r0, .L6+20
 164 0030 0094     		str	r4, [sp]
 165 0032 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 166              	.LVL4:
  85:MIDIController.cpp ****     // my_fader.Init(A0, GPIO::Mode::ANALOG);
  86:MIDIController.cpp ****     // GPIO my_button;
  87:MIDIController.cpp **** }
 167              		.loc 10 87 1 view .LVU29
 168 0036 02B0     		add	sp, sp, #8
 169              		.cfi_def_cfa_offset 8
 170              		@ sp needed
 171 0038 10BD     		pop	{r4, pc}
 172              	.L7:
 173 003a 00BF     		.align	2
 174              	.L6:
 175 003c 00000000 		.word	.LANCHOR0
 176 0040 00000000 		.word	.LANCHOR1
 177 0044 00000000 		.word	.LANCHOR2
 178 0048 00000000 		.word	.LANCHOR3
 179 004c 00000000 		.word	.LANCHOR4
 180 0050 00000000 		.word	.LANCHOR5
 181              		.cfi_endproc
 182              	.LFE4682:
 184              		.section	.text._Z8testLEDsv,"ax",%progbits
 185              		.align	1
 186              		.p2align 2,,3
 187              		.global	_Z8testLEDsv
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	_Z8testLEDsv:
 193              	.LFB4683:
  88:MIDIController.cpp **** 
  89:MIDIController.cpp **** void testLEDs(){
 194              		.loc 10 89 16 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
  90:MIDIController.cpp ****     LED_R1.Init(D5, GPIO::Mode::OUTPUT);
 198              		.loc 10 90 5 view .LVU31
  89:MIDIController.cpp ****     LED_R1.Init(D5, GPIO::Mode::OUTPUT);
 199              		.loc 10 89 16 is_stmt 0 view .LVU32
 200 0000 10B5     		push	{r4, lr}
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
 204              		.loc 10 90 16 view .LVU33
 205 0002 1249     		ldr	r1, .L10
  89:MIDIController.cpp ****     LED_R1.Init(D5, GPIO::Mode::OUTPUT);
 206              		.loc 10 89 16 view .LVU34
 207 0004 82B0     		sub	sp, sp, #8
 208              		.cfi_def_cfa_offset 16
 209              		.loc 10 90 16 view .LVU35
 210 0006 0024     		movs	r4, #0
 211 0008 0122     		movs	r2, #1
 212 000a 1148     		ldr	r0, .L10+4
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 22


 213 000c 2346     		mov	r3, r4
 214 000e 0968     		ldr	r1, [r1]
 215 0010 0094     		str	r4, [sp]
 216 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 217              	.LVL5:
  91:MIDIController.cpp ****     LED_R2.Init(D6, GPIO::Mode::OUTPUT);
 218              		.loc 10 91 5 is_stmt 1 view .LVU36
 219              		.loc 10 91 16 is_stmt 0 view .LVU37
 220 0016 0F49     		ldr	r1, .L10+8
 221 0018 2346     		mov	r3, r4
 222 001a 0122     		movs	r2, #1
 223 001c 0968     		ldr	r1, [r1]
 224 001e 0E48     		ldr	r0, .L10+12
 225 0020 0094     		str	r4, [sp]
 226 0022 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 227              	.LVL6:
  92:MIDIController.cpp ****     LED_W1.Init(D7, GPIO::Mode::OUTPUT);
 228              		.loc 10 92 5 is_stmt 1 view .LVU38
 229              		.loc 10 92 16 is_stmt 0 view .LVU39
 230 0026 0D49     		ldr	r1, .L10+16
 231 0028 2346     		mov	r3, r4
 232 002a 0122     		movs	r2, #1
 233 002c 0968     		ldr	r1, [r1]
 234 002e 0C48     		ldr	r0, .L10+20
 235 0030 0094     		str	r4, [sp]
 236 0032 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 237              	.LVL7:
  93:MIDIController.cpp ****     LED_W2.Init(D8, GPIO::Mode::OUTPUT);
 238              		.loc 10 93 5 is_stmt 1 view .LVU40
 239              		.loc 10 93 16 is_stmt 0 view .LVU41
 240 0036 0B49     		ldr	r1, .L10+24
 241 0038 2346     		mov	r3, r4
 242 003a 0122     		movs	r2, #1
 243 003c 0968     		ldr	r1, [r1]
 244 003e 0A48     		ldr	r0, .L10+28
 245 0040 0094     		str	r4, [sp]
 246 0042 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 247              	.LVL8:
  94:MIDIController.cpp ****     // LED_R1.Write(true); // turn on the LED
  95:MIDIController.cpp ****     // LED_R2.Write(true); // turn on the LED
  96:MIDIController.cpp ****     // LED_W1.Write(true); // turn on the LED
  97:MIDIController.cpp ****     // LED_W2.Write(true); // turn on the LED
  98:MIDIController.cpp **** }
 248              		.loc 10 98 1 view .LVU42
 249 0046 02B0     		add	sp, sp, #8
 250              		.cfi_def_cfa_offset 8
 251              		@ sp needed
 252 0048 10BD     		pop	{r4, pc}
 253              	.L11:
 254 004a 00BF     		.align	2
 255              	.L10:
 256 004c 00000000 		.word	.LANCHOR6
 257 0050 00000000 		.word	.LANCHOR7
 258 0054 00000000 		.word	.LANCHOR8
 259 0058 00000000 		.word	.LANCHOR9
 260 005c 00000000 		.word	.LANCHOR10
 261 0060 00000000 		.word	.LANCHOR11
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 23


 262 0064 00000000 		.word	.LANCHOR12
 263 0068 00000000 		.word	.LANCHOR13
 264              		.cfi_endproc
 265              	.LFE4683:
 267              		.section	.text._Z11InitEncoderv,"ax",%progbits
 268              		.align	1
 269              		.p2align 2,,3
 270              		.global	_Z11InitEncoderv
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	_Z11InitEncoderv:
 276              	.LFB4684:
  99:MIDIController.cpp **** 
 100:MIDIController.cpp **** void InitEncoder() {
 277              		.loc 10 100 20 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 101:MIDIController.cpp ****     // Initialize encoder pins with pull-up resistors
 102:MIDIController.cpp ****     encoderA.Init(D3, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 281              		.loc 10 102 5 view .LVU44
 100:MIDIController.cpp ****     // Initialize encoder pins with pull-up resistors
 282              		.loc 10 100 20 is_stmt 0 view .LVU45
 283 0000 70B5     		push	{r4, r5, r6, lr}
 284              		.cfi_def_cfa_offset 16
 285              		.cfi_offset 4, -16
 286              		.cfi_offset 5, -12
 287              		.cfi_offset 6, -8
 288              		.cfi_offset 14, -4
 289              		.loc 10 102 18 view .LVU46
 290 0002 1049     		ldr	r1, .L14
 100:MIDIController.cpp ****     // Initialize encoder pins with pull-up resistors
 291              		.loc 10 100 20 view .LVU47
 292 0004 82B0     		sub	sp, sp, #8
 293              		.cfi_def_cfa_offset 24
 294              		.loc 10 102 18 view .LVU48
 295 0006 0024     		movs	r4, #0
 296 0008 0F4E     		ldr	r6, .L14+4
 297 000a 0123     		movs	r3, #1
 298 000c 0968     		ldr	r1, [r1]
 299 000e 2246     		mov	r2, r4
 300 0010 3046     		mov	r0, r6
 301 0012 0094     		str	r4, [sp]
 302 0014 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 303              	.LVL9:
 103:MIDIController.cpp ****     encoderB.Init(D4, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 304              		.loc 10 103 5 is_stmt 1 view .LVU49
 305              		.loc 10 103 18 is_stmt 0 view .LVU50
 306 0018 0C4D     		ldr	r5, .L14+8
 307 001a 0D49     		ldr	r1, .L14+12
 308 001c 2246     		mov	r2, r4
 309 001e 0123     		movs	r3, #1
 310 0020 2846     		mov	r0, r5
 311 0022 0968     		ldr	r1, [r1]
 312 0024 0094     		str	r4, [sp]
 313 0026 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 24


 314              	.LVL10:
 104:MIDIController.cpp ****     
 105:MIDIController.cpp ****     // Get initial state
 106:MIDIController.cpp ****     lastEncA = encoderA.Read();
 315              		.loc 10 106 5 is_stmt 1 view .LVU51
 316              		.loc 10 106 29 is_stmt 0 view .LVU52
 317 002a 3046     		mov	r0, r6
 318 002c FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 319              	.LVL11:
 320              		.loc 10 106 14 view .LVU53
 321 0030 084B     		ldr	r3, .L14+16
 322              		.loc 10 106 29 view .LVU54
 323 0032 0246     		mov	r2, r0
 107:MIDIController.cpp ****     lastEncB = encoderB.Read();
 324              		.loc 10 107 29 view .LVU55
 325 0034 2846     		mov	r0, r5
 106:MIDIController.cpp ****     lastEncB = encoderB.Read();
 326              		.loc 10 106 29 view .LVU56
 327 0036 1A60     		str	r2, [r3]
 328              		.loc 10 107 5 is_stmt 1 view .LVU57
 329              		.loc 10 107 29 is_stmt 0 view .LVU58
 330 0038 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 331              	.LVL12:
 332              		.loc 10 107 14 view .LVU59
 333 003c 064B     		ldr	r3, .L14+20
 334              		.loc 10 107 29 view .LVU60
 335 003e 1860     		str	r0, [r3]
 108:MIDIController.cpp **** }
 336              		.loc 10 108 1 view .LVU61
 337 0040 02B0     		add	sp, sp, #8
 338              		.cfi_def_cfa_offset 16
 339              		@ sp needed
 340 0042 70BD     		pop	{r4, r5, r6, pc}
 341              	.L15:
 342              		.align	2
 343              	.L14:
 344 0044 00000000 		.word	.LANCHOR14
 345 0048 00000000 		.word	.LANCHOR15
 346 004c 00000000 		.word	.LANCHOR17
 347 0050 00000000 		.word	.LANCHOR16
 348 0054 00000000 		.word	.LANCHOR18
 349 0058 00000000 		.word	.LANCHOR19
 350              		.cfi_endproc
 351              	.LFE4684:
 353              		.section	.text._Z10InitFadersv,"ax",%progbits
 354              		.align	1
 355              		.p2align 2,,3
 356              		.global	_Z10InitFadersv
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	_Z10InitFadersv:
 362              	.LFB4685:
 109:MIDIController.cpp **** 
 110:MIDIController.cpp ****  void InitFaders() {
 363              		.loc 10 110 20 is_stmt 1 view -0
 364              		.cfi_startproc
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 25


 365              		@ args = 0, pretend = 0, frame = 136
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 111:MIDIController.cpp ****         // Configure two ADC pins (using pins 21 and 22 as example)
 112:MIDIController.cpp ****         fader1cfg.InitSingle(hw.GetPin(15));  // First fader
 367              		.loc 10 112 9 view .LVU63
 110:MIDIController.cpp ****         // Configure two ADC pins (using pins 21 and 22 as example)
 368              		.loc 10 110 20 is_stmt 0 view .LVU64
 369 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 370              		.cfi_def_cfa_offset 36
 371              		.cfi_offset 4, -36
 372              		.cfi_offset 5, -32
 373              		.cfi_offset 6, -28
 374              		.cfi_offset 7, -24
 375              		.cfi_offset 8, -20
 376              		.cfi_offset 9, -16
 377              		.cfi_offset 10, -12
 378              		.cfi_offset 11, -8
 379              		.cfi_offset 14, -4
 380              		.loc 10 112 29 view .LVU65
 381 0004 0F20     		movs	r0, #15
 110:MIDIController.cpp ****         // Configure two ADC pins (using pins 21 and 22 as example)
 382              		.loc 10 110 20 view .LVU66
 383 0006 A3B0     		sub	sp, sp, #140
 384              		.cfi_def_cfa_offset 176
 385              		.loc 10 112 29 view .LVU67
 386 0008 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 387              	.LVL13:
 388 000c 0346     		mov	r3, r0	@ movhi
 389 000e DFF82CA1 		ldr	r10, .L18+16
 390 0012 0222     		movs	r2, #2
 391 0014 ADF80430 		strh	r3, [sp, #4]	@ movhi
 113:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 114:MIDIController.cpp ****         fader3cfg.InitSingle(hw.GetPin(17));  // Third fader
 115:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 116:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 117:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 118:MIDIController.cpp **** 
 119:MIDIController.cpp **** 
 120:MIDIController.cpp ****         // Initialize ADC with both configs
 121:MIDIController.cpp ****         AdcChannelConfig cfg[6] = {fader1cfg, fader2cfg, fader3cfg, knob1cfg, knob2cfg, knob3cfg};
 392              		.loc 10 121 97 view .LVU68
 393 0018 0DF1640B 		add	fp, sp, #100
 112:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 394              		.loc 10 112 29 view .LVU69
 395 001c 0199     		ldr	r1, [sp, #4]
 396 001e 5046     		mov	r0, r10
 397 0020 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 398              	.LVL14:
 113:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 399              		.loc 10 113 9 is_stmt 1 view .LVU70
 113:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 400              		.loc 10 113 29 is_stmt 0 view .LVU71
 401 0024 DFF81881 		ldr	r8, .L18+20
 402 0028 1020     		movs	r0, #16
 114:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 403              		.loc 10 114 29 view .LVU72
 404 002a 404F     		ldr	r7, .L18
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 26


 113:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 405              		.loc 10 113 29 view .LVU73
 406 002c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 407              	.LVL15:
 408 0030 ADF80800 		strh	r0, [sp, #8]	@ movhi
 409 0034 0299     		ldr	r1, [sp, #8]
 410 0036 0222     		movs	r2, #2
 411 0038 4046     		mov	r0, r8
 115:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 412              		.loc 10 115 28 view .LVU74
 413 003a 3D4E     		ldr	r6, .L18+4
 113:MIDIController.cpp ****         fader3cfg.InitSingle(hw.GetPin(17));  // Third fader
 414              		.loc 10 113 29 view .LVU75
 415 003c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 416              	.LVL16:
 114:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 417              		.loc 10 114 9 is_stmt 1 view .LVU76
 114:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 418              		.loc 10 114 29 is_stmt 0 view .LVU77
 419 0040 1120     		movs	r0, #17
 420 0042 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 421              	.LVL17:
 422 0046 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 423 004a 0399     		ldr	r1, [sp, #12]
 424 004c 0222     		movs	r2, #2
 425 004e 3846     		mov	r0, r7
 116:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 426              		.loc 10 116 28 view .LVU78
 427 0050 384D     		ldr	r5, .L18+8
 114:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 428              		.loc 10 114 29 view .LVU79
 429 0052 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 430              	.LVL18:
 115:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 431              		.loc 10 115 9 is_stmt 1 view .LVU80
 115:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 432              		.loc 10 115 28 is_stmt 0 view .LVU81
 433 0056 1220     		movs	r0, #18
 434 0058 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 435              	.LVL19:
 436 005c ADF81000 		strh	r0, [sp, #16]	@ movhi
 437 0060 0499     		ldr	r1, [sp, #16]
 438 0062 0222     		movs	r2, #2
 439 0064 3046     		mov	r0, r6
 117:MIDIController.cpp **** 
 440              		.loc 10 117 28 view .LVU82
 441 0066 344C     		ldr	r4, .L18+12
 115:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 442              		.loc 10 115 28 view .LVU83
 443 0068 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 444              	.LVL20:
 116:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 445              		.loc 10 116 9 is_stmt 1 view .LVU84
 116:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 446              		.loc 10 116 28 is_stmt 0 view .LVU85
 447 006c 1320     		movs	r0, #19
 448 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 27


 449              	.LVL21:
 450 0072 ADF81400 		strh	r0, [sp, #20]	@ movhi
 451 0076 0599     		ldr	r1, [sp, #20]
 452 0078 0222     		movs	r2, #2
 453 007a 2846     		mov	r0, r5
 122:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 454              		.loc 10 122 20 view .LVU86
 455 007c DFF8C490 		ldr	r9, .L18+24
 116:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 456              		.loc 10 116 28 view .LVU87
 457 0080 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 458              	.LVL22:
 117:MIDIController.cpp **** 
 459              		.loc 10 117 9 is_stmt 1 view .LVU88
 117:MIDIController.cpp **** 
 460              		.loc 10 117 28 is_stmt 0 view .LVU89
 461 0084 1420     		movs	r0, #20
 462 0086 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 463              	.LVL23:
 464 008a ADF81800 		strh	r0, [sp, #24]	@ movhi
 465 008e 0699     		ldr	r1, [sp, #24]
 466 0090 2046     		mov	r0, r4
 467 0092 0222     		movs	r2, #2
 468 0094 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 469              	.LVL24:
 121:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 470              		.loc 10 121 9 is_stmt 1 view .LVU90
 121:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 471              		.loc 10 121 97 is_stmt 0 view .LVU91
 472 0098 A446     		mov	ip, r4
 473 009a 07AC     		add	r4, sp, #28
 474 009c 0DF1400E 		add	lr, sp, #64
 475 00a0 BAE80F00 		ldmia	r10!, {r0, r1, r2, r3}
 476 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 477 00a6 DAF80030 		ldr	r3, [r10]
 478 00aa 2380     		strh	r3, [r4]	@ movhi
 479 00ac B8E80F00 		ldmia	r8!, {r0, r1, r2, r3}
 480 00b0 CDF83A30 		str	r3, [sp, #58]	@ unaligned
 481 00b4 B8F80030 		ldrh	r3, [r8]	@ unaligned
 482 00b8 CDF82E00 		str	r0, [sp, #46]	@ unaligned
 483 00bc CDF83210 		str	r1, [sp, #50]	@ unaligned
 484 00c0 CDF83620 		str	r2, [sp, #54]	@ unaligned
 485 00c4 ADF83E30 		strh	r3, [sp, #62]	@ unaligned
 486 00c8 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 487 00ca AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 488 00ce 3B68     		ldr	r3, [r7]
 489 00d0 AEF80030 		strh	r3, [lr]	@ movhi
 490 00d4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 491 00d6 CDF85E30 		str	r3, [sp, #94]	@ unaligned
 492 00da 3388     		ldrh	r3, [r6]	@ unaligned
 493 00dc CDF85200 		str	r0, [sp, #82]	@ unaligned
 494 00e0 CDF85610 		str	r1, [sp, #86]	@ unaligned
 495 00e4 CDF85A20 		str	r2, [sp, #90]	@ unaligned
 496 00e8 ADF86230 		strh	r3, [sp, #98]	@ unaligned
 497 00ec 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 498 00ee ABE80F00 		stmia	fp!, {r0, r1, r2, r3}
 499 00f2 2B68     		ldr	r3, [r5]
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 28


 500 00f4 ABF80030 		strh	r3, [fp]	@ movhi
 501 00f8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 502 00fc CDF87600 		str	r0, [sp, #118]	@ unaligned
 503 0100 BCF80000 		ldrh	r0, [ip]	@ unaligned
 504 0104 CDF87A10 		str	r1, [sp, #122]	@ unaligned
 505              		.loc 10 122 20 view .LVU92
 506 0108 07A9     		add	r1, sp, #28
 121:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 507              		.loc 10 121 97 view .LVU93
 508 010a CDF87E20 		str	r2, [sp, #126]	@ unaligned
 509              		.loc 10 122 20 view .LVU94
 510 010e 0622     		movs	r2, #6
 121:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 511              		.loc 10 121 97 view .LVU95
 512 0110 CDF88230 		str	r3, [sp, #130]	@ unaligned
 513              		.loc 10 122 20 view .LVU96
 514 0114 0423     		movs	r3, #4
 121:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 515              		.loc 10 121 97 view .LVU97
 516 0116 ADF88600 		strh	r0, [sp, #134]	@ unaligned
 517              		.loc 10 122 9 is_stmt 1 view .LVU98
 518              		.loc 10 122 20 is_stmt 0 view .LVU99
 519 011a 4846     		mov	r0, r9
 520 011c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 521              	.LVL25:
 123:MIDIController.cpp ****         
 124:MIDIController.cpp ****         hw.adc.Start();
 522              		.loc 10 124 9 is_stmt 1 view .LVU100
 523              		.loc 10 124 21 is_stmt 0 view .LVU101
 524 0120 4846     		mov	r0, r9
 525 0122 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 526              	.LVL26:
 125:MIDIController.cpp **** }
 527              		.loc 10 125 1 view .LVU102
 528 0126 23B0     		add	sp, sp, #140
 529              		.cfi_def_cfa_offset 36
 530              		@ sp needed
 531 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 532              	.L19:
 533              		.align	2
 534              	.L18:
 535 012c 00000000 		.word	.LANCHOR22
 536 0130 00000000 		.word	.LANCHOR23
 537 0134 00000000 		.word	.LANCHOR24
 538 0138 00000000 		.word	.LANCHOR25
 539 013c 00000000 		.word	.LANCHOR20
 540 0140 00000000 		.word	.LANCHOR21
 541 0144 18000000 		.word	.LANCHOR26+24
 542              		.cfi_endproc
 543              	.LFE4685:
 545              		.section	.rodata._Z11ReadEncoderb.str1.4,"aMS",%progbits,1
 546              		.align	2
 547              	.LC0:
 548 0000 52616E64 		.ascii	"Random Value: %d\000"
 548      6F6D2056 
 548      616C7565 
 548      3A202564 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 29


 548      00
 549              		.section	.text._Z11ReadEncoderb,"ax",%progbits
 550              		.align	1
 551              		.p2align 2,,3
 552              		.global	_Z11ReadEncoderb
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 557              	_Z11ReadEncoderb:
 558              	.LVL27:
 559              	.LFB4686:
 126:MIDIController.cpp **** 
 127:MIDIController.cpp **** // void readAccelerometer(){
 128:MIDIController.cpp **** //     // devices is an ADXL345
 129:MIDIController.cpp **** 
 130:MIDIController.cpp **** // }
 131:MIDIController.cpp **** 
 132:MIDIController.cpp **** void ReadEncoder(bool useSerialLogger) {
 560              		.loc 10 132 40 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 133:MIDIController.cpp ****     int currentA = encoderA.Read();
 564              		.loc 10 133 5 view .LVU104
 132:MIDIController.cpp ****     int currentA = encoderA.Read();
 565              		.loc 10 132 40 is_stmt 0 view .LVU105
 566 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 567              		.cfi_def_cfa_offset 24
 568              		.cfi_offset 3, -24
 569              		.cfi_offset 4, -20
 570              		.cfi_offset 5, -16
 571              		.cfi_offset 6, -12
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 132:MIDIController.cpp ****     int currentA = encoderA.Read();
 574              		.loc 10 132 40 view .LVU106
 575 0002 0646     		mov	r6, r0
 134:MIDIController.cpp ****     int currentB = encoderB.Read();
 135:MIDIController.cpp ****     
 136:MIDIController.cpp ****     // State change detected
 137:MIDIController.cpp ****     if (currentA != lastEncA || currentB != lastEncB) {
 576              		.loc 10 137 18 view .LVU107
 577 0004 144F     		ldr	r7, .L33
 133:MIDIController.cpp ****     int currentB = encoderB.Read();
 578              		.loc 10 133 33 view .LVU108
 579 0006 1548     		ldr	r0, .L33+4
 580              	.LVL28:
 133:MIDIController.cpp ****     int currentB = encoderB.Read();
 581              		.loc 10 133 33 view .LVU109
 582 0008 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 583              	.LVL29:
 584 000c 0446     		mov	r4, r0
 134:MIDIController.cpp ****     int currentB = encoderB.Read();
 585              		.loc 10 134 33 view .LVU110
 586 000e 1448     		ldr	r0, .L33+8
 587              	.LVL30:
 134:MIDIController.cpp ****     int currentB = encoderB.Read();
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 30


 588              		.loc 10 134 5 is_stmt 1 view .LVU111
 134:MIDIController.cpp ****     int currentB = encoderB.Read();
 589              		.loc 10 134 33 is_stmt 0 view .LVU112
 590 0010 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 591              	.LVL31:
 592              		.loc 10 137 5 view .LVU113
 593 0014 3B68     		ldr	r3, [r7]
 134:MIDIController.cpp ****     int currentB = encoderB.Read();
 594              		.loc 10 134 33 view .LVU114
 595 0016 0546     		mov	r5, r0
 596              	.LVL32:
 597              		.loc 10 137 5 is_stmt 1 view .LVU115
 598 0018 A342     		cmp	r3, r4
 599 001a 10D0     		beq	.L32
 138:MIDIController.cpp ****         // CW: A leads B
 139:MIDIController.cpp ****         if (currentA != lastEncA) {
 600              		.loc 10 139 9 view .LVU116
 140:MIDIController.cpp ****             if (currentA != currentB) {
 601              		.loc 10 140 13 view .LVU117
 141:MIDIController.cpp ****                 encoderPos++;
 602              		.loc 10 141 27 is_stmt 0 view .LVU118
 603 001c 114A     		ldr	r2, .L33+12
 140:MIDIController.cpp ****             if (currentA != currentB) {
 604              		.loc 10 140 13 view .LVU119
 605 001e 8442     		cmp	r4, r0
 606              		.loc 10 141 17 is_stmt 1 view .LVU120
 607              		.loc 10 141 27 is_stmt 0 view .LVU121
 608 0020 1368     		ldr	r3, [r2]
 609 0022 14BF     		ite	ne
 610 0024 0133     		addne	r3, r3, #1
 142:MIDIController.cpp ****             } else {
 143:MIDIController.cpp ****                 encoderPos--;
 611              		.loc 10 143 17 is_stmt 1 view .LVU122
 144:MIDIController.cpp ****             }
 145:MIDIController.cpp ****             // hw.PrintLine("Encoder Position: %d", encoderPos);
 146:MIDIController.cpp ****             // i want the encoder value to be the seed value of random to be used elsewhere
 147:MIDIController.cpp **** 
 148:MIDIController.cpp **** 
 149:MIDIController.cpp ****             encoderPos = std::max(0, std::min(127, encoderPos));
 612              		.loc 10 149 13 view .LVU123
 613              	.LVL33:
 143:MIDIController.cpp ****             }
 614              		.loc 10 143 27 is_stmt 0 view .LVU124
 615 0026 03F1FF33 		addeq	r3, r3, #-1
 616 002a 83F30700 		usat	r0, #7, r3
 617              	.LVL34:
 618              		.loc 10 149 24 view .LVU125
 619 002e 1060     		str	r0, [r2]
 150:MIDIController.cpp **** 
 151:MIDIController.cpp **** 
 152:MIDIController.cpp ****             srand(encoderPos);
 620              		.loc 10 152 13 is_stmt 1 view .LVU126
 621              		.loc 10 152 18 is_stmt 0 view .LVU127
 622 0030 FFF7FEFF 		bl	srand
 623              	.LVL35:
 153:MIDIController.cpp ****             if (useSerialLogger) { // if serial logger is enabled
 624              		.loc 10 153 13 is_stmt 1 view .LVU128
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 31


 625 0034 46B9     		cbnz	r6, .L29
 626              	.L31:
 627 0036 0C4B     		ldr	r3, .L33+16
 628              	.L23:
 154:MIDIController.cpp ****                 hw.PrintLine("Random Value: %d", rand());
 155:MIDIController.cpp ****             }
 156:MIDIController.cpp ****         }
 157:MIDIController.cpp ****         
 158:MIDIController.cpp ****         lastEncA = currentA;
 629              		.loc 10 158 9 view .LVU129
 630              		.loc 10 158 18 is_stmt 0 view .LVU130
 631 0038 3C60     		str	r4, [r7]
 159:MIDIController.cpp ****         lastEncB = currentB;
 632              		.loc 10 159 9 is_stmt 1 view .LVU131
 633              		.loc 10 159 18 is_stmt 0 view .LVU132
 634 003a 1D60     		str	r5, [r3]
 160:MIDIController.cpp ****     }
 161:MIDIController.cpp **** }
 635              		.loc 10 161 1 view .LVU133
 636 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 637              	.LVL36:
 638              	.L32:
 137:MIDIController.cpp ****         // CW: A leads B
 639              		.loc 10 137 42 discriminator 1 view .LVU134
 640 003e 0A4B     		ldr	r3, .L33+16
 137:MIDIController.cpp ****         // CW: A leads B
 641              		.loc 10 137 30 discriminator 1 view .LVU135
 642 0040 1A68     		ldr	r2, [r3]
 643 0042 8242     		cmp	r2, r0
 644 0044 F8D1     		bne	.L23
 645              		.loc 10 161 1 view .LVU136
 646 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 647              	.LVL37:
 648              	.L29:
 154:MIDIController.cpp ****             }
 649              		.loc 10 154 17 is_stmt 1 view .LVU137
 154:MIDIController.cpp ****             }
 650              		.loc 10 154 29 is_stmt 0 view .LVU138
 651 0048 FFF7FEFF 		bl	rand
 652              	.LVL38:
 154:MIDIController.cpp ****             }
 653              		.loc 10 154 29 view .LVU139
 654 004c 0146     		mov	r1, r0
 655              	.LVL39:
 656              	.LBB424:
 657              	.LBI424:
  23:../../libDaisy/src/daisy_seed.h **** 
  24:../../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy/src/daisy_seed.h ****      */
  27:../../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../../libDaisy/src/daisy_seed.h **** 
  29:../../libDaisy/src/daisy_seed.h ****     /** 
  30:../../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy/src/daisy_seed.h **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 32


  34:../../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy/src/daisy_seed.h ****     */
  38:../../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy/src/daisy_seed.h **** 
  40:../../libDaisy/src/daisy_seed.h ****     /** 
  41:../../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy/src/daisy_seed.h ****     */
  43:../../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy/src/daisy_seed.h **** 
  45:../../libDaisy/src/daisy_seed.h ****     /** 
  46:../../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy/src/daisy_seed.h ****     */
  49:../../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy/src/daisy_seed.h **** 
  51:../../libDaisy/src/daisy_seed.h ****     /** 
  52:../../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy/src/daisy_seed.h ****     */
  55:../../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy/src/daisy_seed.h **** 
  57:../../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy/src/daisy_seed.h ****     */
  61:../../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy/src/daisy_seed.h **** 
  63:../../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy/src/daisy_seed.h ****     */
  68:../../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy/src/daisy_seed.h **** 
  70:../../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy/src/daisy_seed.h ****      */
  72:../../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy/src/daisy_seed.h **** 
  74:../../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy/src/daisy_seed.h ****      */
  76:../../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy/src/daisy_seed.h **** 
  78:../../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy/src/daisy_seed.h **** 
  81:../../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy/src/daisy_seed.h ****      */
  84:../../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy/src/daisy_seed.h **** 
  86:../../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy/src/daisy_seed.h ****      */
  88:../../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy/src/daisy_seed.h **** 
  90:../../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 33


  91:../../libDaisy/src/daisy_seed.h ****      */
  92:../../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy/src/daisy_seed.h **** 
  94:../../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy/src/daisy_seed.h **** 
  97:../../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy/src/daisy_seed.h **** 
 100:../../libDaisy/src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../../libDaisy/src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../../libDaisy/src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../../libDaisy/src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../../libDaisy/src/daisy_seed.h ****      */
 105:../../libDaisy/src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../../libDaisy/src/daisy_seed.h **** 
 107:../../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../../libDaisy/src/daisy_seed.h ****      */
 109:../../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 110:../../libDaisy/src/daisy_seed.h **** 
 111:../../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../../libDaisy/src/daisy_seed.h ****      */
 113:../../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../../libDaisy/src/daisy_seed.h **** 
 115:../../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 116:../../libDaisy/src/daisy_seed.h ****      */
 117:../../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 118:../../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../../libDaisy/src/daisy_seed.h ****     {
 120:../../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 121:../../libDaisy/src/daisy_seed.h ****     }
 122:../../libDaisy/src/daisy_seed.h **** 
 123:../../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../../libDaisy/src/daisy_seed.h ****     */
 125:../../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 126:../../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 658              		.loc 1 126 17 is_stmt 1 view .LVU140
 659              	.LBB425:
 127:../../libDaisy/src/daisy_seed.h ****     {
 128:../../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 660              		.loc 1 128 23 is_stmt 0 view .LVU141
 661 004e 0748     		ldr	r0, .L33+20
 662              	.LVL40:
 663              		.loc 1 128 23 view .LVU142
 664 0050 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 665              	.LVL41:
 666              		.loc 1 128 23 view .LVU143
 667 0054 EFE7     		b	.L31
 668              	.L34:
 669 0056 00BF     		.align	2
 670              	.L33:
 671 0058 00000000 		.word	.LANCHOR18
 672 005c 00000000 		.word	.LANCHOR15
 673 0060 00000000 		.word	.LANCHOR17
 674 0064 00000000 		.word	.LANCHOR27
 675 0068 00000000 		.word	.LANCHOR19
 676 006c 00000000 		.word	.LC0
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 34


 677              	.LBE425:
 678              	.LBE424:
 679              		.cfi_endproc
 680              	.LFE4686:
 682              		.section	.text._Z14remapWithCurveff,"ax",%progbits
 683              		.align	1
 684              		.p2align 2,,3
 685              		.global	_Z14remapWithCurveff
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 690              	_Z14remapWithCurveff:
 691              	.LVL42:
 692              	.LFB4689:
 162:MIDIController.cpp **** 
 163:MIDIController.cpp **** float remapWithCurve(float inputVal, float slopeVal) {
 693              		.loc 10 163 54 is_stmt 1 view -0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 164:MIDIController.cpp ****     // Map slopeVal (0-1023) to range [0, 1]
 165:MIDIController.cpp ****     float normalizedSlope = slopeVal / 1023.0;
 697              		.loc 10 165 5 view .LVU145
 166:MIDIController.cpp **** 
 167:MIDIController.cpp ****     // Calculate the curve factor k
 168:MIDIController.cpp ****     float k = pow(2, (2 * normalizedSlope - 1));
 698              		.loc 10 168 5 view .LVU146
 165:MIDIController.cpp **** 
 699              		.loc 10 165 11 is_stmt 0 view .LVU147
 700 0000 DFED1A7A 		vldr.32	s15, .L44
 701              		.loc 10 168 18 view .LVU148
 702 0004 B0EE007A 		vmov.f32	s14, #2.0e+0
 703 0008 BFEE001A 		vmov.f32	s2, #-1.0e+0
 165:MIDIController.cpp **** 
 704              		.loc 10 165 11 view .LVU149
 705 000c C0EEA76A 		vdiv.f32	s13, s1, s15
 706              	.LVL43:
 163:MIDIController.cpp ****     // Map slopeVal (0-1023) to range [0, 1]
 707              		.loc 10 163 54 view .LVU150
 708 0010 08B5     		push	{r3, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 3, -8
 711              		.cfi_offset 14, -4
 712 0012 2DED028B 		vpush.64	{d8}
 713              		.cfi_def_cfa_offset 16
 714              		.cfi_offset 80, -16
 715              		.cfi_offset 81, -12
 163:MIDIController.cpp ****     // Map slopeVal (0-1023) to range [0, 1]
 716              		.loc 10 163 54 view .LVU151
 717 0016 B0EE408A 		vmov.f32	s16, s0
 718              	.LBB426:
 719              	.LBB427:
 720              		.file 11 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 35


   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** /** @file include/cmath
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  as macros in C).
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  */
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #pragma GCC system_header
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/c++config.h>
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <ext/type_traits.h>
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include_next <math.h>
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/std_abs.h>
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef div
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef acos
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef asin
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan2
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ceil
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cos
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cosh
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef exp
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 36


  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fabs
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef floor
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fmod
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef frexp
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ldexp
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log10
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef modf
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef pow
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sin
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sinh
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sqrt
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tan
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tanh
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** extern "C++"
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::acos;
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(float __x)
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosf(__x); }
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(long double __x)
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosl(__x); }
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     acos(_Tp __x)
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_acos(__x); }
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::asin;
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(float __x)
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinf(__x); }
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(long double __x)
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinl(__x); }
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     asin(_Tp __x)
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 37


 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_asin(__x); }
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(float __x)
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanf(__x); }
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(long double __x)
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanl(__x); }
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan(_Tp __x)
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_atan(__x); }
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan2;
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(float __y, float __x)
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(long double __y, long double __x)
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ceil;
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(float __x)
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(long double __x)
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceill(__x); }
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 38


 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ceil(_Tp __x)
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ceil(__x); }
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cos;
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(float __x)
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(long double __x)
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosl(__x); }
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cos(_Tp __x)
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cos(__x); }
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cosh;
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(float __x)
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshf(__x); }
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(long double __x)
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshl(__x); }
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cosh(_Tp __x)
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cosh(__x); }
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::exp;
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(float __x)
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expf(__x); }
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(long double __x)
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expl(__x); }
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 39


 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     exp(_Tp __x)
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_exp(__x); }
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fabs;
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(float __x)
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(long double __x)
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fabs(_Tp __x)
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_fabs(__x); }
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::floor;
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(float __x)
 261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorf(__x); }
 262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(long double __x)
 265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorl(__x); }
 266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     floor(_Tp __x)
 273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_floor(__x); }
 274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fmod;
 276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(float __x, float __y)
 280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(long double __x, long double __y)
 284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 40


 290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::frexp;
 297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(float __x, int* __exp)
 301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(long double __x, int* __exp)
 305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ldexp;
 316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(float __x, int __exp)
 320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(long double __x, int __exp)
 324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log;
 335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(float __x)
 339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logf(__x); }
 340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(long double __x)
 343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logl(__x); }
 344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 41


 347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log(_Tp __x)
 351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log(__x); }
 352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log10;
 354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(float __x)
 358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10f(__x); }
 359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(long double __x)
 362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10l(__x); }
 363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log10(_Tp __x)
 370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log10(__x); }
 371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 372:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::modf;
 373:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 374:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 376:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(float __x, float* __iptr)
 377:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 379:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 380:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 383:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 384:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::pow;
 385:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 386:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, float __y)
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 391:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, long double __y)
 393:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 395:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #if __cplusplus < 201103L
 396:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline double
 399:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(double __x, int __i)
 400:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 402:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 403:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, int __n)
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 42


 404:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 406:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 407:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, int __n)
 408:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 410:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 411:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 412:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 413:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 417:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return pow(__type(__x), __type(__y));
 721              		.loc 11 418 17 view .LVU152
 722 001a B0EE000B 		vmov.f64	d0, #2.0e+0
 723              	.LVL44:
 724              		.loc 11 418 17 view .LVU153
 725              	.LBE427:
 726              	.LBE426:
 727              		.loc 10 168 18 view .LVU154
 728 001e A6EE871A 		vfma.f32	s2, s13, s14
 729              	.LVL45:
 730              	.LBB429:
 731              	.LBI426:
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 732              		.loc 11 415 5 is_stmt 1 view .LVU155
 733              	.LBB428:
 734              		.loc 11 418 17 is_stmt 0 view .LVU156
 735 0022 B7EEC11A 		vcvt.f64.f32	d1, s2
 736              	.LVL46:
 737              		.loc 11 418 17 view .LVU157
 738 0026 FFF7FEFF 		bl	pow
 739              	.LVL47:
 740              		.loc 11 418 17 view .LVU158
 741              	.LBE428:
 742              	.LBE429:
 169:MIDIController.cpp **** 
 170:MIDIController.cpp ****     // Apply the curve based on k
 171:MIDIController.cpp ****     if (k < 1) {
 743              		.loc 10 171 5 view .LVU159
 744 002a F7EE007A 		vmov.f32	s15, #1.0e+0
 168:MIDIController.cpp **** 
 745              		.loc 10 168 47 view .LVU160
 746 002e F7EEC00B 		vcvt.f32.f64	s1, d0
 747              	.LVL48:
 748              		.loc 10 171 5 is_stmt 1 view .LVU161
 749 0032 F4EEE70A 		vcmpe.f32	s1, s15
 750 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 751 003a 0FD4     		bmi	.L42
 172:MIDIController.cpp ****         // Logarithmic mapping
 173:MIDIController.cpp ****         return pow(inputVal, k);
 174:MIDIController.cpp ****     } else if (k == 1) {
 752              		.loc 10 174 12 view .LVU162
 753 003c F4EE670A 		vcmp.f32	s1, s15
 175:MIDIController.cpp ****         // Linear mapping
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 43


 176:MIDIController.cpp ****         return inputVal;
 177:MIDIController.cpp ****     } else {
 178:MIDIController.cpp ****         // Exponential mapping
 179:MIDIController.cpp ****         return pow(inputVal, k);
 180:MIDIController.cpp ****     }
 181:MIDIController.cpp **** }
 754              		.loc 10 181 1 is_stmt 0 view .LVU163
 755 0040 B0EE480A 		vmov.f32	s0, s16
 174:MIDIController.cpp ****         // Linear mapping
 756              		.loc 10 174 12 view .LVU164
 757 0044 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 758 0048 02D1     		bne	.L43
 759              		.loc 10 181 1 view .LVU165
 760 004a BDEC028B 		vldm	sp!, {d8}
 761              		.cfi_remember_state
 762              		.cfi_restore 80
 763              		.cfi_restore 81
 764              		.cfi_def_cfa_offset 8
 765              	.LVL49:
 766              		.loc 10 181 1 view .LVU166
 767 004e 08BD     		pop	{r3, pc}
 768              	.L43:
 769              		.cfi_restore_state
 179:MIDIController.cpp ****     }
 770              		.loc 10 179 9 is_stmt 1 view .LVU167
 771              	.LVL50:
 772              	.LBB430:
 773              	.LBI430:
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 774              		.loc 11 388 3 view .LVU168
 775              	.LBB431:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 776              		.loc 11 389 5 view .LVU169
 777              	.LBE431:
 778              	.LBE430:
 779              		.loc 10 181 1 is_stmt 0 view .LVU170
 780 0050 BDEC028B 		vldm	sp!, {d8}
 781              		.cfi_remember_state
 782              		.cfi_restore 80
 783              		.cfi_restore 81
 784              		.cfi_def_cfa_offset 8
 785 0054 BDE80840 		pop	{r3, lr}
 786              		.cfi_restore 14
 787              		.cfi_restore 3
 788              		.cfi_def_cfa_offset 0
 789              	.LBB433:
 790              	.LBB432:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 791              		.loc 11 389 26 view .LVU171
 792 0058 FFF7FEBF 		b	powf
 793              	.LVL51:
 794              	.L42:
 795              		.cfi_restore_state
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 796              		.loc 11 389 26 view .LVU172
 797              	.LBE432:
 798              	.LBE433:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 44


 173:MIDIController.cpp ****     } else if (k == 1) {
 799              		.loc 10 173 9 is_stmt 1 view .LVU173
 800              	.LBB434:
 801              	.LBI434:
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 802              		.loc 11 388 3 view .LVU174
 803              	.LBB435:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 804              		.loc 11 389 5 view .LVU175
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 805              		.loc 11 389 26 is_stmt 0 view .LVU176
 806 005c B0EE480A 		vmov.f32	s0, s16
 807              	.LBE435:
 808              	.LBE434:
 809              		.loc 10 181 1 view .LVU177
 810 0060 BDEC028B 		vldm	sp!, {d8}
 811              		.cfi_restore 80
 812              		.cfi_restore 81
 813              		.cfi_def_cfa_offset 8
 814              	.LVL52:
 815              		.loc 10 181 1 view .LVU178
 816 0064 BDE80840 		pop	{r3, lr}
 817              		.cfi_restore 14
 818              		.cfi_restore 3
 819              		.cfi_def_cfa_offset 0
 820              	.LBB437:
 821              	.LBB436:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 822              		.loc 11 389 26 view .LVU179
 823 0068 FFF7FEBF 		b	powf
 824              	.LVL53:
 825              	.L45:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 826              		.loc 11 389 26 view .LVU180
 827              		.align	2
 828              	.L44:
 829 006c 00C07F44 		.word	1149222912
 830              	.LBE436:
 831              	.LBE437:
 832              		.cfi_endproc
 833              	.LFE4689:
 835              		.section	.text._Z10UpdateLEDsv,"ax",%progbits
 836              		.align	1
 837              		.p2align 2,,3
 838              		.global	_Z10UpdateLEDsv
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 843              	_Z10UpdateLEDsv:
 844              	.LFB4690:
 182:MIDIController.cpp **** 
 183:MIDIController.cpp **** // void OscillateLEDs() {
 184:MIDIController.cpp **** //     static uint32_t last_update = 0;
 185:MIDIController.cpp **** //     static uint8_t brightness = 0;
 186:MIDIController.cpp **** //     static bool increasing = true;
 187:MIDIController.cpp ****     
 188:MIDIController.cpp **** //     if (!oscillate_leds) {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 45


 189:MIDIController.cpp **** //         LED_W1.Write(0);
 190:MIDIController.cpp **** //         LED_W2.Write(0);
 191:MIDIController.cpp **** //         return;
 192:MIDIController.cpp **** //     }
 193:MIDIController.cpp ****     
 194:MIDIController.cpp **** //     uint32_t now = System::GetNow();
 195:MIDIController.cpp **** //     if (now - last_update > 5) {
 196:MIDIController.cpp **** //         if (increasing) {
 197:MIDIController.cpp **** //             brightness++;
 198:MIDIController.cpp **** //             if (brightness >= 100) increasing = false;
 199:MIDIController.cpp **** //         } else {
 200:MIDIController.cpp **** //             brightness--;
 201:MIDIController.cpp **** //             if (brightness == 0) increasing = true;
 202:MIDIController.cpp **** //         }
 203:MIDIController.cpp ****         
 204:MIDIController.cpp **** //         float pwm = brightness / 100.0f;
 205:MIDIController.cpp **** //         LED_W1.Write(pwm);
 206:MIDIController.cpp **** //         LED_W2.Write(pwm);
 207:MIDIController.cpp ****         
 208:MIDIController.cpp **** //         last_update = now;
 209:MIDIController.cpp **** //     }
 210:MIDIController.cpp **** // }
 211:MIDIController.cpp **** 
 212:MIDIController.cpp **** 
 213:MIDIController.cpp **** // float remapWithCurve(float inputVal, float slopeVal) {
 214:MIDIController.cpp **** //     // Map slopeVal (0-1023) to range [0, 1]
 215:MIDIController.cpp **** //     float normalizedSlope = slopeVal / 1023.0;
 216:MIDIController.cpp **** 
 217:MIDIController.cpp **** //     // Use 3 as base for medium curve intensity
 218:MIDIController.cpp **** //     float k = pow(3, (2 * normalizedSlope - 1));
 219:MIDIController.cpp **** 
 220:MIDIController.cpp **** //     // Apply curve with moderate shaping
 221:MIDIController.cpp **** //     if (k < 1) {
 222:MIDIController.cpp **** //         // Moderate logarithmic curve
 223:MIDIController.cpp **** //         return pow(inputVal, k * 0.75f);  // 0.75 for gentler log curve
 224:MIDIController.cpp **** //     } else if (k == 1) {
 225:MIDIController.cpp **** //         return inputVal;
 226:MIDIController.cpp **** //     } else {
 227:MIDIController.cpp **** //         // Moderate exponential curve
 228:MIDIController.cpp **** //         return pow(inputVal, k * 1.5f);   // 1.5 for gentler exp curve
 229:MIDIController.cpp **** //     }
 230:MIDIController.cpp **** // }
 231:MIDIController.cpp **** void UpdateLEDs() {
 845              		.loc 10 231 19 is_stmt 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 232:MIDIController.cpp ****     static uint32_t last_toggle = 0;
 849              		.loc 10 232 5 view .LVU182
 233:MIDIController.cpp ****     static uint8_t led_position = 0;
 850              		.loc 10 233 5 view .LVU183
 234:MIDIController.cpp ****     static bool led_state = false;
 851              		.loc 10 234 5 view .LVU184
 235:MIDIController.cpp ****     uint32_t now = System::GetNow();
 852              		.loc 10 235 5 view .LVU185
 231:MIDIController.cpp ****     static uint32_t last_toggle = 0;
 853              		.loc 10 231 19 is_stmt 0 view .LVU186
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 46


 854 0000 70B5     		push	{r4, r5, r6, lr}
 855              		.cfi_def_cfa_offset 16
 856              		.cfi_offset 4, -16
 857              		.cfi_offset 5, -12
 858              		.cfi_offset 6, -8
 859              		.cfi_offset 14, -4
 860              		.loc 10 235 34 view .LVU187
 861 0002 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 862              	.LVL54:
 236:MIDIController.cpp **** 
 237:MIDIController.cpp ****     switch(current_led_mode) {
 863              		.loc 10 237 12 view .LVU188
 864 0006 394B     		ldr	r3, .L55
 235:MIDIController.cpp **** 
 865              		.loc 10 235 34 view .LVU189
 866 0008 0446     		mov	r4, r0
 867              	.LVL55:
 868              		.loc 10 237 5 is_stmt 1 view .LVU190
 869 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 870 000c 032B     		cmp	r3, #3
 871 000e 08D8     		bhi	.L46
 872 0010 DFE803F0 		tbb	[pc, r3]
 873              	.L49:
 874 0014 4A       		.byte	(.L52-.L49)/2
 875 0015 02       		.byte	(.L51-.L49)/2
 876 0016 37       		.byte	(.L50-.L49)/2
 877 0017 08       		.byte	(.L48-.L49)/2
 878              		.p2align 1
 879              	.L51:
 238:MIDIController.cpp ****         case RANDOM_LFO:
 880              		.loc 10 238 9 view .LVU191
 239:MIDIController.cpp ****             if (now - last_toggle > 100) {
 881              		.loc 10 239 13 view .LVU192
 882              		.loc 10 239 21 is_stmt 0 view .LVU193
 883 0018 354D     		ldr	r5, .L55+4
 884 001a 2B68     		ldr	r3, [r5]
 885 001c C31A     		subs	r3, r0, r3
 886              		.loc 10 239 13 view .LVU194
 887 001e 642B     		cmp	r3, #100
 888 0020 54D8     		bhi	.L54
 889              	.L46:
 240:MIDIController.cpp ****                 led_state = !led_state;
 241:MIDIController.cpp ****                 LED_R1.Write(led_state);
 242:MIDIController.cpp ****                 LED_R2.Write(!led_state);  // Alternate red LEDs
 243:MIDIController.cpp ****                 last_toggle = now;
 244:MIDIController.cpp ****             }
 245:MIDIController.cpp ****             break;
 246:MIDIController.cpp **** 
 247:MIDIController.cpp ****         case UNISON_BLINK:
 248:MIDIController.cpp ****             if (now - last_toggle > 200) {
 249:MIDIController.cpp ****                 led_state = !led_state;
 250:MIDIController.cpp ****                 LED_W1.Write(led_state);
 251:MIDIController.cpp ****                 LED_W2.Write(led_state);
 252:MIDIController.cpp ****                 last_toggle = now;
 253:MIDIController.cpp ****             }
 254:MIDIController.cpp ****             break;
 255:MIDIController.cpp **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 47


 256:MIDIController.cpp ****         case CHORUS_CYCLE:
 257:MIDIController.cpp ****             if (now - last_toggle > 150) {
 258:MIDIController.cpp ****                 LED_R1.Write(led_position == 0);
 259:MIDIController.cpp ****                 LED_R2.Write(led_position == 1);
 260:MIDIController.cpp ****                 LED_W1.Write(led_position == 2);
 261:MIDIController.cpp ****                 LED_W2.Write(led_position == 3);
 262:MIDIController.cpp ****                 led_position = (led_position + 1) % 4;
 263:MIDIController.cpp ****                 last_toggle = now;
 264:MIDIController.cpp ****             }
 265:MIDIController.cpp ****             break;
 266:MIDIController.cpp **** 
 267:MIDIController.cpp ****         case OFF:
 268:MIDIController.cpp ****             LED_R1.Write(false);
 269:MIDIController.cpp ****             LED_R2.Write(false);
 270:MIDIController.cpp ****             LED_W1.Write(false);
 271:MIDIController.cpp ****             LED_W2.Write(false);
 272:MIDIController.cpp ****             break;
 273:MIDIController.cpp ****     }
 274:MIDIController.cpp **** }
 890              		.loc 10 274 1 view .LVU195
 891 0022 70BD     		pop	{r4, r5, r6, pc}
 892              	.L48:
 256:MIDIController.cpp ****             if (now - last_toggle > 150) {
 893              		.loc 10 256 9 is_stmt 1 view .LVU196
 257:MIDIController.cpp ****                 LED_R1.Write(led_position == 0);
 894              		.loc 10 257 13 view .LVU197
 257:MIDIController.cpp ****                 LED_R1.Write(led_position == 0);
 895              		.loc 10 257 21 is_stmt 0 view .LVU198
 896 0024 324D     		ldr	r5, .L55+4
 897 0026 2B68     		ldr	r3, [r5]
 898 0028 C31A     		subs	r3, r0, r3
 257:MIDIController.cpp ****                 LED_R1.Write(led_position == 0);
 899              		.loc 10 257 13 view .LVU199
 900 002a 962B     		cmp	r3, #150
 901 002c F9D9     		bls	.L46
 258:MIDIController.cpp ****                 LED_R2.Write(led_position == 1);
 902              		.loc 10 258 17 is_stmt 1 view .LVU200
 258:MIDIController.cpp ****                 LED_R2.Write(led_position == 1);
 903              		.loc 10 258 29 is_stmt 0 view .LVU201
 904 002e 314E     		ldr	r6, .L55+8
 905 0030 3148     		ldr	r0, .L55+12
 906              	.LVL56:
 258:MIDIController.cpp ****                 LED_R2.Write(led_position == 1);
 907              		.loc 10 258 29 view .LVU202
 908 0032 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 909 0034 B1FA81F1 		clz	r1, r1
 910 0038 4909     		lsrs	r1, r1, #5
 911 003a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 912              	.LVL57:
 259:MIDIController.cpp ****                 LED_W1.Write(led_position == 2);
 913              		.loc 10 259 17 is_stmt 1 view .LVU203
 259:MIDIController.cpp ****                 LED_W1.Write(led_position == 2);
 914              		.loc 10 259 29 is_stmt 0 view .LVU204
 915 003e 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 916 0040 2E48     		ldr	r0, .L55+16
 917 0042 A1F10101 		sub	r1, #1
 918 0046 B1FA81F1 		clz	r1, r1
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 48


 919 004a 4909     		lsrs	r1, r1, #5
 920 004c FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 921              	.LVL58:
 260:MIDIController.cpp ****                 LED_W2.Write(led_position == 3);
 922              		.loc 10 260 17 is_stmt 1 view .LVU205
 260:MIDIController.cpp ****                 LED_W2.Write(led_position == 3);
 923              		.loc 10 260 29 is_stmt 0 view .LVU206
 924 0050 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 925 0052 2B48     		ldr	r0, .L55+20
 926 0054 A1F10201 		sub	r1, #2
 927 0058 B1FA81F1 		clz	r1, r1
 928 005c 4909     		lsrs	r1, r1, #5
 929 005e FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 930              	.LVL59:
 261:MIDIController.cpp ****                 led_position = (led_position + 1) % 4;
 931              		.loc 10 261 17 is_stmt 1 view .LVU207
 261:MIDIController.cpp ****                 led_position = (led_position + 1) % 4;
 932              		.loc 10 261 29 is_stmt 0 view .LVU208
 933 0062 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 934 0064 2748     		ldr	r0, .L55+24
 935 0066 A1F10301 		sub	r1, #3
 936 006a B1FA81F1 		clz	r1, r1
 937 006e 4909     		lsrs	r1, r1, #5
 938 0070 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 939              	.LVL60:
 262:MIDIController.cpp ****                 last_toggle = now;
 940              		.loc 10 262 17 is_stmt 1 view .LVU209
 262:MIDIController.cpp ****                 last_toggle = now;
 941              		.loc 10 262 33 is_stmt 0 view .LVU210
 942 0074 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 263:MIDIController.cpp ****             }
 943              		.loc 10 263 29 view .LVU211
 944 0076 2C60     		str	r4, [r5]
 262:MIDIController.cpp ****                 last_toggle = now;
 945              		.loc 10 262 46 view .LVU212
 946 0078 0133     		adds	r3, r3, #1
 262:MIDIController.cpp ****                 last_toggle = now;
 947              		.loc 10 262 51 view .LVU213
 948 007a 03F00303 		and	r3, r3, #3
 262:MIDIController.cpp ****                 last_toggle = now;
 949              		.loc 10 262 30 view .LVU214
 950 007e 3370     		strb	r3, [r6]
 263:MIDIController.cpp ****             }
 951              		.loc 10 263 17 is_stmt 1 view .LVU215
 952              		.loc 10 274 1 is_stmt 0 view .LVU216
 953 0080 70BD     		pop	{r4, r5, r6, pc}
 954              	.LVL61:
 955              	.L50:
 247:MIDIController.cpp ****             if (now - last_toggle > 200) {
 956              		.loc 10 247 9 is_stmt 1 view .LVU217
 248:MIDIController.cpp ****                 led_state = !led_state;
 957              		.loc 10 248 13 view .LVU218
 248:MIDIController.cpp ****                 led_state = !led_state;
 958              		.loc 10 248 21 is_stmt 0 view .LVU219
 959 0082 1B4D     		ldr	r5, .L55+4
 960 0084 2B68     		ldr	r3, [r5]
 961 0086 C31A     		subs	r3, r0, r3
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 49


 248:MIDIController.cpp ****                 led_state = !led_state;
 962              		.loc 10 248 13 view .LVU220
 963 0088 C82B     		cmp	r3, #200
 964 008a CAD9     		bls	.L46
 249:MIDIController.cpp ****                 LED_W1.Write(led_state);
 965              		.loc 10 249 17 is_stmt 1 view .LVU221
 249:MIDIController.cpp ****                 LED_W1.Write(led_state);
 966              		.loc 10 249 29 is_stmt 0 view .LVU222
 967 008c 1E4E     		ldr	r6, .L55+28
 250:MIDIController.cpp ****                 LED_W2.Write(led_state);
 968              		.loc 10 250 29 view .LVU223
 969 008e 1C48     		ldr	r0, .L55+20
 970              	.LVL62:
 249:MIDIController.cpp ****                 LED_W1.Write(led_state);
 971              		.loc 10 249 29 view .LVU224
 972 0090 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 973 0092 81F00101 		eor	r1, r1, #1
 249:MIDIController.cpp ****                 LED_W1.Write(led_state);
 974              		.loc 10 249 27 view .LVU225
 975 0096 3170     		strb	r1, [r6]
 250:MIDIController.cpp ****                 LED_W2.Write(led_state);
 976              		.loc 10 250 17 is_stmt 1 view .LVU226
 250:MIDIController.cpp ****                 LED_W2.Write(led_state);
 977              		.loc 10 250 29 is_stmt 0 view .LVU227
 978 0098 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 979              	.LVL63:
 251:MIDIController.cpp ****                 last_toggle = now;
 980              		.loc 10 251 17 is_stmt 1 view .LVU228
 251:MIDIController.cpp ****                 last_toggle = now;
 981              		.loc 10 251 29 is_stmt 0 view .LVU229
 982 009c 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 983 009e 1948     		ldr	r0, .L55+24
 984 00a0 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 985              	.LVL64:
 252:MIDIController.cpp ****             }
 986              		.loc 10 252 17 is_stmt 1 view .LVU230
 252:MIDIController.cpp ****             }
 987              		.loc 10 252 29 is_stmt 0 view .LVU231
 988 00a4 2C60     		str	r4, [r5]
 989              		.loc 10 274 1 view .LVU232
 990 00a6 70BD     		pop	{r4, r5, r6, pc}
 991              	.LVL65:
 992              	.L52:
 267:MIDIController.cpp ****             LED_R1.Write(false);
 993              		.loc 10 267 9 is_stmt 1 view .LVU233
 268:MIDIController.cpp ****             LED_R2.Write(false);
 994              		.loc 10 268 13 view .LVU234
 268:MIDIController.cpp ****             LED_R2.Write(false);
 995              		.loc 10 268 25 is_stmt 0 view .LVU235
 996 00a8 0021     		movs	r1, #0
 997 00aa 1348     		ldr	r0, .L55+12
 998              	.LVL66:
 268:MIDIController.cpp ****             LED_R2.Write(false);
 999              		.loc 10 268 25 view .LVU236
 1000 00ac FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1001              	.LVL67:
 269:MIDIController.cpp ****             LED_W1.Write(false);
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 50


 1002              		.loc 10 269 13 is_stmt 1 view .LVU237
 269:MIDIController.cpp ****             LED_W1.Write(false);
 1003              		.loc 10 269 25 is_stmt 0 view .LVU238
 1004 00b0 0021     		movs	r1, #0
 1005 00b2 1248     		ldr	r0, .L55+16
 1006 00b4 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1007              	.LVL68:
 270:MIDIController.cpp ****             LED_W2.Write(false);
 1008              		.loc 10 270 13 is_stmt 1 view .LVU239
 270:MIDIController.cpp ****             LED_W2.Write(false);
 1009              		.loc 10 270 25 is_stmt 0 view .LVU240
 1010 00b8 0021     		movs	r1, #0
 1011 00ba 1148     		ldr	r0, .L55+20
 1012 00bc FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1013              	.LVL69:
 271:MIDIController.cpp ****             break;
 1014              		.loc 10 271 13 is_stmt 1 view .LVU241
 271:MIDIController.cpp ****             break;
 1015              		.loc 10 271 25 is_stmt 0 view .LVU242
 1016 00c0 0021     		movs	r1, #0
 1017 00c2 1048     		ldr	r0, .L55+24
 1018              		.loc 10 274 1 view .LVU243
 1019 00c4 BDE87040 		pop	{r4, r5, r6, lr}
 1020              		.cfi_remember_state
 1021              		.cfi_restore 14
 1022              		.cfi_restore 6
 1023              		.cfi_restore 5
 1024              		.cfi_restore 4
 1025              		.cfi_def_cfa_offset 0
 1026              	.LVL70:
 271:MIDIController.cpp ****             break;
 1027              		.loc 10 271 25 view .LVU244
 1028 00c8 FFF7FEBF 		b	_ZN5daisy4GPIO5WriteEb
 1029              	.LVL71:
 1030              	.L54:
 1031              		.cfi_restore_state
 240:MIDIController.cpp ****                 LED_R1.Write(led_state);
 1032              		.loc 10 240 17 is_stmt 1 view .LVU245
 240:MIDIController.cpp ****                 LED_R1.Write(led_state);
 1033              		.loc 10 240 29 is_stmt 0 view .LVU246
 1034 00cc 0E4E     		ldr	r6, .L55+28
 241:MIDIController.cpp ****                 LED_R2.Write(!led_state);  // Alternate red LEDs
 1035              		.loc 10 241 29 view .LVU247
 1036 00ce 0A48     		ldr	r0, .L55+12
 1037              	.LVL72:
 240:MIDIController.cpp ****                 LED_R1.Write(led_state);
 1038              		.loc 10 240 29 view .LVU248
 1039 00d0 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1040 00d2 81F00101 		eor	r1, r1, #1
 240:MIDIController.cpp ****                 LED_R1.Write(led_state);
 1041              		.loc 10 240 27 view .LVU249
 1042 00d6 3170     		strb	r1, [r6]
 241:MIDIController.cpp ****                 LED_R2.Write(!led_state);  // Alternate red LEDs
 1043              		.loc 10 241 17 is_stmt 1 view .LVU250
 241:MIDIController.cpp ****                 LED_R2.Write(!led_state);  // Alternate red LEDs
 1044              		.loc 10 241 29 is_stmt 0 view .LVU251
 1045 00d8 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 51


 1046              	.LVL73:
 242:MIDIController.cpp ****                 last_toggle = now;
 1047              		.loc 10 242 17 is_stmt 1 view .LVU252
 242:MIDIController.cpp ****                 last_toggle = now;
 1048              		.loc 10 242 29 is_stmt 0 view .LVU253
 1049 00dc 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1050 00de 0748     		ldr	r0, .L55+16
 1051 00e0 81F00101 		eor	r1, r1, #1
 1052 00e4 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1053              	.LVL74:
 243:MIDIController.cpp ****             }
 1054              		.loc 10 243 17 is_stmt 1 view .LVU254
 243:MIDIController.cpp ****             }
 1055              		.loc 10 243 29 is_stmt 0 view .LVU255
 1056 00e8 2C60     		str	r4, [r5]
 1057              		.loc 10 274 1 view .LVU256
 1058 00ea 70BD     		pop	{r4, r5, r6, pc}
 1059              	.LVL75:
 1060              	.L56:
 1061              		.loc 10 274 1 view .LVU257
 1062              		.align	2
 1063              	.L55:
 1064 00ec 00000000 		.word	.LANCHOR28
 1065 00f0 00000000 		.word	.LANCHOR29
 1066 00f4 00000000 		.word	.LANCHOR31
 1067 00f8 00000000 		.word	.LANCHOR7
 1068 00fc 00000000 		.word	.LANCHOR9
 1069 0100 00000000 		.word	.LANCHOR11
 1070 0104 00000000 		.word	.LANCHOR13
 1071 0108 00000000 		.word	.LANCHOR30
 1072              		.cfi_endproc
 1073              	.LFE4690:
 1075              		.section	.rodata._Z10ReadFadersb.str1.4,"aMS",%progbits,1
 1076              		.align	2
 1077              	.LC1:
 1078 0000 4F464600 		.ascii	"OFF\000"
 1079              		.align	2
 1080              	.LC2:
 1081 0004 4F4E00   		.ascii	"ON\000"
 1082 0007 00       		.align	2
 1083              	.LC3:
 1084 0008 5375623A 		.ascii	"Sub: %s Vol: %d\000"
 1084      20257320 
 1084      566F6C3A 
 1084      20256400 
 1085              		.align	2
 1086              	.LC4:
 1087 0018 52657665 		.ascii	"Reverb Level: %d, Decay: %d (Curve: %.2f)\000"
 1087      7262204C 
 1087      6576656C 
 1087      3A202564 
 1087      2C204465 
 1088 0042 0000     		.align	2
 1089              	.LC5:
 1090 0044 4375746F 		.ascii	"Cutoff: %d (Curve: %.2f)\000"
 1090      66663A20 
 1090      25642028 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 52


 1090      43757276 
 1090      653A2025 
 1091 005d 000000   		.align	2
 1092              	.LC6:
 1093 0060 41445352 		.ascii	"ADSR Value: %d\000"
 1093      2056616C 
 1093      75653A20 
 1093      256400
 1094 006f 00       		.align	2
 1095              	.LC7:
 1096 0070 4B6E6F62 		.ascii	"Knob2: %d\000"
 1096      323A2025 
 1096      6400
 1097              		.section	.text._Z10ReadFadersb,"ax",%progbits
 1098              		.align	1
 1099              		.p2align 2,,3
 1100              		.global	_Z10ReadFadersb
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1105              	_Z10ReadFadersb:
 1106              	.LVL76:
 1107              	.LFB4691:
 275:MIDIController.cpp **** 
 276:MIDIController.cpp **** void ReadFaders(bool useSerialLogger) {
 1108              		.loc 10 276 39 is_stmt 1 view -0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 24
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 277:MIDIController.cpp ****     // hw.PrintLine("reading faders called!");
 278:MIDIController.cpp ****     static float last_fader1 = 0.0f;
 1112              		.loc 10 278 5 view .LVU259
 279:MIDIController.cpp ****     static float last_fader2 = 0.0f;
 1113              		.loc 10 279 5 view .LVU260
 280:MIDIController.cpp ****     static float last_fader3 = 0.0f;
 1114              		.loc 10 280 5 view .LVU261
 281:MIDIController.cpp ****     static float last_knob1 = 0.0f;
 1115              		.loc 10 281 5 view .LVU262
 282:MIDIController.cpp ****     static float last_knob2 = 0.0f;
 1116              		.loc 10 282 5 view .LVU263
 283:MIDIController.cpp ****     static float last_knob3 = 0.0f;
 1117              		.loc 10 283 5 view .LVU264
 284:MIDIController.cpp ****     const float threshold = 0.01f; // 1% change threshold
 1118              		.loc 10 284 5 view .LVU265
 285:MIDIController.cpp **** 
 286:MIDIController.cpp ****     float fader1_value = hw.adc.GetFloat(0); 
 1119              		.loc 10 286 5 view .LVU266
 276:MIDIController.cpp ****     // hw.PrintLine("reading faders called!");
 1120              		.loc 10 276 39 is_stmt 0 view .LVU267
 1121 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1122              		.cfi_def_cfa_offset 24
 1123              		.cfi_offset 4, -24
 1124              		.cfi_offset 5, -20
 1125              		.cfi_offset 6, -16
 1126              		.cfi_offset 7, -12
 1127              		.cfi_offset 8, -8
 1128              		.cfi_offset 14, -4
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 53


 1129              		.loc 10 286 41 view .LVU268
 1130 0004 0021     		movs	r1, #0
 276:MIDIController.cpp ****     // hw.PrintLine("reading faders called!");
 1131              		.loc 10 276 39 view .LVU269
 1132 0006 0446     		mov	r4, r0
 1133              		.loc 10 286 41 view .LVU270
 1134 0008 CF48     		ldr	r0, .L101
 1135              	.LVL77:
 1136              	.LBB438:
 287:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 288:MIDIController.cpp ****     float fader3_value = hw.adc.GetFloat(2);
 289:MIDIController.cpp ****     float knob1_value = 1.0f - hw.adc.GetFloat(3);
 290:MIDIController.cpp ****     float knob2_value = 1.0f - hw.adc.GetFloat(4);
 291:MIDIController.cpp ****     float knob3_value = 1.0f - hw.adc.GetFloat(5);
 292:MIDIController.cpp ****     
 293:MIDIController.cpp ****     // Check if values changed more than threshold 
 294:MIDIController.cpp ****     if (fabsf(fader1_value - last_fader1) > threshold) {
 1137              		.loc 10 294 28 view .LVU271
 1138 000a D04E     		ldr	r6, .L101+4
 1139              	.LBE438:
 276:MIDIController.cpp ****     // hw.PrintLine("reading faders called!");
 1140              		.loc 10 276 39 view .LVU272
 1141 000c 2DED088B 		vpush.64	{d8, d9, d10, d11}
 1142              		.cfi_def_cfa_offset 56
 1143              		.cfi_offset 80, -56
 1144              		.cfi_offset 81, -52
 1145              		.cfi_offset 82, -48
 1146              		.cfi_offset 83, -44
 1147              		.cfi_offset 84, -40
 1148              		.cfi_offset 85, -36
 1149              		.cfi_offset 86, -32
 1150              		.cfi_offset 87, -28
 1151 0010 88B0     		sub	sp, sp, #32
 1152              		.cfi_def_cfa_offset 88
 289:MIDIController.cpp ****     float knob2_value = 1.0f - hw.adc.GetFloat(4);
 1153              		.loc 10 289 49 view .LVU273
 1154 0012 B7EE00BA 		vmov.f32	s22, #1.0e+0
 286:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 1155              		.loc 10 286 41 view .LVU274
 1156 0016 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1157              	.LVL78:
 287:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 1158              		.loc 10 287 41 view .LVU275
 1159 001a 0121     		movs	r1, #1
 1160 001c CA48     		ldr	r0, .L101
 286:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 1161              		.loc 10 286 41 view .LVU276
 1162 001e F0EE40AA 		vmov.f32	s21, s0
 1163              	.LVL79:
 287:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 1164              		.loc 10 287 5 is_stmt 1 view .LVU277
 287:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 1165              		.loc 10 287 41 is_stmt 0 view .LVU278
 1166 0022 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1167              	.LVL80:
 288:MIDIController.cpp ****     float knob1_value = 1.0f - hw.adc.GetFloat(3);
 1168              		.loc 10 288 41 view .LVU279
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 54


 1169 0026 0221     		movs	r1, #2
 1170 0028 C748     		ldr	r0, .L101
 287:MIDIController.cpp ****     float fader3_value = hw.adc.GetFloat(2);
 1171              		.loc 10 287 41 view .LVU280
 1172 002a B0EE409A 		vmov.f32	s18, s0
 1173              	.LVL81:
 288:MIDIController.cpp ****     float knob1_value = 1.0f - hw.adc.GetFloat(3);
 1174              		.loc 10 288 5 is_stmt 1 view .LVU281
 288:MIDIController.cpp ****     float knob1_value = 1.0f - hw.adc.GetFloat(3);
 1175              		.loc 10 288 41 is_stmt 0 view .LVU282
 1176 002e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1177              	.LVL82:
 289:MIDIController.cpp ****     float knob2_value = 1.0f - hw.adc.GetFloat(4);
 1178              		.loc 10 289 47 view .LVU283
 1179 0032 0321     		movs	r1, #3
 1180 0034 C448     		ldr	r0, .L101
 288:MIDIController.cpp ****     float knob1_value = 1.0f - hw.adc.GetFloat(3);
 1181              		.loc 10 288 41 view .LVU284
 1182 0036 B0EE40AA 		vmov.f32	s20, s0
 1183              	.LVL83:
 289:MIDIController.cpp ****     float knob2_value = 1.0f - hw.adc.GetFloat(4);
 1184              		.loc 10 289 5 is_stmt 1 view .LVU285
 289:MIDIController.cpp ****     float knob2_value = 1.0f - hw.adc.GetFloat(4);
 1185              		.loc 10 289 47 is_stmt 0 view .LVU286
 1186 003a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1187              	.LVL84:
 290:MIDIController.cpp ****     float knob3_value = 1.0f - hw.adc.GetFloat(5);
 1188              		.loc 10 290 47 view .LVU287
 1189 003e 0421     		movs	r1, #4
 1190 0040 C148     		ldr	r0, .L101
 289:MIDIController.cpp ****     float knob2_value = 1.0f - hw.adc.GetFloat(4);
 1191              		.loc 10 289 49 view .LVU288
 1192 0042 7BEE409A 		vsub.f32	s19, s22, s0
 1193              	.LVL85:
 290:MIDIController.cpp ****     float knob3_value = 1.0f - hw.adc.GetFloat(5);
 1194              		.loc 10 290 5 is_stmt 1 view .LVU289
 290:MIDIController.cpp ****     float knob3_value = 1.0f - hw.adc.GetFloat(5);
 1195              		.loc 10 290 47 is_stmt 0 view .LVU290
 1196 0046 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1197              	.LVL86:
 291:MIDIController.cpp ****     
 1198              		.loc 10 291 47 view .LVU291
 1199 004a 0521     		movs	r1, #5
 1200 004c BE48     		ldr	r0, .L101
 290:MIDIController.cpp ****     float knob3_value = 1.0f - hw.adc.GetFloat(5);
 1201              		.loc 10 290 49 view .LVU292
 1202 004e 7BEE408A 		vsub.f32	s17, s22, s0
 1203              	.LVL87:
 291:MIDIController.cpp ****     
 1204              		.loc 10 291 5 is_stmt 1 view .LVU293
 291:MIDIController.cpp ****     
 1205              		.loc 10 291 47 is_stmt 0 view .LVU294
 1206 0052 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1207              	.LVL88:
 1208              	.LBB460:
 1209              		.loc 10 294 28 view .LVU295
 1210 0056 D6ED007A 		vldr.32	s15, [r6]
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 55


 1211              		.loc 10 294 5 view .LVU296
 1212 005a 9FEDBD7A 		vldr.32	s14, .L101+8
 1213              	.LBE460:
 291:MIDIController.cpp ****     
 1214              		.loc 10 291 49 view .LVU297
 1215 005e 3BEE40BA 		vsub.f32	s22, s22, s0
 1216              	.LVL89:
 1217              		.loc 10 294 5 is_stmt 1 view .LVU298
 1218              	.LBB461:
 1219              		.loc 10 294 28 is_stmt 0 view .LVU299
 1220 0062 7AEEE77A 		vsub.f32	s15, s21, s15
 1221              		.loc 10 294 14 view .LVU300
 1222 0066 F0EEE77A 		vabs.f32	s15, s15
 1223              		.loc 10 294 5 view .LVU301
 1224 006a F4EEC77A 		vcmpe.f32	s15, s14
 1225 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1226 0072 40DD     		ble	.L58
 1227              	.LBB439:
 295:MIDIController.cpp ****         // Scale to MIDI range
 296:MIDIController.cpp ****         int sub_volume = (int)(fader1_value * 127);
 1228              		.loc 10 296 9 is_stmt 1 view .LVU302
 1229              		.loc 10 296 45 is_stmt 0 view .LVU303
 1230 0074 DFEDB77A 		vldr.32	s15, .L101+12
 1231              	.LBB440:
 297:MIDIController.cpp ****         bool sub_active = sub_volume > 10;  // Above 1% threshold
 298:MIDIController.cpp ****         
 299:MIDIController.cpp ****         // Send sub on/off message if needed
 300:MIDIController.cpp ****         static bool last_sub_active = false;
 301:MIDIController.cpp ****         if (sub_active != last_sub_active) {
 1232              		.loc 10 301 24 view .LVU304
 1233 0078 B74F     		ldr	r7, .L101+16
 1234              	.LBE440:
 296:MIDIController.cpp ****         bool sub_active = sub_volume > 10;  // Above 1% threshold
 1235              		.loc 10 296 45 view .LVU305
 1236 007a 6AEEA77A 		vmul.f32	s15, s21, s15
 1237              	.LBB449:
 1238              		.loc 10 301 9 view .LVU306
 1239 007e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1240              	.LBE449:
 296:MIDIController.cpp ****         bool sub_active = sub_volume > 10;  // Above 1% threshold
 1241              		.loc 10 296 13 view .LVU307
 1242 0080 FDEEE77A 		vcvt.s32.f32	s15, s15
 1243 0084 17EE905A 		vmov	r5, s15	@ int
 1244              	.LVL90:
 297:MIDIController.cpp ****         bool sub_active = sub_volume > 10;  // Above 1% threshold
 1245              		.loc 10 297 9 is_stmt 1 view .LVU308
 297:MIDIController.cpp ****         bool sub_active = sub_volume > 10;  // Above 1% threshold
 1246              		.loc 10 297 14 is_stmt 0 view .LVU309
 1247 0088 0A2D     		cmp	r5, #10
 1248 008a D4BF     		ite	le
 1249 008c 4FF00008 		movle	r8, #0
 1250 0090 4FF00108 		movgt	r8, #1
 1251              	.LVL91:
 300:MIDIController.cpp ****         if (sub_active != last_sub_active) {
 1252              		.loc 10 300 9 is_stmt 1 view .LVU310
 1253              		.loc 10 301 9 view .LVU311
 1254              	.LBB450:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 56


 1255 0094 4345     		cmp	r3, r8
 1256 0096 00F05081 		beq	.L96
 1257              	.LBB441:
 302:MIDIController.cpp ****             uint8_t cc_sub_on[3] = {0xB0, JUNO_DCO_SUB_ON, sub_active ? 127 : 0};
 1258              		.loc 10 302 13 view .LVU312
 1259              		.loc 10 302 21 is_stmt 0 view .LVU313
 1260 009a B023     		movs	r3, #176
 1261              		.loc 10 302 80 view .LVU314
 1262 009c 0A2D     		cmp	r5, #10
 1263              	.LBB442:
 1264              	.LBB443:
 157:../../libDaisy/src/hid/midi.h **** 
 158:../../libDaisy/src/hid/midi.h ****     struct Config
 159:../../libDaisy/src/hid/midi.h ****     {
 160:../../libDaisy/src/hid/midi.h ****         typename Transport::Config transport_config;
 161:../../libDaisy/src/hid/midi.h ****     };
 162:../../libDaisy/src/hid/midi.h **** 
 163:../../libDaisy/src/hid/midi.h ****     /** Initializes the MidiHandler
 164:../../libDaisy/src/hid/midi.h ****      *  \param config Configuration structure used to define specifics to the MIDI Handler.
 165:../../libDaisy/src/hid/midi.h ****      */
 166:../../libDaisy/src/hid/midi.h ****     void Init(Config config)
 167:../../libDaisy/src/hid/midi.h ****     {
 168:../../libDaisy/src/hid/midi.h ****         config_ = config;
 169:../../libDaisy/src/hid/midi.h ****         transport_.Init(config_.transport_config);
 170:../../libDaisy/src/hid/midi.h ****         parser_.Init();
 171:../../libDaisy/src/hid/midi.h ****     }
 172:../../libDaisy/src/hid/midi.h **** 
 173:../../libDaisy/src/hid/midi.h ****     /** Starts listening on the selected input mode(s).
 174:../../libDaisy/src/hid/midi.h ****      * MidiEvent Queue will begin to fill, and can be checked with HasEvents() */
 175:../../libDaisy/src/hid/midi.h ****     void StartReceive()
 176:../../libDaisy/src/hid/midi.h ****     {
 177:../../libDaisy/src/hid/midi.h ****         transport_.StartRx(MidiHandler::ParseCallback, this);
 178:../../libDaisy/src/hid/midi.h ****     }
 179:../../libDaisy/src/hid/midi.h **** 
 180:../../libDaisy/src/hid/midi.h ****     /** Start listening */
 181:../../libDaisy/src/hid/midi.h ****     void Listen()
 182:../../libDaisy/src/hid/midi.h ****     {
 183:../../libDaisy/src/hid/midi.h ****         // In case of UART Error, (particularly
 184:../../libDaisy/src/hid/midi.h ****         //  overrun error), UART disables itself.
 185:../../libDaisy/src/hid/midi.h ****         // Flush the buff, and restart.
 186:../../libDaisy/src/hid/midi.h ****         if(!transport_.RxActive())
 187:../../libDaisy/src/hid/midi.h ****         {
 188:../../libDaisy/src/hid/midi.h ****             parser_.Reset();
 189:../../libDaisy/src/hid/midi.h ****             transport_.FlushRx();
 190:../../libDaisy/src/hid/midi.h ****             StartReceive();
 191:../../libDaisy/src/hid/midi.h ****         }
 192:../../libDaisy/src/hid/midi.h ****     }
 193:../../libDaisy/src/hid/midi.h **** 
 194:../../libDaisy/src/hid/midi.h ****     /** Checks if there are unhandled messages in the queue
 195:../../libDaisy/src/hid/midi.h ****     \return True if there are events to be handled, else false.
 196:../../libDaisy/src/hid/midi.h ****      */
 197:../../libDaisy/src/hid/midi.h ****     bool HasEvents() const { return event_q_.GetNumElements() > 0; }
 198:../../libDaisy/src/hid/midi.h **** 
 199:../../libDaisy/src/hid/midi.h **** 
 200:../../libDaisy/src/hid/midi.h ****     /** Pops the oldest unhandled MidiEvent from the internal queue
 201:../../libDaisy/src/hid/midi.h ****     \return The event to be handled
 202:../../libDaisy/src/hid/midi.h ****      */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 57


 203:../../libDaisy/src/hid/midi.h ****     MidiEvent PopEvent() { return event_q_.PopFront(); }
 204:../../libDaisy/src/hid/midi.h **** 
 205:../../libDaisy/src/hid/midi.h ****     /** SendMessage
 206:../../libDaisy/src/hid/midi.h ****     Send raw bytes as message
 207:../../libDaisy/src/hid/midi.h ****     */
 208:../../libDaisy/src/hid/midi.h ****     void SendMessage(uint8_t* bytes, size_t size)
 209:../../libDaisy/src/hid/midi.h ****     {
 210:../../libDaisy/src/hid/midi.h ****         transport_.Tx(bytes, size);
 1265              		.loc 6 210 22 view .LVU315
 1266 009e 07A9     		add	r1, sp, #28
 1267 00a0 4FF00302 		mov	r2, #3
 1268              	.LBE443:
 1269              	.LBE442:
 1270              		.loc 10 302 21 view .LVU316
 1271 00a4 8DF81C30 		strb	r3, [sp, #28]
 1272              		.loc 10 302 80 view .LVU317
 1273 00a8 CCBF     		ite	gt
 1274 00aa 7F23     		movgt	r3, #127
 1275 00ac 0023     		movle	r3, #0
 1276              	.LBB446:
 1277              	.LBB444:
 1278              		.loc 6 210 22 view .LVU318
 1279 00ae AB48     		ldr	r0, .L101+20
 1280 00b0 0391     		str	r1, [sp, #12]
 1281              	.LBE444:
 1282              	.LBE446:
 1283              		.loc 10 302 80 view .LVU319
 1284 00b2 8DF81E30 		strb	r3, [sp, #30]
 303:MIDIController.cpp ****             midi.SendMessage(cc_sub_on, sizeof(cc_sub_on));
 1285              		.loc 10 303 13 is_stmt 1 view .LVU320
 1286              	.LVL92:
 1287              	.LBB447:
 1288              	.LBI442:
 208:../../libDaisy/src/hid/midi.h ****     {
 1289              		.loc 6 208 10 view .LVU321
 1290              	.LBE447:
 302:MIDIController.cpp ****             midi.SendMessage(cc_sub_on, sizeof(cc_sub_on));
 1291              		.loc 10 302 21 is_stmt 0 view .LVU322
 1292 00b6 5223     		movs	r3, #82
 1293 00b8 8DF81D30 		strb	r3, [sp, #29]
 1294              	.LBB448:
 1295              	.LBB445:
 1296              		.loc 6 210 22 view .LVU323
 1297 00bc FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1298              	.LVL93:
 1299              		.loc 6 210 22 view .LVU324
 1300              	.LBE445:
 1301              	.LBE448:
 304:MIDIController.cpp ****             last_sub_active = sub_active;
 1302              		.loc 10 304 13 is_stmt 1 view .LVU325
 1303              		.loc 10 304 29 is_stmt 0 view .LVU326
 1304 00c0 0399     		ldr	r1, [sp, #12]
 1305 00c2 87F80080 		strb	r8, [r7]
 1306              	.L60:
 1307              		.loc 10 304 29 view .LVU327
 1308              	.LBE441:
 1309              	.LBE450:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 58


 305:MIDIController.cpp ****         }
 306:MIDIController.cpp ****         
 307:MIDIController.cpp ****         // Send volume message
 308:MIDIController.cpp ****         uint8_t cc_sub_vol[3] = {0xB0, JUNO_DCO_SUB_LEVEL, sub_volume};
 1310              		.loc 10 308 9 is_stmt 1 view .LVU328
 1311              		.loc 10 308 17 is_stmt 0 view .LVU329
 1312 00c6 B023     		movs	r3, #176
 1313              	.LBB451:
 1314              	.LBB452:
 1315              		.loc 6 210 22 view .LVU330
 1316 00c8 0322     		movs	r2, #3
 1317 00ca A448     		ldr	r0, .L101+20
 1318              	.LBE452:
 1319              	.LBE451:
 1320              		.loc 10 308 17 view .LVU331
 1321 00cc 8DF81C30 		strb	r3, [sp, #28]
 1322 00d0 5523     		movs	r3, #85
 1323              		.loc 10 308 70 view .LVU332
 1324 00d2 8DF81E50 		strb	r5, [sp, #30]
 309:MIDIController.cpp ****         midi.SendMessage(cc_sub_vol, sizeof(cc_sub_vol));
 1325              		.loc 10 309 9 is_stmt 1 view .LVU333
 1326              	.LVL94:
 1327              	.LBB454:
 1328              	.LBI451:
 208:../../libDaisy/src/hid/midi.h ****     {
 1329              		.loc 6 208 10 view .LVU334
 1330              	.LBE454:
 308:MIDIController.cpp ****         midi.SendMessage(cc_sub_vol, sizeof(cc_sub_vol));
 1331              		.loc 10 308 17 is_stmt 0 view .LVU335
 1332 00d6 8DF81D30 		strb	r3, [sp, #29]
 1333              	.LBB455:
 1334              	.LBB453:
 1335              		.loc 6 210 22 view .LVU336
 1336 00da FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1337              	.LVL95:
 1338              		.loc 6 210 22 view .LVU337
 1339              	.LBE453:
 1340              	.LBE455:
 310:MIDIController.cpp ****         
 311:MIDIController.cpp ****         if (useSerialLogger) {
 1341              		.loc 10 311 9 is_stmt 1 view .LVU338
 1342 00de 44B1     		cbz	r4, .L62
 312:MIDIController.cpp ****             hw.PrintLine("Sub: %s Vol: %d", sub_active ? "ON" : "OFF", sub_volume);
 1343              		.loc 10 312 13 view .LVU339
 1344              		.loc 10 312 25 is_stmt 0 view .LVU340
 1345 00e0 9F49     		ldr	r1, .L101+24
 1346              	.LBB456:
 1347              	.LBB457:
 1348              		.loc 1 128 23 view .LVU341
 1349 00e2 2A46     		mov	r2, r5
 1350              	.LBE457:
 1351              	.LBE456:
 1352              		.loc 10 312 25 view .LVU342
 1353 00e4 9F4B     		ldr	r3, .L101+28
 1354              	.LVL96:
 1355              	.LBB459:
 1356              	.LBI456:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 59


 126:../../libDaisy/src/daisy_seed.h ****     {
 1357              		.loc 1 126 17 is_stmt 1 view .LVU343
 1358              	.LBB458:
 1359              		.loc 1 128 23 is_stmt 0 view .LVU344
 1360 00e6 A048     		ldr	r0, .L101+32
 1361 00e8 0A2D     		cmp	r5, #10
 1362 00ea C8BF     		it	gt
 1363 00ec 1946     		movgt	r1, r3
 1364              	.LVL97:
 1365              		.loc 1 128 23 view .LVU345
 1366 00ee FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1367              	.LVL98:
 1368              	.L62:
 1369              		.loc 1 128 23 view .LVU346
 1370              	.LBE458:
 1371              	.LBE459:
 313:MIDIController.cpp ****         }
 314:MIDIController.cpp ****         
 315:MIDIController.cpp ****         last_fader1 = fader1_value;
 1372              		.loc 10 315 9 is_stmt 1 view .LVU347
 1373              		.loc 10 315 21 is_stmt 0 view .LVU348
 1374 00f2 C6ED00AA 		vstr.32	s21, [r6]
 1375              	.LVL99:
 1376              	.L58:
 1377              		.loc 10 315 21 view .LVU349
 1378              	.LBE439:
 1379              	.LBE461:
 316:MIDIController.cpp ****     }
 317:MIDIController.cpp ****     
 318:MIDIController.cpp ****     // if (fabsf(fader2_value - last_fader2) > threshold) {
 319:MIDIController.cpp ****     //     int fader2_int = (int)(fader2_value * 1000);
 320:MIDIController.cpp ****     //     hw.PrintLine("Fader2: %d", fader2_int);
 321:MIDIController.cpp ****     //     last_fader2 = fader2_value;
 322:MIDIController.cpp ****     // }
 323:MIDIController.cpp ****     if (fabsf(fader2_value - last_fader2) > threshold || fabsf(knob2_value - last_knob2) > threshol
 1380              		.loc 10 323 5 is_stmt 1 view .LVU350
 1381              	.LBB462:
 1382              		.loc 10 323 28 is_stmt 0 view .LVU351
 1383 00f6 9D4F     		ldr	r7, .L101+36
 1384              		.loc 10 323 5 view .LVU352
 1385 00f8 9FED957A 		vldr.32	s14, .L101+8
 1386              		.loc 10 323 28 view .LVU353
 1387 00fc D7ED007A 		vldr.32	s15, [r7]
 1388 0100 9B4D     		ldr	r5, .L101+40
 1389 0102 79EE677A 		vsub.f32	s15, s18, s15
 1390              		.loc 10 323 14 view .LVU354
 1391 0106 F0EEE77A 		vabs.f32	s15, s15
 1392              		.loc 10 323 5 view .LVU355
 1393 010a F4EEC77A 		vcmpe.f32	s15, s14
 1394 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1395 0112 00F3BA80 		bgt	.L64
 1396              		.loc 10 323 76 discriminator 1 view .LVU356
 1397 0116 D5ED007A 		vldr.32	s15, [r5]
 1398 011a 78EEE77A 		vsub.f32	s15, s17, s15
 1399              		.loc 10 323 63 discriminator 1 view .LVU357
 1400 011e F0EEE77A 		vabs.f32	s15, s15
 1401              		.loc 10 323 55 discriminator 1 view .LVU358
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 60


 1402 0122 F4EEC77A 		vcmpe.f32	s15, s14
 1403 0126 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1404 012a 00F3AE80 		bgt	.L64
 1405              	.LVL100:
 1406              	.L65:
 1407              		.loc 10 323 55 discriminator 1 view .LVU359
 1408              	.LBE462:
 324:MIDIController.cpp ****         
 325:MIDIController.cpp ****         // Basic level from fader2
 326:MIDIController.cpp ****         int basic_level = (int)(fader2_value * 127);
 327:MIDIController.cpp ****         
 328:MIDIController.cpp ****         // Apply curve to decay value only
 329:MIDIController.cpp ****         float curved_decay = remapWithCurve(fader2_value, knob2_value * 1023.0f);
 330:MIDIController.cpp ****         int decay_value = (int)(curved_decay * 127);
 331:MIDIController.cpp ****         
 332:MIDIController.cpp ****         // Create and send MIDI messages
 333:MIDIController.cpp ****         uint8_t cc_level[3] = {0xB0, JUNO_REVERB_LEVEL, basic_level};
 334:MIDIController.cpp ****         uint8_t cc_decay[3] = {0xB0, JUNO_REVERB_DECAY, decay_value};
 335:MIDIController.cpp ****         
 336:MIDIController.cpp ****         if (useSerialLogger) {
 337:MIDIController.cpp ****             hw.PrintLine("Reverb Level: %d, Decay: %d (Curve: %.2f)", 
 338:MIDIController.cpp ****                         basic_level, decay_value, knob2_value);
 339:MIDIController.cpp ****         } else {
 340:MIDIController.cpp ****             midi.SendMessage(cc_level, sizeof(cc_level));
 341:MIDIController.cpp ****             midi.SendMessage(cc_decay, sizeof(cc_decay));
 342:MIDIController.cpp ****         }
 343:MIDIController.cpp ****         
 344:MIDIController.cpp ****         last_fader2 = fader2_value;
 345:MIDIController.cpp ****         last_knob2 = knob2_value;
 346:MIDIController.cpp ****     }
 347:MIDIController.cpp ****     // if (fabsf(fader3_value - last_fader3) > threshold) {
 348:MIDIController.cpp ****     if (fabsf(fader3_value - last_fader3) > threshold || fabsf(knob3_value - last_knob3) > threshol
 1409              		.loc 10 348 5 is_stmt 1 view .LVU360
 1410              	.LBB470:
 1411              		.loc 10 348 28 is_stmt 0 view .LVU361
 1412 012e 914E     		ldr	r6, .L101+44
 1413              		.loc 10 348 5 view .LVU362
 1414 0130 9FED877A 		vldr.32	s14, .L101+8
 1415              		.loc 10 348 28 view .LVU363
 1416 0134 D6ED007A 		vldr.32	s15, [r6]
 1417 0138 8F4F     		ldr	r7, .L101+48
 1418 013a 7AEE677A 		vsub.f32	s15, s20, s15
 1419              		.loc 10 348 14 view .LVU364
 1420 013e F0EEE77A 		vabs.f32	s15, s15
 1421              		.loc 10 348 5 view .LVU365
 1422 0142 F4EEC77A 		vcmpe.f32	s15, s14
 1423 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1424 014a 7ADC     		bgt	.L69
 1425              		.loc 10 348 76 discriminator 1 view .LVU366
 1426 014c D7ED007A 		vldr.32	s15, [r7]
 1427 0150 7BEE677A 		vsub.f32	s15, s22, s15
 1428              		.loc 10 348 63 discriminator 1 view .LVU367
 1429 0154 F0EEE77A 		vabs.f32	s15, s15
 1430              		.loc 10 348 55 discriminator 1 view .LVU368
 1431 0158 F4EEC77A 		vcmpe.f32	s15, s14
 1432 015c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1433 0160 6FDC     		bgt	.L69
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 61


 1434              	.L70:
 1435              		.loc 10 348 55 discriminator 1 view .LVU369
 1436              	.LBE470:
 349:MIDIController.cpp ****         // int fader3_int = (int)(fader3_value * 1000);
 350:MIDIController.cpp ****         // hw.PrintLine("Fader3: %d", fader3_int);
 351:MIDIController.cpp ****         // last_fader3 = fader3_value;
 352:MIDIController.cpp ****          float curved_value = remapWithCurve(fader3_value, knob3_value * 1023.0f);
 353:MIDIController.cpp ****         int cutoff_value = (int)(curved_value * 127);
 354:MIDIController.cpp ****         
 355:MIDIController.cpp ****         // Create and send MIDI message
 356:MIDIController.cpp ****         uint8_t cc_cutoff[3] = {0xB0, JUNO_FILTER_CUTOFF, cutoff_value};
 357:MIDIController.cpp ****         
 358:MIDIController.cpp ****         if (useSerialLogger) {
 359:MIDIController.cpp ****             hw.PrintLine("Cutoff: %d (Curve: %.2f)", cutoff_value, knob3_value);
 360:MIDIController.cpp ****         } else {
 361:MIDIController.cpp ****             midi.SendMessage(cc_cutoff, sizeof(cc_cutoff));
 362:MIDIController.cpp ****         }
 363:MIDIController.cpp ****         
 364:MIDIController.cpp ****         last_fader3 = fader3_value;
 365:MIDIController.cpp ****         last_knob3 = knob3_value;
 366:MIDIController.cpp ****     }
 367:MIDIController.cpp ****     if (fabsf(knob1_value - last_knob1) > threshold) { // ADSR control of the VST
 1437              		.loc 10 367 5 is_stmt 1 view .LVU370
 1438              	.LBB477:
 1439              		.loc 10 367 27 is_stmt 0 view .LVU371
 1440 0162 864F     		ldr	r7, .L101+52
 1441              		.loc 10 367 5 view .LVU372
 1442 0164 9FED7A7A 		vldr.32	s14, .L101+8
 1443              		.loc 10 367 27 view .LVU373
 1444 0168 D7ED007A 		vldr.32	s15, [r7]
 1445 016c 79EEE77A 		vsub.f32	s15, s19, s15
 1446              		.loc 10 367 14 view .LVU374
 1447 0170 F0EEE77A 		vabs.f32	s15, s15
 1448              		.loc 10 367 5 view .LVU375
 1449 0174 F4EEC77A 		vcmpe.f32	s15, s14
 1450 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1451 017c 4FDD     		ble	.L74
 1452              	.LBB478:
 368:MIDIController.cpp ****         int adr_value = (int)(knob1_value * 127);
 1453              		.loc 10 368 9 is_stmt 1 view .LVU376
 1454              		.loc 10 368 43 is_stmt 0 view .LVU377
 1455 017e DFED757A 		vldr.32	s15, .L101+12
 1456              	.LBB479:
 369:MIDIController.cpp ****         int s_value = 25 + (int)(knob1_value * 102);
 370:MIDIController.cpp ****         static int last_sent_value = -1;
 371:MIDIController.cpp **** 
 372:MIDIController.cpp ****         // int knob1_int = (int)(knob1_value * 1000);
 373:MIDIController.cpp ****         // hw.PrintLine("Knob1: %d", knob1_int);
 374:MIDIController.cpp ****         // Create CC messages for all ADSR parameters
 375:MIDIController.cpp ****         if (adr_value != last_sent_value) {
 1457              		.loc 10 375 23 view .LVU378
 1458 0182 DFF81882 		ldr	r8, .L101+84
 1459              	.LBE479:
 368:MIDIController.cpp ****         int adr_value = (int)(knob1_value * 127);
 1460              		.loc 10 368 43 view .LVU379
 1461 0186 69EEA77A 		vmul.f32	s15, s19, s15
 1462              	.LBB496:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 62


 1463              		.loc 10 375 9 view .LVU380
 1464 018a D8F80030 		ldr	r3, [r8]
 1465              	.LBE496:
 368:MIDIController.cpp ****         int adr_value = (int)(knob1_value * 127);
 1466              		.loc 10 368 13 view .LVU381
 1467 018e FDEEE77A 		vcvt.s32.f32	s15, s15
 1468 0192 17EE906A 		vmov	r6, s15	@ int
 1469              	.LVL101:
 369:MIDIController.cpp ****         int s_value = 25 + (int)(knob1_value * 102);
 1470              		.loc 10 369 9 is_stmt 1 view .LVU382
 370:MIDIController.cpp **** 
 1471              		.loc 10 370 9 view .LVU383
 1472              		.loc 10 375 9 view .LVU384
 1473              	.LBB497:
 1474 0196 B342     		cmp	r3, r6
 1475 0198 3FD0     		beq	.L76
 1476              	.LBB480:
 376:MIDIController.cpp ****             uint8_t cc_attack[3] = {0xB0, JUNO_ATTACK, adr_value};
 1477              		.loc 10 376 13 view .LVU385
 1478              	.LBE480:
 1479              	.LBE497:
 369:MIDIController.cpp ****         int s_value = 25 + (int)(knob1_value * 102);
 1480              		.loc 10 369 46 is_stmt 0 view .LVU386
 1481 019a DFED797A 		vldr.32	s15, .L101+56
 1482              	.LBB498:
 1483              	.LBB491:
 1484              		.loc 10 376 21 view .LVU387
 1485 019e B023     		movs	r3, #176
 1486              	.LBE491:
 1487              	.LBE498:
 369:MIDIController.cpp ****         int s_value = 25 + (int)(knob1_value * 102);
 1488              		.loc 10 369 46 view .LVU388
 1489 01a0 69EEA77A 		vmul.f32	s15, s19, s15
 1490              	.LVL102:
 1491              	.LBB499:
 1492              	.LBB492:
 1493              		.loc 10 376 21 view .LVU389
 1494 01a4 8DF81030 		strb	r3, [sp, #16]
 377:MIDIController.cpp ****             uint8_t cc_decay[3] = {0xB0, JUNO_DECAY, adr_value};
 1495              		.loc 10 377 21 view .LVU390
 1496 01a8 8DF81430 		strb	r3, [sp, #20]
 378:MIDIController.cpp ****             uint8_t cc_sustain[3] = {0xB0, JUNO_SUSTAIN, s_value};
 1497              		.loc 10 378 21 view .LVU391
 1498 01ac 8DF81830 		strb	r3, [sp, #24]
 1499              	.LBE492:
 1500              	.LBE499:
 369:MIDIController.cpp ****         static int last_sent_value = -1;
 1501              		.loc 10 369 28 view .LVU392
 1502 01b0 FDEEE77A 		vcvt.s32.f32	s15, s15
 1503              	.LVL103:
 1504              	.LBB500:
 1505              	.LBB493:
 379:MIDIController.cpp ****             uint8_t cc_release[3] = {0xB0, JUNO_RELEASE, adr_value};
 1506              		.loc 10 379 21 view .LVU393
 1507 01b4 8DF81C30 		strb	r3, [sp, #28]
 1508              	.LBE493:
 1509              	.LBE500:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 63


 369:MIDIController.cpp ****         static int last_sent_value = -1;
 1510              		.loc 10 369 28 view .LVU394
 1511 01b8 17EE903A 		vmov	r3, s15	@ int
 369:MIDIController.cpp ****         static int last_sent_value = -1;
 1512              		.loc 10 369 13 view .LVU395
 1513 01bc 1933     		adds	r3, r3, #25
 1514              	.LBB501:
 1515              	.LBB494:
 378:MIDIController.cpp ****             uint8_t cc_sustain[3] = {0xB0, JUNO_SUSTAIN, s_value};
 1516              		.loc 10 378 65 view .LVU396
 1517 01be 8DF81A30 		strb	r3, [sp, #26]
 376:MIDIController.cpp ****             uint8_t cc_decay[3] = {0xB0, JUNO_DECAY, adr_value};
 1518              		.loc 10 376 65 view .LVU397
 1519 01c2 F3B2     		uxtb	r3, r6
 1520 01c4 8DF81230 		strb	r3, [sp, #18]
 377:MIDIController.cpp ****             uint8_t cc_sustain[3] = {0xB0, JUNO_SUSTAIN, s_value};
 1521              		.loc 10 377 13 is_stmt 1 view .LVU398
 377:MIDIController.cpp ****             uint8_t cc_sustain[3] = {0xB0, JUNO_SUSTAIN, s_value};
 1522              		.loc 10 377 63 is_stmt 0 view .LVU399
 1523 01c8 8DF81630 		strb	r3, [sp, #22]
 378:MIDIController.cpp ****             uint8_t cc_release[3] = {0xB0, JUNO_RELEASE, adr_value};
 1524              		.loc 10 378 13 is_stmt 1 view .LVU400
 1525              		.loc 10 379 13 view .LVU401
 1526              		.loc 10 379 67 is_stmt 0 view .LVU402
 1527 01cc 8DF81E30 		strb	r3, [sp, #30]
 380:MIDIController.cpp ****             
 381:MIDIController.cpp ****             if (useSerialLogger) {
 1528              		.loc 10 381 13 is_stmt 1 view .LVU403
 376:MIDIController.cpp ****             uint8_t cc_decay[3] = {0xB0, JUNO_DECAY, adr_value};
 1529              		.loc 10 376 21 is_stmt 0 view .LVU404
 1530 01d0 4923     		movs	r3, #73
 1531 01d2 8DF81130 		strb	r3, [sp, #17]
 377:MIDIController.cpp ****             uint8_t cc_sustain[3] = {0xB0, JUNO_SUSTAIN, s_value};
 1532              		.loc 10 377 21 view .LVU405
 1533 01d6 4B23     		movs	r3, #75
 1534 01d8 8DF81530 		strb	r3, [sp, #21]
 378:MIDIController.cpp ****             uint8_t cc_release[3] = {0xB0, JUNO_RELEASE, adr_value};
 1535              		.loc 10 378 21 view .LVU406
 1536 01dc 4C23     		movs	r3, #76
 1537 01de 8DF81930 		strb	r3, [sp, #25]
 379:MIDIController.cpp ****             
 1538              		.loc 10 379 21 view .LVU407
 1539 01e2 4823     		movs	r3, #72
 1540 01e4 8DF81D30 		strb	r3, [sp, #29]
 1541              		.loc 10 381 13 view .LVU408
 1542 01e8 002C     		cmp	r4, #0
 1543 01ea 40F0A880 		bne	.L97
 382:MIDIController.cpp ****                 hw.PrintLine("ADSR Value: %d", adr_value);
 383:MIDIController.cpp ****             } else {
 384:MIDIController.cpp ****                 // Send all ADSR messages
 385:MIDIController.cpp ****                 midi.SendMessage(cc_attack, sizeof(cc_attack));
 1544              		.loc 10 385 17 is_stmt 1 view .LVU409
 1545              	.LVL104:
 1546              	.LBB481:
 1547              	.LBI481:
 208:../../libDaisy/src/hid/midi.h ****     {
 1548              		.loc 6 208 10 view .LVU410
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 64


 1549              	.LBB482:
 1550              		.loc 6 210 22 is_stmt 0 view .LVU411
 1551 01ee 0322     		movs	r2, #3
 1552 01f0 04A9     		add	r1, sp, #16
 1553              	.LVL105:
 1554              		.loc 6 210 22 view .LVU412
 1555 01f2 5A48     		ldr	r0, .L101+20
 1556 01f4 FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1557              	.LVL106:
 1558              		.loc 6 210 22 view .LVU413
 1559              	.LBE482:
 1560              	.LBE481:
 386:MIDIController.cpp ****                 midi.SendMessage(cc_decay, sizeof(cc_decay));
 1561              		.loc 10 386 17 is_stmt 1 view .LVU414
 1562              	.LBB483:
 1563              	.LBI483:
 208:../../libDaisy/src/hid/midi.h ****     {
 1564              		.loc 6 208 10 view .LVU415
 1565              	.LBB484:
 1566              		.loc 6 210 22 is_stmt 0 view .LVU416
 1567 01f8 0322     		movs	r2, #3
 1568 01fa 05A9     		add	r1, sp, #20
 1569              	.LVL107:
 1570              		.loc 6 210 22 view .LVU417
 1571 01fc 5748     		ldr	r0, .L101+20
 1572 01fe FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1573              	.LVL108:
 1574              		.loc 6 210 22 view .LVU418
 1575              	.LBE484:
 1576              	.LBE483:
 387:MIDIController.cpp ****                 midi.SendMessage(cc_sustain, sizeof(cc_sustain));
 1577              		.loc 10 387 17 is_stmt 1 view .LVU419
 1578              	.LBB485:
 1579              	.LBI485:
 208:../../libDaisy/src/hid/midi.h ****     {
 1580              		.loc 6 208 10 view .LVU420
 1581              	.LBB486:
 1582              		.loc 6 210 22 is_stmt 0 view .LVU421
 1583 0202 0322     		movs	r2, #3
 1584 0204 06A9     		add	r1, sp, #24
 1585              	.LVL109:
 1586              		.loc 6 210 22 view .LVU422
 1587 0206 5548     		ldr	r0, .L101+20
 1588 0208 FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1589              	.LVL110:
 1590              		.loc 6 210 22 view .LVU423
 1591              	.LBE486:
 1592              	.LBE485:
 388:MIDIController.cpp ****                 midi.SendMessage(cc_release, sizeof(cc_release));
 1593              		.loc 10 388 17 is_stmt 1 view .LVU424
 1594              	.LBB487:
 1595              	.LBI487:
 208:../../libDaisy/src/hid/midi.h ****     {
 1596              		.loc 6 208 10 view .LVU425
 1597              	.LBB488:
 1598              		.loc 6 210 22 is_stmt 0 view .LVU426
 1599 020c 0322     		movs	r2, #3
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 65


 1600 020e 07A9     		add	r1, sp, #28
 1601              	.LVL111:
 1602              		.loc 6 210 22 view .LVU427
 1603 0210 5248     		ldr	r0, .L101+20
 1604 0212 FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1605              	.LVL112:
 1606              	.L78:
 1607              		.loc 6 210 22 view .LVU428
 1608              	.LBE488:
 1609              	.LBE487:
 389:MIDIController.cpp ****             }
 390:MIDIController.cpp ****             last_sent_value = adr_value; 
 1610              		.loc 10 390 13 is_stmt 1 view .LVU429
 1611              		.loc 10 390 29 is_stmt 0 view .LVU430
 1612 0216 C8F80060 		str	r6, [r8]
 1613              	.L76:
 1614              		.loc 10 390 29 view .LVU431
 1615              	.LBE494:
 1616              	.LBE501:
 391:MIDIController.cpp ****         
 392:MIDIController.cpp ****         }
 393:MIDIController.cpp ****         last_knob1 = knob1_value;
 1617              		.loc 10 393 9 is_stmt 1 view .LVU432
 1618              		.loc 10 393 20 is_stmt 0 view .LVU433
 1619 021a C7ED009A 		vstr.32	s19, [r7]
 1620              	.LVL113:
 1621              	.L74:
 1622              		.loc 10 393 20 view .LVU434
 1623              	.LBE478:
 1624              	.LBE477:
 394:MIDIController.cpp ****     }
 395:MIDIController.cpp ****     
 396:MIDIController.cpp ****         // last_knob1 = knob1_value;
 397:MIDIController.cpp ****     
 398:MIDIController.cpp ****     if (fabsf(knob2_value - last_knob2) > threshold) {
 1625              		.loc 10 398 5 is_stmt 1 view .LVU435
 1626              	.LBB504:
 1627              		.loc 10 398 27 is_stmt 0 view .LVU436
 1628 021e D5ED007A 		vldr.32	s15, [r5]
 1629              		.loc 10 398 5 view .LVU437
 1630 0222 9FED4B7A 		vldr.32	s14, .L101+8
 1631              		.loc 10 398 27 view .LVU438
 1632 0226 78EEE77A 		vsub.f32	s15, s17, s15
 1633              		.loc 10 398 14 view .LVU439
 1634 022a F0EEE77A 		vabs.f32	s15, s15
 1635              		.loc 10 398 5 view .LVU440
 1636 022e F4EEC77A 		vcmpe.f32	s15, s14
 1637 0232 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1638 0236 6EDC     		bgt	.L98
 1639              	.LBE504:
 399:MIDIController.cpp ****         int knob2_int = (int)(knob2_value * 1000);
 400:MIDIController.cpp ****         hw.PrintLine("Knob2: %d", knob2_int);
 401:MIDIController.cpp ****         last_knob2 = knob2_value;
 402:MIDIController.cpp ****     }
 403:MIDIController.cpp ****     // if (fabsf(knob3_value - last_knob3) > threshold) {
 404:MIDIController.cpp ****     //     int knob3_int = (int)(knob3_value * 1000);
 405:MIDIController.cpp ****     //     hw.PrintLine("Knob3: %d", knob3_int);
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 66


 406:MIDIController.cpp ****     //     last_knob3 = knob3_value;
 407:MIDIController.cpp ****     // }
 408:MIDIController.cpp **** 
 409:MIDIController.cpp ****     // // just print the fader values for now
 410:MIDIController.cpp ****     // int fader1_int = (int)(fader1_value * 1000);
 411:MIDIController.cpp ****     // int fader2_int = (int)(fader2_value * 1000);
 412:MIDIController.cpp ****     // hw.PrintLine("Fader1: %d, Fader2: %d", fader1_int, fader2_int);
 413:MIDIController.cpp **** }
 1640              		.loc 10 413 1 view .LVU441
 1641 0238 08B0     		add	sp, sp, #32
 1642              		.cfi_remember_state
 1643              		.cfi_def_cfa_offset 56
 1644              		@ sp needed
 1645 023a BDEC088B 		vldm	sp!, {d8-d11}
 1646              		.cfi_restore 86
 1647              		.cfi_restore 87
 1648              		.cfi_restore 84
 1649              		.cfi_restore 85
 1650              		.cfi_restore 82
 1651              		.cfi_restore 83
 1652              		.cfi_restore 80
 1653              		.cfi_restore 81
 1654              		.cfi_def_cfa_offset 24
 1655              	.LVL114:
 1656              		.loc 10 413 1 view .LVU442
 1657 023e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1658              	.LVL115:
 1659              	.L69:
 1660              		.cfi_restore_state
 1661              	.LBB511:
 1662              	.LBB471:
 352:MIDIController.cpp ****         int cutoff_value = (int)(curved_value * 127);
 1663              		.loc 10 352 10 is_stmt 1 view .LVU443
 352:MIDIController.cpp ****         int cutoff_value = (int)(curved_value * 127);
 1664              		.loc 10 352 45 is_stmt 0 view .LVU444
 1665 0242 DFED500A 		vldr.32	s1, .L101+60
 1666 0246 B0EE4A0A 		vmov.f32	s0, s20
 1667 024a 6BEE200A 		vmul.f32	s1, s22, s1
 1668 024e FFF7FEFF 		bl	_Z14remapWithCurveff
 1669              	.LVL116:
 353:MIDIController.cpp ****         
 1670              		.loc 10 353 9 is_stmt 1 view .LVU445
 353:MIDIController.cpp ****         
 1671              		.loc 10 353 47 is_stmt 0 view .LVU446
 1672 0252 DFED407A 		vldr.32	s15, .L101+12
 356:MIDIController.cpp ****         
 1673              		.loc 10 356 17 view .LVU447
 1674 0256 B023     		movs	r3, #176
 353:MIDIController.cpp ****         
 1675              		.loc 10 353 47 view .LVU448
 1676 0258 20EE270A 		vmul.f32	s0, s0, s15
 1677              	.LVL117:
 356:MIDIController.cpp ****         
 1678              		.loc 10 356 17 view .LVU449
 1679 025c 8DF81C30 		strb	r3, [sp, #28]
 1680 0260 4A23     		movs	r3, #74
 353:MIDIController.cpp ****         
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 67


 1681              		.loc 10 353 13 view .LVU450
 1682 0262 FDEEC07A 		vcvt.s32.f32	s15, s0
 356:MIDIController.cpp ****         
 1683              		.loc 10 356 17 view .LVU451
 1684 0266 8DF81D30 		strb	r3, [sp, #29]
 353:MIDIController.cpp ****         
 1685              		.loc 10 353 13 view .LVU452
 1686 026a 17EE901A 		vmov	r1, s15	@ int
 1687              	.LVL118:
 356:MIDIController.cpp ****         
 1688              		.loc 10 356 9 is_stmt 1 view .LVU453
 356:MIDIController.cpp ****         
 1689              		.loc 10 356 71 is_stmt 0 view .LVU454
 1690 026e 8DF81E10 		strb	r1, [sp, #30]
 358:MIDIController.cpp ****             hw.PrintLine("Cutoff: %d (Curve: %.2f)", cutoff_value, knob3_value);
 1691              		.loc 10 358 9 is_stmt 1 view .LVU455
 1692 0272 002C     		cmp	r4, #0
 1693 0274 47D1     		bne	.L99
 361:MIDIController.cpp ****         }
 1694              		.loc 10 361 13 view .LVU456
 1695              	.LVL119:
 1696              	.LBB472:
 1697              	.LBI472:
 208:../../libDaisy/src/hid/midi.h ****     {
 1698              		.loc 6 208 10 view .LVU457
 1699              	.LBB473:
 1700              		.loc 6 210 22 is_stmt 0 view .LVU458
 1701 0276 0322     		movs	r2, #3
 1702 0278 07A9     		add	r1, sp, #28
 1703              	.LVL120:
 1704              		.loc 6 210 22 view .LVU459
 1705 027a 3848     		ldr	r0, .L101+20
 1706 027c FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1707              	.LVL121:
 1708              	.L73:
 1709              		.loc 6 210 22 view .LVU460
 1710              	.LBE473:
 1711              	.LBE472:
 364:MIDIController.cpp ****         last_knob3 = knob3_value;
 1712              		.loc 10 364 9 is_stmt 1 view .LVU461
 364:MIDIController.cpp ****         last_knob3 = knob3_value;
 1713              		.loc 10 364 21 is_stmt 0 view .LVU462
 1714 0280 86ED00AA 		vstr.32	s20, [r6]
 365:MIDIController.cpp ****     }
 1715              		.loc 10 365 9 is_stmt 1 view .LVU463
 365:MIDIController.cpp ****     }
 1716              		.loc 10 365 20 is_stmt 0 view .LVU464
 1717 0284 87ED00BA 		vstr.32	s22, [r7]
 1718 0288 6BE7     		b	.L70
 1719              	.LVL122:
 1720              	.L64:
 365:MIDIController.cpp ****     }
 1721              		.loc 10 365 20 view .LVU465
 1722              	.LBE471:
 1723              	.LBE511:
 1724              	.LBB512:
 1725              	.LBB463:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 68


 326:MIDIController.cpp ****         
 1726              		.loc 10 326 9 is_stmt 1 view .LVU466
 326:MIDIController.cpp ****         
 1727              		.loc 10 326 46 is_stmt 0 view .LVU467
 1728 028a DFED32AA 		vldr.32	s21, .L101+12
 1729              	.LVL123:
 329:MIDIController.cpp ****         int decay_value = (int)(curved_decay * 127);
 1730              		.loc 10 329 44 view .LVU468
 1731 028e B0EE490A 		vmov.f32	s0, s18
 1732 0292 DFED3C0A 		vldr.32	s1, .L101+60
 326:MIDIController.cpp ****         
 1733              		.loc 10 326 46 view .LVU469
 1734 0296 69EE2A7A 		vmul.f32	s15, s18, s21
 329:MIDIController.cpp ****         int decay_value = (int)(curved_decay * 127);
 1735              		.loc 10 329 44 view .LVU470
 1736 029a 68EEA00A 		vmul.f32	s1, s17, s1
 326:MIDIController.cpp ****         
 1737              		.loc 10 326 13 view .LVU471
 1738 029e FDEEE77A 		vcvt.s32.f32	s15, s15
 1739 02a2 17EE906A 		vmov	r6, s15	@ int
 1740              	.LVL124:
 329:MIDIController.cpp ****         int decay_value = (int)(curved_decay * 127);
 1741              		.loc 10 329 9 is_stmt 1 view .LVU472
 329:MIDIController.cpp ****         int decay_value = (int)(curved_decay * 127);
 1742              		.loc 10 329 44 is_stmt 0 view .LVU473
 1743 02a6 FFF7FEFF 		bl	_Z14remapWithCurveff
 1744              	.LVL125:
 330:MIDIController.cpp ****         
 1745              		.loc 10 330 9 is_stmt 1 view .LVU474
 330:MIDIController.cpp ****         
 1746              		.loc 10 330 46 is_stmt 0 view .LVU475
 1747 02aa 20EE2A0A 		vmul.f32	s0, s0, s21
 1748              	.LVL126:
 333:MIDIController.cpp ****         uint8_t cc_decay[3] = {0xB0, JUNO_REVERB_DECAY, decay_value};
 1749              		.loc 10 333 17 view .LVU476
 1750 02ae B023     		movs	r3, #176
 333:MIDIController.cpp ****         uint8_t cc_decay[3] = {0xB0, JUNO_REVERB_DECAY, decay_value};
 1751              		.loc 10 333 68 view .LVU477
 1752 02b0 8DF81A60 		strb	r6, [sp, #26]
 333:MIDIController.cpp ****         uint8_t cc_decay[3] = {0xB0, JUNO_REVERB_DECAY, decay_value};
 1753              		.loc 10 333 17 view .LVU478
 1754 02b4 8DF81830 		strb	r3, [sp, #24]
 330:MIDIController.cpp ****         
 1755              		.loc 10 330 13 view .LVU479
 1756 02b8 FDEEC07A 		vcvt.s32.f32	s15, s0
 334:MIDIController.cpp ****         
 1757              		.loc 10 334 17 view .LVU480
 1758 02bc 8DF81C30 		strb	r3, [sp, #28]
 333:MIDIController.cpp ****         uint8_t cc_decay[3] = {0xB0, JUNO_REVERB_DECAY, decay_value};
 1759              		.loc 10 333 17 view .LVU481
 1760 02c0 5123     		movs	r3, #81
 330:MIDIController.cpp ****         
 1761              		.loc 10 330 13 view .LVU482
 1762 02c2 17EE902A 		vmov	r2, s15	@ int
 1763              	.LVL127:
 333:MIDIController.cpp ****         uint8_t cc_decay[3] = {0xB0, JUNO_REVERB_DECAY, decay_value};
 1764              		.loc 10 333 9 is_stmt 1 view .LVU483
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 69


 334:MIDIController.cpp ****         
 1765              		.loc 10 334 9 view .LVU484
 333:MIDIController.cpp ****         uint8_t cc_decay[3] = {0xB0, JUNO_REVERB_DECAY, decay_value};
 1766              		.loc 10 333 17 is_stmt 0 view .LVU485
 1767 02c6 8DF81930 		strb	r3, [sp, #25]
 334:MIDIController.cpp ****         
 1768              		.loc 10 334 17 view .LVU486
 1769 02ca 5B23     		movs	r3, #91
 334:MIDIController.cpp ****         
 1770              		.loc 10 334 68 view .LVU487
 1771 02cc 8DF81E20 		strb	r2, [sp, #30]
 336:MIDIController.cpp ****             hw.PrintLine("Reverb Level: %d, Decay: %d (Curve: %.2f)", 
 1772              		.loc 10 336 9 is_stmt 1 view .LVU488
 334:MIDIController.cpp ****         
 1773              		.loc 10 334 17 is_stmt 0 view .LVU489
 1774 02d0 8DF81D30 		strb	r3, [sp, #29]
 336:MIDIController.cpp ****             hw.PrintLine("Reverb Level: %d, Decay: %d (Curve: %.2f)", 
 1775              		.loc 10 336 9 view .LVU490
 1776 02d4 74B9     		cbnz	r4, .L100
 340:MIDIController.cpp ****             midi.SendMessage(cc_decay, sizeof(cc_decay));
 1777              		.loc 10 340 13 is_stmt 1 view .LVU491
 1778              	.LVL128:
 1779              	.LBB464:
 1780              	.LBI464:
 208:../../libDaisy/src/hid/midi.h ****     {
 1781              		.loc 6 208 10 view .LVU492
 1782              	.LBB465:
 1783              		.loc 6 210 22 is_stmt 0 view .LVU493
 1784 02d6 0322     		movs	r2, #3
 1785              	.LVL129:
 1786              		.loc 6 210 22 view .LVU494
 1787 02d8 06A9     		add	r1, sp, #24
 1788              	.LVL130:
 1789              		.loc 6 210 22 view .LVU495
 1790 02da 2048     		ldr	r0, .L101+20
 1791 02dc FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1792              	.LVL131:
 1793              		.loc 6 210 22 view .LVU496
 1794              	.LBE465:
 1795              	.LBE464:
 341:MIDIController.cpp ****         }
 1796              		.loc 10 341 13 is_stmt 1 view .LVU497
 1797              	.LBB466:
 1798              	.LBI466:
 208:../../libDaisy/src/hid/midi.h ****     {
 1799              		.loc 6 208 10 view .LVU498
 1800              	.LBB467:
 1801              		.loc 6 210 22 is_stmt 0 view .LVU499
 1802 02e0 0322     		movs	r2, #3
 1803 02e2 07A9     		add	r1, sp, #28
 1804              	.LVL132:
 1805              		.loc 6 210 22 view .LVU500
 1806 02e4 1D48     		ldr	r0, .L101+20
 1807 02e6 FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 1808              	.LVL133:
 1809              	.L68:
 1810              		.loc 6 210 22 view .LVU501
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 70


 1811              	.LBE467:
 1812              	.LBE466:
 344:MIDIController.cpp ****         last_knob2 = knob2_value;
 1813              		.loc 10 344 9 is_stmt 1 view .LVU502
 344:MIDIController.cpp ****         last_knob2 = knob2_value;
 1814              		.loc 10 344 21 is_stmt 0 view .LVU503
 1815 02ea 87ED009A 		vstr.32	s18, [r7]
 345:MIDIController.cpp ****     }
 1816              		.loc 10 345 9 is_stmt 1 view .LVU504
 345:MIDIController.cpp ****     }
 1817              		.loc 10 345 20 is_stmt 0 view .LVU505
 1818 02ee C5ED008A 		vstr.32	s17, [r5]
 1819 02f2 1CE7     		b	.L65
 1820              	.LVL134:
 1821              	.L100:
 337:MIDIController.cpp ****                         basic_level, decay_value, knob2_value);
 1822              		.loc 10 337 13 is_stmt 1 view .LVU506
 1823              	.LBB468:
 1824              	.LBI468:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1825              		.loc 1 126 17 view .LVU507
 1826              	.LBB469:
 1827              		.loc 1 128 23 is_stmt 0 view .LVU508
 1828 02f4 B7EEE87A 		vcvt.f64.f32	d7, s17
 1829 02f8 3146     		mov	r1, r6
 1830 02fa 2348     		ldr	r0, .L101+64
 1831 02fc 8DED007B 		vstr.64	d7, [sp]
 1832 0300 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1833              	.LVL135:
 129:../../libDaisy/src/daisy_seed.h ****     }
 1834              		.loc 1 129 5 view .LVU509
 1835 0304 F1E7     		b	.L68
 1836              	.LVL136:
 1837              	.L99:
 1838              		.loc 1 129 5 view .LVU510
 1839              	.LBE469:
 1840              	.LBE468:
 1841              	.LBE463:
 1842              	.LBE512:
 1843              	.LBB513:
 1844              	.LBB476:
 359:MIDIController.cpp ****         } else {
 1845              		.loc 10 359 13 is_stmt 1 view .LVU511
 1846              	.LBB474:
 1847              	.LBI474:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1848              		.loc 1 126 17 view .LVU512
 1849              	.LBB475:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1850              		.loc 1 128 23 is_stmt 0 view .LVU513
 1851 0306 B7EECB7A 		vcvt.f64.f32	d7, s22
 1852 030a 2048     		ldr	r0, .L101+68
 1853 030c 53EC172B 		vmov	r2, r3, d7
 1854 0310 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1855              	.LVL137:
 1856              		.loc 1 129 5 view .LVU514
 1857 0314 B4E7     		b	.L73
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 71


 1858              	.LVL138:
 1859              	.L98:
 1860              		.loc 1 129 5 view .LVU515
 1861              	.LBE475:
 1862              	.LBE474:
 1863              	.LBE476:
 1864              	.LBE513:
 1865              	.LBB514:
 1866              	.LBB505:
 399:MIDIController.cpp ****         hw.PrintLine("Knob2: %d", knob2_int);
 1867              		.loc 10 399 9 is_stmt 1 view .LVU516
 400:MIDIController.cpp ****         last_knob2 = knob2_value;
 1868              		.loc 10 400 9 view .LVU517
 1869              	.LBB506:
 1870              	.LBI506:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1871              		.loc 1 126 17 view .LVU518
 1872              	.LBE506:
 399:MIDIController.cpp ****         hw.PrintLine("Knob2: %d", knob2_int);
 1873              		.loc 10 399 43 is_stmt 0 view .LVU519
 1874 0316 DFED1E7A 		vldr.32	s15, .L101+72
 1875              	.LBB509:
 1876              	.LBB507:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1877              		.loc 1 128 23 view .LVU520
 1878 031a 1E48     		ldr	r0, .L101+76
 1879              	.LBE507:
 1880              	.LBE509:
 399:MIDIController.cpp ****         hw.PrintLine("Knob2: %d", knob2_int);
 1881              		.loc 10 399 43 view .LVU521
 1882 031c 68EEA77A 		vmul.f32	s15, s17, s15
 1883              	.LBB510:
 1884              	.LBB508:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1885              		.loc 1 128 23 view .LVU522
 1886 0320 FDEEE77A 		vcvt.s32.f32	s15, s15
 1887 0324 17EE901A 		vmov	r1, s15	@ int
 1888 0328 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1889              	.LVL139:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1890              		.loc 1 128 23 view .LVU523
 1891              	.LBE508:
 1892              	.LBE510:
 401:MIDIController.cpp ****     }
 1893              		.loc 10 401 9 is_stmt 1 view .LVU524
 401:MIDIController.cpp ****     }
 1894              		.loc 10 401 20 is_stmt 0 view .LVU525
 1895 032c C5ED008A 		vstr.32	s17, [r5]
 1896              	.LBE505:
 1897              	.LBE514:
 1898              		.loc 10 413 1 view .LVU526
 1899 0330 08B0     		add	sp, sp, #32
 1900              		.cfi_remember_state
 1901              		.cfi_def_cfa_offset 56
 1902              		@ sp needed
 1903 0332 BDEC088B 		vldm	sp!, {d8-d11}
 1904              		.cfi_restore 86
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 72


 1905              		.cfi_restore 87
 1906              		.cfi_restore 84
 1907              		.cfi_restore 85
 1908              		.cfi_restore 82
 1909              		.cfi_restore 83
 1910              		.cfi_restore 80
 1911              		.cfi_restore 81
 1912              		.cfi_def_cfa_offset 24
 1913              	.LVL140:
 1914              		.loc 10 413 1 view .LVU527
 1915 0336 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1916              	.LVL141:
 1917              	.L96:
 1918              		.cfi_restore_state
 1919              		.loc 10 413 1 view .LVU528
 1920 033a 07A9     		add	r1, sp, #28
 1921 033c C3E6     		b	.L60
 1922              	.LVL142:
 1923              	.L97:
 1924              	.LBB515:
 1925              	.LBB503:
 1926              	.LBB502:
 1927              	.LBB495:
 382:MIDIController.cpp ****             } else {
 1928              		.loc 10 382 17 is_stmt 1 view .LVU529
 1929              	.LBB489:
 1930              	.LBI489:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1931              		.loc 1 126 17 view .LVU530
 1932              	.LBB490:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1933              		.loc 1 128 23 is_stmt 0 view .LVU531
 1934 033e 3146     		mov	r1, r6
 1935 0340 1548     		ldr	r0, .L101+80
 1936 0342 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1937              	.LVL143:
 1938              		.loc 1 129 5 view .LVU532
 1939 0346 66E7     		b	.L78
 1940              	.L102:
 1941              		.align	2
 1942              	.L101:
 1943 0348 18000000 		.word	.LANCHOR26+24
 1944 034c 00000000 		.word	.LANCHOR32
 1945 0350 0AD7233C 		.word	1008981770
 1946 0354 0000FE42 		.word	1123942400
 1947 0358 00000000 		.word	.LANCHOR33
 1948 035c 04000000 		.word	midi+4
 1949 0360 00000000 		.word	.LC1
 1950 0364 04000000 		.word	.LC2
 1951 0368 08000000 		.word	.LC3
 1952 036c 00000000 		.word	.LANCHOR34
 1953 0370 00000000 		.word	.LANCHOR35
 1954 0374 00000000 		.word	.LANCHOR36
 1955 0378 00000000 		.word	.LANCHOR37
 1956 037c 00000000 		.word	.LANCHOR38
 1957 0380 0000CC42 		.word	1120665600
 1958 0384 00C07F44 		.word	1149222912
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 73


 1959 0388 18000000 		.word	.LC4
 1960 038c 44000000 		.word	.LC5
 1961 0390 00007A44 		.word	1148846080
 1962 0394 70000000 		.word	.LC7
 1963 0398 60000000 		.word	.LC6
 1964 039c 00000000 		.word	.LANCHOR39
 1965              	.LBE490:
 1966              	.LBE489:
 1967              	.LBE495:
 1968              	.LBE502:
 1969              	.LBE503:
 1970              	.LBE515:
 1971              		.cfi_endproc
 1972              	.LFE4691:
 1974              		.section	.rodata._Z11ReadButtonsb.str1.4,"aMS",%progbits,1
 1975              		.align	2
 1976              	.LC8:
 1977 0000 42757474 		.ascii	"Button 1 pressed:  Sending random value to DCO LFO\000"
 1977      6F6E2031 
 1977      20707265 
 1977      73736564 
 1977      3A202053 
 1978 0033 00       		.align	2
 1979              	.LC9:
 1980 0034 4D696469 		.ascii	"Midi message is: \000"
 1980      206D6573 
 1980      73616765 
 1980      2069733A 
 1980      2000
 1981 0046 0000     		.align	2
 1982              	.LC10:
 1983 0048 25642000 		.ascii	"%d \000"
 1984              		.align	2
 1985              	.LC11:
 1986 004c 00       		.ascii	"\000"
 1987 004d 000000   		.align	2
 1988              	.LC12:
 1989 0050 21212120 		.ascii	"!!! Button 1 released\000"
 1989      42757474 
 1989      6F6E2031 
 1989      2072656C 
 1989      65617365 
 1990 0066 0000     		.align	2
 1991              	.LC14:
 1992 0068 42757474 		.ascii	"Button 1 released: stopping random DCO LFO\000"
 1992      6F6E2031 
 1992      2072656C 
 1992      65617365 
 1992      643A2073 
 1993 0093 00       		.align	2
 1994              	.LC15:
 1995 0094 42757474 		.ascii	"Button 2 pressed: Chorus ON\000"
 1995      6F6E2032 
 1995      20707265 
 1995      73736564 
 1995      3A204368 
 1996              		.align	2
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 74


 1997              	.LC16:
 1998 00b0 43686F72 		.ascii	"Chorus %s\000"
 1998      75732025 
 1998      7300
 1999 00ba 0000     		.align	2
 2000              	.LC13:
 2001 00bc B04D00   		.ascii	"\260M\000"
 2002              		.section	.text._Z11ReadButtonsb,"ax",%progbits
 2003              		.align	1
 2004              		.p2align 2,,3
 2005              		.global	_Z11ReadButtonsb
 2006              		.syntax unified
 2007              		.thumb
 2008              		.thumb_func
 2010              	_Z11ReadButtonsb:
 2011              	.LVL144:
 2012              	.LFB4692:
 414:MIDIController.cpp **** 
 415:MIDIController.cpp **** 
 416:MIDIController.cpp **** 
 417:MIDIController.cpp **** 
 418:MIDIController.cpp **** void ReadButtons(bool useSerialLogger) {
 2013              		.loc 10 418 40 is_stmt 1 view -0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 8
 2016              		@ frame_needed = 0, uses_anonymous_args = 0
 419:MIDIController.cpp **** 
 420:MIDIController.cpp ****          // Read current button states (invert because of pull-up)
 421:MIDIController.cpp **** 
 422:MIDIController.cpp ****         bool button1_current = !button1.Read();
 2017              		.loc 10 422 9 view .LVU534
 418:MIDIController.cpp **** 
 2018              		.loc 10 418 40 is_stmt 0 view .LVU535
 2019 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2020              		.cfi_def_cfa_offset 24
 2021              		.cfi_offset 4, -24
 2022              		.cfi_offset 5, -20
 2023              		.cfi_offset 6, -16
 2024              		.cfi_offset 7, -12
 2025              		.cfi_offset 8, -8
 2026              		.cfi_offset 14, -4
 2027 0004 0746     		mov	r7, r0
 2028 0006 82B0     		sub	sp, sp, #8
 2029              		.cfi_def_cfa_offset 32
 2030              		.loc 10 422 45 view .LVU536
 2031 0008 6F48     		ldr	r0, .L140
 2032              	.LVL145:
 2033              		.loc 10 422 45 view .LVU537
 2034 000a FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 2035              	.LVL146:
 2036 000e 0446     		mov	r4, r0
 2037              	.LBB516:
 423:MIDIController.cpp ****         bool button2_current = !button2.Read();
 424:MIDIController.cpp ****         bool button3_current = !button3.Read();
 425:MIDIController.cpp **** 
 426:MIDIController.cpp ****         // Only handle state changes
 427:MIDIController.cpp ****         if (button1_current != button1_last_state) { // button 1 is to momentary send a random valu
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 75


 2038              		.loc 10 427 29 view .LVU538
 2039 0010 DFF80482 		ldr	r8, .L140+80
 2040              	.LBE516:
 423:MIDIController.cpp ****         bool button2_current = !button2.Read();
 2041              		.loc 10 423 45 view .LVU539
 2042 0014 6D48     		ldr	r0, .L140+4
 422:MIDIController.cpp ****         bool button2_current = !button2.Read();
 2043              		.loc 10 422 46 view .LVU540
 2044 0016 84F00104 		eor	r4, r4, #1
 423:MIDIController.cpp ****         bool button2_current = !button2.Read();
 2045              		.loc 10 423 45 view .LVU541
 2046 001a FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 2047              	.LVL147:
 2048 001e 0546     		mov	r5, r0
 424:MIDIController.cpp **** 
 2049              		.loc 10 424 45 view .LVU542
 2050 0020 6B48     		ldr	r0, .L140+8
 422:MIDIController.cpp ****         bool button2_current = !button2.Read();
 2051              		.loc 10 422 46 view .LVU543
 2052 0022 E4B2     		uxtb	r4, r4
 2053              	.LVL148:
 423:MIDIController.cpp ****         bool button2_current = !button2.Read();
 2054              		.loc 10 423 9 is_stmt 1 view .LVU544
 424:MIDIController.cpp **** 
 2055              		.loc 10 424 45 is_stmt 0 view .LVU545
 2056 0024 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 2057              	.LVL149:
 2058              	.LBB562:
 2059              		.loc 10 427 9 view .LVU546
 2060 0028 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 2061              	.LBE562:
 423:MIDIController.cpp ****         bool button2_current = !button2.Read();
 2062              		.loc 10 423 46 view .LVU547
 2063 002c 85F00105 		eor	r5, r5, #1
 424:MIDIController.cpp **** 
 2064              		.loc 10 424 46 view .LVU548
 2065 0030 80F00106 		eor	r6, r0, #1
 2066              	.LBB563:
 2067              		.loc 10 427 9 view .LVU549
 2068 0034 A342     		cmp	r3, r4
 2069              	.LBE563:
 423:MIDIController.cpp ****         bool button2_current = !button2.Read();
 2070              		.loc 10 423 46 view .LVU550
 2071 0036 EDB2     		uxtb	r5, r5
 2072              	.LVL150:
 424:MIDIController.cpp **** 
 2073              		.loc 10 424 9 is_stmt 1 view .LVU551
 424:MIDIController.cpp **** 
 2074              		.loc 10 424 46 is_stmt 0 view .LVU552
 2075 0038 F6B2     		uxtb	r6, r6
 2076              	.LVL151:
 2077              		.loc 10 427 9 is_stmt 1 view .LVU553
 2078              	.LBB564:
 2079 003a 21D0     		beq	.L104
 2080              	.LBB517:
 428:MIDIController.cpp ****             if (button1_current) {
 2081              		.loc 10 428 13 view .LVU554
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 76


 2082              	.LBB518:
 2083              	.LBB519:
 429:MIDIController.cpp ****                 current_led_mode = RANDOM_LFO;
 2084              		.loc 10 429 34 is_stmt 0 view .LVU555
 2085 003c 654B     		ldr	r3, .L140+12
 2086              	.LBE519:
 428:MIDIController.cpp ****             if (button1_current) {
 2087              		.loc 10 428 13 view .LVU556
 2088 003e 002C     		cmp	r4, #0
 2089 0040 5CD0     		beq	.L105
 2090              	.LBB536:
 2091              		.loc 10 429 17 is_stmt 1 view .LVU557
 2092              		.loc 10 429 34 is_stmt 0 view .LVU558
 2093 0042 0122     		movs	r2, #1
 2094 0044 1A70     		strb	r2, [r3]
 430:MIDIController.cpp ****                 
 431:MIDIController.cpp ****                 // uint8_t note_on[3] = {0x90, 60, 100};  // 0x90 = Note On channel 0, middle C, ve
 432:MIDIController.cpp ****                 uint8_t ccDCO_LFO[3] = {0xB0, JUNO_DCO_LFO, rand() % 128};  // 0xB0 = CC channel 0,
 2095              		.loc 10 432 17 is_stmt 1 view .LVU559
 2096              		.loc 10 432 25 is_stmt 0 view .LVU560
 2097 0046 0023     		movs	r3, #0
 2098 0048 8DF80630 		strb	r3, [sp, #6]
 2099 004c B023     		movs	r3, #176
 2100 004e 8DF80430 		strb	r3, [sp, #4]
 2101 0052 4D23     		movs	r3, #77
 2102 0054 8DF80530 		strb	r3, [sp, #5]
 2103              		.loc 10 432 65 view .LVU561
 2104 0058 FFF7FEFF 		bl	rand
 2105              	.LVL152:
 2106              		.loc 10 432 68 view .LVU562
 2107 005c 4342     		rsbs	r3, r0, #0
 2108 005e 00F07F00 		and	r0, r0, #127
 2109 0062 03F07F03 		and	r3, r3, #127
 2110 0066 58BF     		it	pl
 2111 0068 5842     		rsbpl	r0, r3, #0
 2112              		.loc 10 432 73 view .LVU563
 2113 006a 8DF80600 		strb	r0, [sp, #6]
 433:MIDIController.cpp ****                 if (useSerialLogger) {
 2114              		.loc 10 433 17 is_stmt 1 view .LVU564
 2115              	.LBB520:
 2116 006e 002F     		cmp	r7, #0
 2117 0070 67D1     		bne	.L136
 2118              	.L109:
 2119              	.LBE520:
 2120              	.LBE536:
 2121              	.LBB537:
 2122              	.LBB538:
 434:MIDIController.cpp ****                     hw.PrintLine("Button 1 pressed:  Sending random value to DCO LFO");
 435:MIDIController.cpp ****                     hw.Print("Midi message is: ");
 436:MIDIController.cpp ****                     for (int i = 0; i < 3; i++) {
 437:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 438:MIDIController.cpp ****                     }
 439:MIDIController.cpp ****                     hw.PrintLine("");
 440:MIDIController.cpp **** 
 441:MIDIController.cpp **** 
 442:MIDIController.cpp ****                     // hw.PrintLine("Button 1 pressed\n");
 443:MIDIController.cpp ****                 }
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 77


 444:MIDIController.cpp ****                 else {
 445:MIDIController.cpp ****                     midi.SendMessage(ccDCO_LFO, sizeof(ccDCO_LFO));
 446:MIDIController.cpp ****                 }
 447:MIDIController.cpp **** 
 448:MIDIController.cpp ****             } else {
 449:MIDIController.cpp ****                 current_led_mode = OFF;
 450:MIDIController.cpp ****                 hw.PrintLine("!!! Button 1 released");
 451:MIDIController.cpp ****                 // hw.PrintLine("Button 1 released: stopping random DCO LFO");
 452:MIDIController.cpp ****                 uint8_t ccDCO_LFO[3] = {0xB0, JUNO_DCO_LFO, 0};  // 0xB0 = CC channel 0, DCO LFO, r
 453:MIDIController.cpp ****                 if (useSerialLogger) {
 454:MIDIController.cpp ****                     hw.PrintLine("Button 1 released: stopping random DCO LFO");
 455:MIDIController.cpp ****                     hw.Print("Midi message is: ");
 456:MIDIController.cpp ****                     for (int i = 0; i < 3; i++) {
 457:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 458:MIDIController.cpp ****                     }
 459:MIDIController.cpp ****                     // hw.PrintLine("Button 1 released\n");
 460:MIDIController.cpp ****                 }
 461:MIDIController.cpp ****                 else {
 462:MIDIController.cpp ****                     midi.SendMessage(ccDCO_LFO, sizeof(ccDCO_LFO));
 2123              		.loc 10 462 21 view .LVU565
 2124              	.LVL153:
 2125              	.LBB539:
 2126              	.LBI539:
 208:../../libDaisy/src/hid/midi.h ****     {
 2127              		.loc 6 208 10 view .LVU566
 2128              	.LBB540:
 2129              		.loc 6 210 22 is_stmt 0 view .LVU567
 2130 0072 0322     		movs	r2, #3
 2131 0074 01A9     		add	r1, sp, #4
 2132              	.LVL154:
 2133              		.loc 6 210 22 view .LVU568
 2134 0076 5848     		ldr	r0, .L140+16
 2135 0078 FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 2136              	.LVL155:
 2137              	.L108:
 2138              		.loc 6 210 22 view .LVU569
 2139              	.LBE540:
 2140              	.LBE539:
 2141              	.LBE538:
 2142              	.LBE537:
 2143              	.LBE518:
 463:MIDIController.cpp ****                 }
 464:MIDIController.cpp **** 
 465:MIDIController.cpp ****             }
 466:MIDIController.cpp ****             button1_last_state = button1_current;
 2144              		.loc 10 466 13 is_stmt 1 view .LVU570
 2145              		.loc 10 466 32 is_stmt 0 view .LVU571
 2146 007c 88F80040 		strb	r4, [r8]
 2147              	.L104:
 2148              		.loc 10 466 32 view .LVU572
 2149              	.LBE517:
 2150              	.LBE564:
 467:MIDIController.cpp **** 
 468:MIDIController.cpp **** 
 469:MIDIController.cpp ****         }
 470:MIDIController.cpp ****         // if (button1_current) { // if button 1 is pressed, alternate the red LEDs
 471:MIDIController.cpp ****         //     static uint32_t last_toggle = 0;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 78


 472:MIDIController.cpp ****         //     uint32_t now = System::GetNow();
 473:MIDIController.cpp ****         //     if (now - last_toggle > 100) {  // 100ms interval
 474:MIDIController.cpp ****         //         led_state = !led_state;  // Toggle state
 475:MIDIController.cpp ****         //         LED_R1.Write(led_state);     // One LED on
 476:MIDIController.cpp ****         //         LED_R2.Write(!led_state);    // Other LED off
 477:MIDIController.cpp ****         //         last_toggle = now;
 478:MIDIController.cpp ****         //     }
 479:MIDIController.cpp ****         // } else {
 480:MIDIController.cpp ****         //     // When button released, turn both off
 481:MIDIController.cpp ****         //     LED_R1.Write(false);
 482:MIDIController.cpp ****         //     LED_R2.Write(false);
 483:MIDIController.cpp ****         // }
 484:MIDIController.cpp ****         
 485:MIDIController.cpp **** 
 486:MIDIController.cpp ****         if (button2_current != button2_last_state) {
 2151              		.loc 10 486 9 is_stmt 1 view .LVU573
 2152              	.LBB565:
 2153              		.loc 10 486 29 is_stmt 0 view .LVU574
 2154 0080 564C     		ldr	r4, .L140+20
 2155              	.LVL156:
 2156              		.loc 10 486 9 view .LVU575
 2157 0082 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2158 0084 AB42     		cmp	r3, r5
 2159 0086 01D0     		beq	.L111
 2160              	.LBB566:
 487:MIDIController.cpp ****             if (button2_current) {
 2161              		.loc 10 487 13 is_stmt 1 view .LVU576
 2162              	.LBB567:
 2163 0088 0DBB     		cbnz	r5, .L137
 2164              	.L112:
 2165              	.LBE567:
 488:MIDIController.cpp ****                 // Toggle chorus and LED oscillation
 489:MIDIController.cpp ****                 // oscillate_leds = !oscillate_leds;  // Enable LED oscillation
 490:MIDIController.cpp ****                 
 491:MIDIController.cpp ****                 // Send chorus ON message (value 127)
 492:MIDIController.cpp ****                 unison_active = !unison_active;  // Toggle state
 493:MIDIController.cpp ****                 current_led_mode = unison_active ? UNISON_BLINK : OFF;
 494:MIDIController.cpp ****                 // uint8_t cc_chorus[3] = {0xB0, JUNO_CHORUS1, 127};
 495:MIDIController.cpp ****                 uint8_t cc_chorus[3] = {0xB0, JUNO_UNISON, unison_active ? 127 : 0};
 496:MIDIController.cpp ****                 if (useSerialLogger) {
 497:MIDIController.cpp ****                     hw.PrintLine("Button 2 pressed: Chorus ON");
 498:MIDIController.cpp ****                 } 
 499:MIDIController.cpp ****                 else {
 500:MIDIController.cpp ****                     midi.SendMessage(cc_chorus, sizeof(cc_chorus));
 501:MIDIController.cpp ****                 }
 502:MIDIController.cpp ****             }
 503:MIDIController.cpp ****             // else {
 504:MIDIController.cpp ****             //     // Turn off chorus and stop LED oscillation
 505:MIDIController.cpp ****             //     // oscillate_leds = false;
 506:MIDIController.cpp ****             //     uint8_t cc_chorus[3] = {0xB0, JUNO_CHORUS1, 0};
 507:MIDIController.cpp ****             //     if (useSerialLogger) {
 508:MIDIController.cpp ****             //         hw.PrintLine("Button 2 released: Chorus OFF");
 509:MIDIController.cpp ****             //     } else {
 510:MIDIController.cpp ****             //         midi.SendMessage(cc_chorus, sizeof(cc_chorus));
 511:MIDIController.cpp ****             //     }
 512:MIDIController.cpp ****             // }
 513:MIDIController.cpp ****             button2_last_state = button2_current;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 79


 2166              		.loc 10 513 13 view .LVU577
 2167              		.loc 10 513 32 is_stmt 0 view .LVU578
 2168 008a 2570     		strb	r5, [r4]
 2169              	.L111:
 2170              		.loc 10 513 32 view .LVU579
 2171              	.LBE566:
 2172              	.LBE565:
 514:MIDIController.cpp ****         }
 515:MIDIController.cpp ****         // if (unison_active) { // if button 1 is pressed, alternate the red LEDs
 516:MIDIController.cpp ****         //     static uint32_t last_toggle = 0;
 517:MIDIController.cpp ****         //     uint32_t now = System::GetNow();
 518:MIDIController.cpp ****         //     if (now - last_toggle > 200) {  
 519:MIDIController.cpp ****         //         led_state = !led_state;  // Toggle state
 520:MIDIController.cpp ****         //         LED_W1.Write(led_state);     
 521:MIDIController.cpp ****         //         LED_W2.Write(led_state);    
 522:MIDIController.cpp ****         //         last_toggle = now;
 523:MIDIController.cpp ****         //     }
 524:MIDIController.cpp ****         // } else {
 525:MIDIController.cpp ****         //     // When button released, turn both off
 526:MIDIController.cpp ****         //     LED_W1.Write(false);
 527:MIDIController.cpp ****         //     LED_W2.Write(false);
 528:MIDIController.cpp ****         // }
 529:MIDIController.cpp **** 
 530:MIDIController.cpp ****         // if (button3_current != button3_last_state) {
 531:MIDIController.cpp ****         //     if (button3_current) {
 532:MIDIController.cpp ****         //         hw.PrintLine("Button 3 pressed");
 533:MIDIController.cpp ****         //         hw.SetLed(true);
 534:MIDIController.cpp ****         //     } else {
 535:MIDIController.cpp ****         //         hw.PrintLine("Button 3 released");
 536:MIDIController.cpp ****         //         hw.SetLed(false);
 537:MIDIController.cpp ****         //     }
 538:MIDIController.cpp ****         //     button3_last_state = button3_current;
 539:MIDIController.cpp ****         // }
 540:MIDIController.cpp ****         if (button3_current != button3_last_state) {
 2173              		.loc 10 540 9 is_stmt 1 view .LVU580
 2174              	.LBB578:
 2175              		.loc 10 540 29 is_stmt 0 view .LVU581
 2176 008c 544C     		ldr	r4, .L140+24
 2177              		.loc 10 540 9 view .LVU582
 2178 008e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2179 0090 B342     		cmp	r3, r6
 2180 0092 01D0     		beq	.L103
 2181              	.LBB579:
 541:MIDIController.cpp ****             if (button3_current) {  // Button pressed
 2182              		.loc 10 541 13 is_stmt 1 view .LVU583
 2183              	.LBB580:
 2184 0094 1EB9     		cbnz	r6, .L138
 2185              	.L118:
 2186              	.LBE580:
 542:MIDIController.cpp ****                 chorus_state = !chorus_state;  // Toggle state
 543:MIDIController.cpp ****                 current_led_mode = chorus_state ? CHORUS_CYCLE : OFF;
 544:MIDIController.cpp ****                 // Send MIDI message based on new state
 545:MIDIController.cpp ****                 uint8_t cc_chorus[3] = {0xB0, JUNO_CHORUS1, chorus_state ? 127 : 0};
 546:MIDIController.cpp ****                 
 547:MIDIController.cpp ****                 if (useSerialLogger) {
 548:MIDIController.cpp ****                     hw.PrintLine("Chorus %s", chorus_state ? "ON" : "OFF");
 549:MIDIController.cpp ****                 } else {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 80


 550:MIDIController.cpp ****                     midi.SendMessage(cc_chorus, sizeof(cc_chorus));
 551:MIDIController.cpp ****                 }
 552:MIDIController.cpp ****             }
 553:MIDIController.cpp ****             button3_last_state = button3_current;
 2187              		.loc 10 553 13 view .LVU584
 2188              		.loc 10 553 32 is_stmt 0 view .LVU585
 2189 0096 2670     		strb	r6, [r4]
 2190              	.L103:
 2191              		.loc 10 553 32 view .LVU586
 2192              	.LBE579:
 2193              	.LBE578:
 554:MIDIController.cpp ****         }
 555:MIDIController.cpp ****         
 556:MIDIController.cpp ****         //     if (chorus_state) { // LED logic
 557:MIDIController.cpp ****         //     static uint32_t last_toggle = 0;
 558:MIDIController.cpp ****         //     static uint8_t led_position = 0;
 559:MIDIController.cpp ****         //     uint32_t now = System::GetNow();
 560:MIDIController.cpp ****             
 561:MIDIController.cpp ****         //     if (now - last_toggle > 150) {  // 150ms per LED
 562:MIDIController.cpp ****         //         // Turn off all LEDs
 563:MIDIController.cpp ****         //         LED_R1.Write(false);
 564:MIDIController.cpp ****         //         LED_R2.Write(false);
 565:MIDIController.cpp ****         //         LED_W1.Write(false);
 566:MIDIController.cpp ****         //         LED_W2.Write(false);
 567:MIDIController.cpp ****                 
 568:MIDIController.cpp ****         //         // Turn on next LED in sequence
 569:MIDIController.cpp ****         //         switch(led_position) {
 570:MIDIController.cpp ****         //             case 0: LED_R1.Write(true); break;
 571:MIDIController.cpp ****         //             case 1: LED_R2.Write(true); break;
 572:MIDIController.cpp ****         //             case 2: LED_W1.Write(true); break;
 573:MIDIController.cpp ****         //             case 3: LED_W2.Write(true); break;
 574:MIDIController.cpp ****         //         }
 575:MIDIController.cpp ****                 
 576:MIDIController.cpp ****         //         // Advance position
 577:MIDIController.cpp ****         //         led_position = (led_position + 1) % 4;
 578:MIDIController.cpp ****         //         last_toggle = now;
 579:MIDIController.cpp ****         //     }
 580:MIDIController.cpp ****         // } else {
 581:MIDIController.cpp ****         //     // Turn off all LEDs when chorus is off
 582:MIDIController.cpp ****         //     LED_R1.Write(false);
 583:MIDIController.cpp ****         //     LED_R2.Write(false);
 584:MIDIController.cpp ****         //     LED_W1.Write(false);
 585:MIDIController.cpp ****         //     LED_W2.Write(false);
 586:MIDIController.cpp ****         // }
 587:MIDIController.cpp ****         
 588:MIDIController.cpp **** 
 589:MIDIController.cpp **** 
 590:MIDIController.cpp **** }
 2194              		.loc 10 590 1 view .LVU587
 2195 0098 02B0     		add	sp, sp, #8
 2196              		.cfi_remember_state
 2197              		.cfi_def_cfa_offset 24
 2198              		@ sp needed
 2199 009a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2200              	.LVL157:
 2201              	.L138:
 2202              		.cfi_restore_state
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 81


 2203              	.LBB591:
 2204              	.LBB589:
 2205              	.LBB587:
 2206              	.LBB581:
 542:MIDIController.cpp ****                 chorus_state = !chorus_state;  // Toggle state
 2207              		.loc 10 542 17 is_stmt 1 view .LVU588
 542:MIDIController.cpp ****                 chorus_state = !chorus_state;  // Toggle state
 2208              		.loc 10 542 32 is_stmt 0 view .LVU589
 2209 009e 514A     		ldr	r2, .L140+28
 2210 00a0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2211 00a2 83F00103 		eor	r3, r3, #1
 542:MIDIController.cpp ****                 chorus_state = !chorus_state;  // Toggle state
 2212              		.loc 10 542 30 view .LVU590
 2213 00a6 1370     		strb	r3, [r2]
 543:MIDIController.cpp ****                 // Send MIDI message based on new state
 2214              		.loc 10 543 17 is_stmt 1 view .LVU591
 543:MIDIController.cpp ****                 // Send MIDI message based on new state
 2215              		.loc 10 543 49 is_stmt 0 view .LVU592
 2216 00a8 002B     		cmp	r3, #0
 2217 00aa 77D1     		bne	.L119
 543:MIDIController.cpp ****                 // Send MIDI message based on new state
 2218              		.loc 10 543 34 view .LVU593
 2219 00ac 494A     		ldr	r2, .L140+12
 545:MIDIController.cpp ****                 
 2220              		.loc 10 545 83 view .LVU594
 2221 00ae 8DF80630 		strb	r3, [sp, #6]
 543:MIDIController.cpp ****                 // Send MIDI message based on new state
 2222              		.loc 10 543 34 view .LVU595
 2223 00b2 1370     		strb	r3, [r2]
 545:MIDIController.cpp ****                 
 2224              		.loc 10 545 17 is_stmt 1 view .LVU596
 547:MIDIController.cpp ****                     hw.PrintLine("Chorus %s", chorus_state ? "ON" : "OFF");
 2225              		.loc 10 547 17 view .LVU597
 545:MIDIController.cpp ****                 
 2226              		.loc 10 545 25 is_stmt 0 view .LVU598
 2227 00b4 B022     		movs	r2, #176
 2228 00b6 5023     		movs	r3, #80
 2229 00b8 8DF80420 		strb	r2, [sp, #4]
 2230 00bc 8DF80530 		strb	r3, [sp, #5]
 547:MIDIController.cpp ****                     hw.PrintLine("Chorus %s", chorus_state ? "ON" : "OFF");
 2231              		.loc 10 547 17 view .LVU599
 2232 00c0 002F     		cmp	r7, #0
 2233 00c2 7AD0     		beq	.L123
 548:MIDIController.cpp ****                 } else {
 2234              		.loc 10 548 33 view .LVU600
 2235 00c4 4849     		ldr	r1, .L140+32
 2236              	.L122:
 2237              	.LVL158:
 2238              	.LBB582:
 2239              	.LBI582:
 126:../../libDaisy/src/daisy_seed.h ****     {
 2240              		.loc 1 126 17 is_stmt 1 discriminator 4 view .LVU601
 2241              	.LBB583:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2242              		.loc 1 128 23 is_stmt 0 discriminator 4 view .LVU602
 2243 00c6 4948     		ldr	r0, .L140+36
 2244 00c8 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 82


 2245              	.LVL159:
 2246              		.loc 1 129 5 discriminator 4 view .LVU603
 2247 00cc E3E7     		b	.L118
 2248              	.LVL160:
 2249              	.L137:
 2250              		.loc 1 129 5 discriminator 4 view .LVU604
 2251              	.LBE583:
 2252              	.LBE582:
 2253              	.LBE581:
 2254              	.LBE587:
 2255              	.LBE589:
 2256              	.LBE591:
 2257              	.LBB592:
 2258              	.LBB576:
 2259              	.LBB574:
 2260              	.LBB568:
 492:MIDIController.cpp ****                 current_led_mode = unison_active ? UNISON_BLINK : OFF;
 2261              		.loc 10 492 17 is_stmt 1 view .LVU605
 492:MIDIController.cpp ****                 current_led_mode = unison_active ? UNISON_BLINK : OFF;
 2262              		.loc 10 492 33 is_stmt 0 view .LVU606
 2263 00ce 484A     		ldr	r2, .L140+40
 2264 00d0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2265 00d2 83F00103 		eor	r3, r3, #1
 492:MIDIController.cpp ****                 current_led_mode = unison_active ? UNISON_BLINK : OFF;
 2266              		.loc 10 492 31 view .LVU607
 2267 00d6 1370     		strb	r3, [r2]
 493:MIDIController.cpp ****                 // uint8_t cc_chorus[3] = {0xB0, JUNO_CHORUS1, 127};
 2268              		.loc 10 493 17 is_stmt 1 view .LVU608
 493:MIDIController.cpp ****                 // uint8_t cc_chorus[3] = {0xB0, JUNO_CHORUS1, 127};
 2269              		.loc 10 493 50 is_stmt 0 view .LVU609
 2270 00d8 002B     		cmp	r3, #0
 2271 00da 4BD1     		bne	.L113
 493:MIDIController.cpp ****                 // uint8_t cc_chorus[3] = {0xB0, JUNO_CHORUS1, 127};
 2272              		.loc 10 493 34 view .LVU610
 2273 00dc 3D4A     		ldr	r2, .L140+12
 495:MIDIController.cpp ****                 if (useSerialLogger) {
 2274              		.loc 10 495 83 view .LVU611
 2275 00de 8DF80630 		strb	r3, [sp, #6]
 493:MIDIController.cpp ****                 // uint8_t cc_chorus[3] = {0xB0, JUNO_CHORUS1, 127};
 2276              		.loc 10 493 34 view .LVU612
 2277 00e2 1370     		strb	r3, [r2]
 495:MIDIController.cpp ****                 if (useSerialLogger) {
 2278              		.loc 10 495 17 is_stmt 1 view .LVU613
 496:MIDIController.cpp ****                     hw.PrintLine("Button 2 pressed: Chorus ON");
 2279              		.loc 10 496 17 view .LVU614
 495:MIDIController.cpp ****                 if (useSerialLogger) {
 2280              		.loc 10 495 25 is_stmt 0 view .LVU615
 2281 00e4 B022     		movs	r2, #176
 2282 00e6 8DF80420 		strb	r2, [sp, #4]
 2283 00ea 5D22     		movs	r2, #93
 2284 00ec 8DF80520 		strb	r2, [sp, #5]
 496:MIDIController.cpp ****                     hw.PrintLine("Button 2 pressed: Chorus ON");
 2285              		.loc 10 496 17 view .LVU616
 2286 00f0 002F     		cmp	r7, #0
 2287 00f2 4DD0     		beq	.L115
 2288              	.L139:
 497:MIDIController.cpp ****                 } 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 83


 2289              		.loc 10 497 21 is_stmt 1 view .LVU617
 2290              	.LVL161:
 2291              	.LBB569:
 2292              	.LBI569:
 126:../../libDaisy/src/daisy_seed.h ****     {
 2293              		.loc 1 126 17 view .LVU618
 2294              	.LBB570:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2295              		.loc 1 128 23 is_stmt 0 view .LVU619
 2296 00f4 3F48     		ldr	r0, .L140+44
 2297 00f6 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 2298              	.LVL162:
 2299              		.loc 1 129 5 view .LVU620
 2300 00fa C6E7     		b	.L112
 2301              	.LVL163:
 2302              	.L105:
 2303              		.loc 1 129 5 view .LVU621
 2304              	.LBE570:
 2305              	.LBE569:
 2306              	.LBE568:
 2307              	.LBE574:
 2308              	.LBE576:
 2309              	.LBE592:
 2310              	.LBB593:
 2311              	.LBB561:
 2312              	.LBB560:
 2313              	.LBB558:
 449:MIDIController.cpp ****                 hw.PrintLine("!!! Button 1 released");
 2314              		.loc 10 449 17 is_stmt 1 view .LVU622
 2315              	.LBB553:
 2316              	.LBB554:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2317              		.loc 1 128 23 is_stmt 0 view .LVU623
 2318 00fc 3E48     		ldr	r0, .L140+48
 2319              	.LBE554:
 2320              	.LBE553:
 449:MIDIController.cpp ****                 hw.PrintLine("!!! Button 1 released");
 2321              		.loc 10 449 34 view .LVU624
 2322 00fe 1C70     		strb	r4, [r3]
 450:MIDIController.cpp ****                 // hw.PrintLine("Button 1 released: stopping random DCO LFO");
 2323              		.loc 10 450 17 is_stmt 1 view .LVU625
 2324              	.LVL164:
 2325              	.LBB556:
 2326              	.LBI553:
 126:../../libDaisy/src/daisy_seed.h ****     {
 2327              		.loc 1 126 17 view .LVU626
 2328              	.LBB555:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2329              		.loc 1 128 23 is_stmt 0 view .LVU627
 2330 0100 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 2331              	.LVL165:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2332              		.loc 1 128 23 view .LVU628
 2333              	.LBE555:
 2334              	.LBE556:
 452:MIDIController.cpp ****                 if (useSerialLogger) {
 2335              		.loc 10 452 17 is_stmt 1 view .LVU629
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 84


 452:MIDIController.cpp ****                 if (useSerialLogger) {
 2336              		.loc 10 452 25 is_stmt 0 view .LVU630
 2337 0104 3D4B     		ldr	r3, .L140+52
 2338 0106 1B68     		ldr	r3, [r3]
 2339 0108 ADF80430 		strh	r3, [sp, #4]	@ movhi
 2340 010c 1B0C     		lsrs	r3, r3, #16
 2341 010e 8DF80630 		strb	r3, [sp, #6]
 453:MIDIController.cpp ****                     hw.PrintLine("Button 1 released: stopping random DCO LFO");
 2342              		.loc 10 453 17 is_stmt 1 view .LVU631
 2343              	.LBB557:
 2344 0112 002F     		cmp	r7, #0
 2345 0114 ADD0     		beq	.L109
 2346              	.LBB541:
 454:MIDIController.cpp ****                     hw.Print("Midi message is: ");
 2347              		.loc 10 454 21 view .LVU632
 2348              	.LVL166:
 2349              	.LBB542:
 2350              	.LBI542:
 126:../../libDaisy/src/daisy_seed.h ****     {
 2351              		.loc 1 126 17 view .LVU633
 2352              	.LBB543:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2353              		.loc 1 128 23 is_stmt 0 view .LVU634
 2354 0116 3A48     		ldr	r0, .L140+56
 2355 0118 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 2356              	.LVL167:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2357              		.loc 1 128 23 view .LVU635
 2358              	.LBE543:
 2359              	.LBE542:
 455:MIDIController.cpp ****                     for (int i = 0; i < 3; i++) {
 2360              		.loc 10 455 21 is_stmt 1 view .LVU636
 2361              	.LBB544:
 2362              	.LBI544:
 118:../../libDaisy/src/daisy_seed.h ****     {
 2363              		.loc 1 118 17 view .LVU637
 2364              	.LBB545:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2365              		.loc 1 120 19 is_stmt 0 view .LVU638
 2366 011c 3948     		ldr	r0, .L140+60
 2367 011e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
 2368              	.LVL168:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2369              		.loc 1 120 19 view .LVU639
 2370              	.LBE545:
 2371              	.LBE544:
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2372              		.loc 10 456 21 is_stmt 1 view .LVU640
 2373              	.LBB546:
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2374              		.loc 10 456 39 view .LVU641
 457:MIDIController.cpp ****                     }
 2375              		.loc 10 457 25 view .LVU642
 2376              	.LBB547:
 2377              	.LBI547:
 118:../../libDaisy/src/daisy_seed.h ****     {
 2378              		.loc 1 118 17 view .LVU643
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 85


 2379              	.LBB548:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2380              		.loc 1 120 19 is_stmt 0 view .LVU644
 2381 0122 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 2382 0126 3848     		ldr	r0, .L140+64
 2383 0128 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
 2384              	.LVL169:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2385              		.loc 1 120 19 view .LVU645
 2386              	.LBE548:
 2387              	.LBE547:
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2388              		.loc 10 456 21 is_stmt 1 view .LVU646
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2389              		.loc 10 456 39 view .LVU647
 457:MIDIController.cpp ****                     }
 2390              		.loc 10 457 25 view .LVU648
 2391              	.LBB551:
 118:../../libDaisy/src/daisy_seed.h ****     {
 2392              		.loc 1 118 17 view .LVU649
 2393              	.LBB549:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2394              		.loc 1 120 19 is_stmt 0 view .LVU650
 2395 012c 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 2396 0130 3548     		ldr	r0, .L140+64
 2397 0132 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
 2398              	.LVL170:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2399              		.loc 1 120 19 view .LVU651
 2400              	.LBE549:
 2401              	.LBE551:
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2402              		.loc 10 456 21 is_stmt 1 view .LVU652
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2403              		.loc 10 456 39 view .LVU653
 457:MIDIController.cpp ****                     }
 2404              		.loc 10 457 25 view .LVU654
 2405              	.LBB552:
 118:../../libDaisy/src/daisy_seed.h ****     {
 2406              		.loc 1 118 17 view .LVU655
 2407              	.LBB550:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2408              		.loc 1 120 19 is_stmt 0 view .LVU656
 2409 0136 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 2410 013a 3348     		ldr	r0, .L140+64
 2411 013c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
 2412              	.LVL171:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2413              		.loc 1 120 19 view .LVU657
 2414              	.LBE550:
 2415              	.LBE552:
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2416              		.loc 10 456 21 is_stmt 1 view .LVU658
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2417              		.loc 10 456 39 view .LVU659
 2418 0140 9CE7     		b	.L108
 2419              	.LVL172:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 86


 2420              	.L136:
 456:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2421              		.loc 10 456 39 is_stmt 0 view .LVU660
 2422              	.LBE546:
 2423              	.LBE541:
 2424              	.LBE557:
 2425              	.LBE558:
 2426              	.LBB559:
 2427              	.LBB535:
 2428              	.LBB521:
 434:MIDIController.cpp ****                     hw.Print("Midi message is: ");
 2429              		.loc 10 434 21 is_stmt 1 view .LVU661
 2430              	.LBB522:
 2431              	.LBI522:
 126:../../libDaisy/src/daisy_seed.h ****     {
 2432              		.loc 1 126 17 view .LVU662
 2433              	.LBB523:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2434              		.loc 1 128 23 is_stmt 0 view .LVU663
 2435 0142 3248     		ldr	r0, .L140+68
 2436 0144 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 2437              	.LVL173:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2438              		.loc 1 128 23 view .LVU664
 2439              	.LBE523:
 2440              	.LBE522:
 435:MIDIController.cpp ****                     for (int i = 0; i < 3; i++) {
 2441              		.loc 10 435 21 is_stmt 1 view .LVU665
 2442              	.LBB524:
 2443              	.LBI524:
 118:../../libDaisy/src/daisy_seed.h ****     {
 2444              		.loc 1 118 17 view .LVU666
 2445              	.LBB525:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2446              		.loc 1 120 19 is_stmt 0 view .LVU667
 2447 0148 2E48     		ldr	r0, .L140+60
 2448 014a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
 2449              	.LVL174:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2450              		.loc 1 120 19 view .LVU668
 2451              	.LBE525:
 2452              	.LBE524:
 436:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2453              		.loc 10 436 21 is_stmt 1 view .LVU669
 2454              	.LBB526:
 436:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2455              		.loc 10 436 39 view .LVU670
 437:MIDIController.cpp ****                     }
 2456              		.loc 10 437 25 view .LVU671
 2457              	.LBB527:
 2458              	.LBI527:
 118:../../libDaisy/src/daisy_seed.h ****     {
 2459              		.loc 1 118 17 view .LVU672
 2460              	.LBB528:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2461              		.loc 1 120 19 is_stmt 0 view .LVU673
 2462 014e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 87


 2463 0152 2D48     		ldr	r0, .L140+64
 2464 0154 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
 2465              	.LVL175:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2466              		.loc 1 120 19 view .LVU674
 2467              	.LBE528:
 2468              	.LBE527:
 436:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2469              		.loc 10 436 21 is_stmt 1 view .LVU675
 436:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2470              		.loc 10 436 39 view .LVU676
 437:MIDIController.cpp ****                     }
 2471              		.loc 10 437 25 view .LVU677
 2472              	.LBB531:
 118:../../libDaisy/src/daisy_seed.h ****     {
 2473              		.loc 1 118 17 view .LVU678
 2474              	.LBB529:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2475              		.loc 1 120 19 is_stmt 0 view .LVU679
 2476 0158 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 2477 015c 2A48     		ldr	r0, .L140+64
 2478 015e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
 2479              	.LVL176:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2480              		.loc 1 120 19 view .LVU680
 2481              	.LBE529:
 2482              	.LBE531:
 436:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2483              		.loc 10 436 21 is_stmt 1 view .LVU681
 436:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2484              		.loc 10 436 39 view .LVU682
 437:MIDIController.cpp ****                     }
 2485              		.loc 10 437 25 view .LVU683
 2486              	.LBB532:
 118:../../libDaisy/src/daisy_seed.h ****     {
 2487              		.loc 1 118 17 view .LVU684
 2488              	.LBB530:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2489              		.loc 1 120 19 is_stmt 0 view .LVU685
 2490 0162 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 2491 0166 2848     		ldr	r0, .L140+64
 2492 0168 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
 2493              	.LVL177:
 120:../../libDaisy/src/daisy_seed.h ****     }
 2494              		.loc 1 120 19 view .LVU686
 2495              	.LBE530:
 2496              	.LBE532:
 436:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2497              		.loc 10 436 21 is_stmt 1 view .LVU687
 436:MIDIController.cpp ****                         hw.Print("%d ", ccDCO_LFO[i]);
 2498              		.loc 10 436 39 view .LVU688
 2499              	.LBE526:
 439:MIDIController.cpp **** 
 2500              		.loc 10 439 21 view .LVU689
 2501              	.LBB533:
 2502              	.LBI533:
 126:../../libDaisy/src/daisy_seed.h ****     {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 88


 2503              		.loc 1 126 17 view .LVU690
 2504              	.LBB534:
 128:../../libDaisy/src/daisy_seed.h ****     }
 2505              		.loc 1 128 23 is_stmt 0 view .LVU691
 2506 016c 2848     		ldr	r0, .L140+72
 2507 016e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 2508              	.LVL178:
 2509              		.loc 1 129 5 view .LVU692
 2510 0172 83E7     		b	.L108
 2511              	.LVL179:
 2512              	.L113:
 2513              		.loc 1 129 5 view .LVU693
 2514              	.LBE534:
 2515              	.LBE533:
 2516              	.LBE521:
 2517              	.LBE535:
 2518              	.LBE559:
 2519              	.LBE560:
 2520              	.LBE561:
 2521              	.LBE593:
 2522              	.LBB594:
 2523              	.LBB577:
 2524              	.LBB575:
 2525              	.LBB573:
 493:MIDIController.cpp ****                 // uint8_t cc_chorus[3] = {0xB0, JUNO_CHORUS1, 127};
 2526              		.loc 10 493 34 view .LVU694
 2527 0174 174B     		ldr	r3, .L140+12
 2528 0176 0222     		movs	r2, #2
 2529 0178 1A70     		strb	r2, [r3]
 495:MIDIController.cpp ****                 if (useSerialLogger) {
 2530              		.loc 10 495 17 is_stmt 1 view .LVU695
 495:MIDIController.cpp ****                 if (useSerialLogger) {
 2531              		.loc 10 495 25 is_stmt 0 view .LVU696
 2532 017a B023     		movs	r3, #176
 2533 017c 8DF80430 		strb	r3, [sp, #4]
 2534 0180 5D23     		movs	r3, #93
 2535 0182 8DF80530 		strb	r3, [sp, #5]
 495:MIDIController.cpp ****                 if (useSerialLogger) {
 2536              		.loc 10 495 83 view .LVU697
 2537 0186 7F23     		movs	r3, #127
 2538 0188 8DF80630 		strb	r3, [sp, #6]
 496:MIDIController.cpp ****                     hw.PrintLine("Button 2 pressed: Chorus ON");
 2539              		.loc 10 496 17 is_stmt 1 view .LVU698
 2540 018c 002F     		cmp	r7, #0
 2541 018e B1D1     		bne	.L139
 2542              	.L115:
 500:MIDIController.cpp ****                 }
 2543              		.loc 10 500 21 view .LVU699
 2544              	.LVL180:
 2545              	.LBB571:
 2546              	.LBI571:
 208:../../libDaisy/src/hid/midi.h ****     {
 2547              		.loc 6 208 10 view .LVU700
 2548              	.LBB572:
 2549              		.loc 6 210 22 is_stmt 0 view .LVU701
 2550 0190 0322     		movs	r2, #3
 2551 0192 01A9     		add	r1, sp, #4
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 89


 2552              	.LVL181:
 2553              		.loc 6 210 22 view .LVU702
 2554 0194 1048     		ldr	r0, .L140+16
 2555 0196 FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 2556              	.LVL182:
 211:../../libDaisy/src/hid/midi.h ****     }
 2557              		.loc 6 211 5 view .LVU703
 2558 019a 76E7     		b	.L112
 2559              	.L119:
 2560              	.LBE572:
 2561              	.LBE571:
 2562              	.LBE573:
 2563              	.LBE575:
 2564              	.LBE577:
 2565              	.LBE594:
 2566              	.LBB595:
 2567              	.LBB590:
 2568              	.LBB588:
 2569              	.LBB586:
 543:MIDIController.cpp ****                 // Send MIDI message based on new state
 2570              		.loc 10 543 34 view .LVU704
 2571 019c 0D4B     		ldr	r3, .L140+12
 2572 019e 0322     		movs	r2, #3
 2573 01a0 1A70     		strb	r2, [r3]
 545:MIDIController.cpp ****                 
 2574              		.loc 10 545 17 is_stmt 1 view .LVU705
 545:MIDIController.cpp ****                 
 2575              		.loc 10 545 25 is_stmt 0 view .LVU706
 2576 01a2 5023     		movs	r3, #80
 2577 01a4 B022     		movs	r2, #176
 2578 01a6 8DF80530 		strb	r3, [sp, #5]
 545:MIDIController.cpp ****                 
 2579              		.loc 10 545 83 view .LVU707
 2580 01aa 7F23     		movs	r3, #127
 545:MIDIController.cpp ****                 
 2581              		.loc 10 545 25 view .LVU708
 2582 01ac 8DF80420 		strb	r2, [sp, #4]
 545:MIDIController.cpp ****                 
 2583              		.loc 10 545 83 view .LVU709
 2584 01b0 8DF80630 		strb	r3, [sp, #6]
 547:MIDIController.cpp ****                     hw.PrintLine("Chorus %s", chorus_state ? "ON" : "OFF");
 2585              		.loc 10 547 17 is_stmt 1 view .LVU710
 2586 01b4 0FB1     		cbz	r7, .L123
 548:MIDIController.cpp ****                 } else {
 2587              		.loc 10 548 33 is_stmt 0 view .LVU711
 2588 01b6 1749     		ldr	r1, .L140+76
 2589 01b8 85E7     		b	.L122
 2590              	.L123:
 550:MIDIController.cpp ****                 }
 2591              		.loc 10 550 21 is_stmt 1 view .LVU712
 2592              	.LVL183:
 2593              	.LBB584:
 2594              	.LBI584:
 208:../../libDaisy/src/hid/midi.h ****     {
 2595              		.loc 6 208 10 view .LVU713
 2596              	.LBB585:
 210:../../libDaisy/src/hid/midi.h ****     }
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 90


 2597              		.loc 6 210 22 is_stmt 0 view .LVU714
 2598 01ba 0322     		movs	r2, #3
 2599 01bc 01A9     		add	r1, sp, #4
 2600              	.LVL184:
 210:../../libDaisy/src/hid/midi.h ****     }
 2601              		.loc 6 210 22 view .LVU715
 2602 01be 0648     		ldr	r0, .L140+16
 2603 01c0 FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport2TxEPhj
 2604              	.LVL185:
 2605              		.loc 6 211 5 view .LVU716
 2606 01c4 67E7     		b	.L118
 2607              	.L141:
 2608 01c6 00BF     		.align	2
 2609              	.L140:
 2610 01c8 00000000 		.word	.LANCHOR1
 2611 01cc 00000000 		.word	.LANCHOR3
 2612 01d0 00000000 		.word	.LANCHOR5
 2613 01d4 00000000 		.word	.LANCHOR28
 2614 01d8 04000000 		.word	midi+4
 2615 01dc 00000000 		.word	.LANCHOR41
 2616 01e0 00000000 		.word	.LANCHOR43
 2617 01e4 00000000 		.word	.LANCHOR44
 2618 01e8 00000000 		.word	.LC1
 2619 01ec B0000000 		.word	.LC16
 2620 01f0 00000000 		.word	.LANCHOR42
 2621 01f4 94000000 		.word	.LC15
 2622 01f8 50000000 		.word	.LC12
 2623 01fc BC000000 		.word	.LC13
 2624 0200 68000000 		.word	.LC14
 2625 0204 34000000 		.word	.LC9
 2626 0208 48000000 		.word	.LC10
 2627 020c 00000000 		.word	.LC8
 2628 0210 4C000000 		.word	.LC11
 2629 0214 04000000 		.word	.LC2
 2630 0218 00000000 		.word	.LANCHOR40
 2631              	.LBE585:
 2632              	.LBE584:
 2633              	.LBE586:
 2634              	.LBE588:
 2635              	.LBE590:
 2636              	.LBE595:
 2637              		.cfi_endproc
 2638              	.LFE4692:
 2640              		.section	.text.startup.main,"ax",%progbits
 2641              		.align	1
 2642              		.p2align 2,,3
 2643              		.global	main
 2644              		.syntax unified
 2645              		.thumb
 2646              		.thumb_func
 2648              	main:
 2649              	.LFB4693:
 591:MIDIController.cpp **** int main(void)
 592:MIDIController.cpp **** {   
 2650              		.loc 10 592 1 is_stmt 1 view -0
 2651              		.cfi_startproc
 2652              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 91


 2653              		@ frame_needed = 0, uses_anonymous_args = 0
 593:MIDIController.cpp ****      // hw.Configure(); 
 594:MIDIController.cpp **** 
 595:MIDIController.cpp ****     hw.Init();
 2654              		.loc 10 595 5 view .LVU718
 592:MIDIController.cpp ****      // hw.Configure(); 
 2655              		.loc 10 592 1 is_stmt 0 view .LVU719
 2656 0000 10B5     		push	{r4, lr}
 2657              		.cfi_def_cfa_offset 8
 2658              		.cfi_offset 4, -8
 2659              		.cfi_offset 14, -4
 2660              		.loc 10 595 12 view .LVU720
 2661 0002 0021     		movs	r1, #0
 2662              	.LBB605:
 2663              	.LBB606:
 2664              	.LBB607:
 168:../../libDaisy/src/hid/midi.h ****         transport_.Init(config_.transport_config);
 2665              		.loc 6 168 9 view .LVU721
 2666 0004 174C     		ldr	r4, .L145
 2667              	.LBE607:
 2668              	.LBE606:
 2669              	.LBE605:
 2670              		.loc 10 595 12 view .LVU722
 2671 0006 1848     		ldr	r0, .L145+4
 2672 0008 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 2673              	.LVL186:
 596:MIDIController.cpp ****     hw.Configure();
 2674              		.loc 10 596 5 is_stmt 1 view .LVU723
 2675              		.loc 10 596 17 is_stmt 0 view .LVU724
 2676 000c 1648     		ldr	r0, .L145+4
 2677 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 2678              	.LVL187:
 597:MIDIController.cpp ****     initButtons();
 2679              		.loc 10 597 5 is_stmt 1 view .LVU725
 2680              		.loc 10 597 16 is_stmt 0 view .LVU726
 2681 0012 FFF7FEFF 		bl	_Z11initButtonsv
 2682              	.LVL188:
 598:MIDIController.cpp ****     InitFaders();
 2683              		.loc 10 598 5 is_stmt 1 view .LVU727
 2684              		.loc 10 598 15 is_stmt 0 view .LVU728
 2685 0016 FFF7FEFF 		bl	_Z10InitFadersv
 2686              	.LVL189:
 599:MIDIController.cpp ****     testLEDs();
 2687              		.loc 10 599 5 is_stmt 1 view .LVU729
 2688              		.loc 10 599 13 is_stmt 0 view .LVU730
 2689 001a FFF7FEFF 		bl	_Z8testLEDsv
 2690              	.LVL190:
 600:MIDIController.cpp ****     InitEncoder();
 2691              		.loc 10 600 5 is_stmt 1 view .LVU731
 2692              		.loc 10 600 16 is_stmt 0 view .LVU732
 2693 001e FFF7FEFF 		bl	_Z11InitEncoderv
 2694              	.LVL191:
 601:MIDIController.cpp **** 
 602:MIDIController.cpp ****     bool useSerialLogger = false;
 2695              		.loc 10 602 5 is_stmt 1 view .LVU733
 603:MIDIController.cpp **** 
 604:MIDIController.cpp ****     if (useSerialLogger) {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 92


 2696              		.loc 10 604 5 view .LVU734
 2697              	.LBB614:
 605:MIDIController.cpp ****         // Start the Serial Logger
 606:MIDIController.cpp ****         hw.StartLog();
 607:MIDIController.cpp ****         // hw.DelayMs(5000);
 608:MIDIController.cpp ****         hw.PrintLine("Serial Logger started!");
 609:MIDIController.cpp ****         // turn on the LED to indicate in serial mode
 610:MIDIController.cpp ****         hw.SetLed(true);
 611:MIDIController.cpp ****         
 612:MIDIController.cpp ****     }
 613:MIDIController.cpp ****         
 614:MIDIController.cpp ****     else {
 615:MIDIController.cpp ****         // Initialize USB MIDI
 616:MIDIController.cpp ****         MidiUsbHandler::Config midi_cfg;
 2698              		.loc 10 616 9 view .LVU735
 2699              	.LBB611:
 2700              	.LBI611:
 158:../../libDaisy/src/hid/midi.h ****     {
 2701              		.loc 6 158 12 view .LVU736
 2702              	.LBB612:
 2703              	.LBI612:
  43:../../libDaisy/src/hid/usb_midi.h ****     };
 2704              		.loc 9 43 9 view .LVU737
  43:../../libDaisy/src/hid/usb_midi.h ****     };
 2705              		.loc 9 43 9 is_stmt 0 view .LVU738
 2706              	.LBE612:
 2707              	.LBE611:
 617:MIDIController.cpp ****         midi_cfg.transport_config.periph = MidiUsbTransport::Config::INTERNAL;
 2708              		.loc 10 617 9 is_stmt 1 view .LVU739
 618:MIDIController.cpp ****         midi.Init(midi_cfg);
 2709              		.loc 10 618 9 view .LVU740
 2710              	.LBB613:
 2711              	.LBI606:
 166:../../libDaisy/src/hid/midi.h ****     {
 2712              		.loc 6 166 10 view .LVU741
 2713              	.LBB610:
 169:../../libDaisy/src/hid/midi.h ****         parser_.Init();
 2714              		.loc 6 169 24 is_stmt 0 view .LVU742
 2715 0022 2046     		mov	r0, r4
 168:../../libDaisy/src/hid/midi.h ****         transport_.Init(config_.transport_config);
 2716              		.loc 6 168 9 view .LVU743
 2717 0024 4FF44073 		mov	r3, #768
 2718 0028 2380     		strh	r3, [r4]	@ movhi
 169:../../libDaisy/src/hid/midi.h ****         parser_.Init();
 2719              		.loc 6 169 24 view .LVU744
 2720 002a 50F8041B 		ldr	r1, [r0], #4
 2721 002e FFF7FEFF 		bl	_ZN5daisy16MidiUsbTransport4InitENS0_6ConfigE
 2722              	.LVL192:
 2723              	.LBB608:
 2724              	.LBI608:
  20:../../libDaisy/src/hid/midi_parser.h **** 
  21:../../libDaisy/src/hid/midi_parser.h ****     inline void Init() { Reset(); }
 2725              		.loc 8 21 17 is_stmt 1 view .LVU745
 2726              	.LBB609:
 2727              		.loc 8 21 26 view .LVU746
 2728              		.loc 8 21 31 is_stmt 0 view .LVU747
 2729 0032 04F10800 		add	r0, r4, #8
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 93


 2730 0036 FFF7FEFF 		bl	_ZN5daisy10MidiParser5ResetEv
 2731              	.LVL193:
 2732              		.loc 8 21 31 view .LVU748
 2733              	.LBE609:
 2734              	.LBE608:
 2735              	.LBE610:
 2736              	.LBE613:
 619:MIDIController.cpp ****         hw.SetLed(false);
 2737              		.loc 10 619 9 is_stmt 1 view .LVU749
 2738              		.loc 10 619 18 is_stmt 0 view .LVU750
 2739 003a 0021     		movs	r1, #0
 2740 003c 0A48     		ldr	r0, .L145+4
 2741 003e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 2742              	.LVL194:
 2743              	.L143:
 2744              		.loc 10 619 18 view .LVU751
 2745              	.LBE614:
 620:MIDIController.cpp ****     }
 621:MIDIController.cpp ****    
 622:MIDIController.cpp **** 
 623:MIDIController.cpp ****     // bool button_pressed =  false;
 624:MIDIController.cpp ****     
 625:MIDIController.cpp ****     // hw.PrintLine("Serial Logger initialized!");
 626:MIDIController.cpp **** 
 627:MIDIController.cpp ****     // while(1)
 628:MIDIController.cpp ****     // {
 629:MIDIController.cpp ****     //     hw.DelayMs(1);
 630:MIDIController.cpp ****     //     // print to serial the fader value
 631:MIDIController.cpp ****     //     // hw.PrintLine("Fader Value: %f", hw.adc.GetFloat(0));
 632:MIDIController.cpp **** 
 633:MIDIController.cpp **** 
 634:MIDIController.cpp ****     //     bool button1_state = ! button1.Read();
 635:MIDIController.cpp ****     //     bool button2_state = ! button2.Read();
 636:MIDIController.cpp ****     //     bool button3_state = ! button3.Read();
 637:MIDIController.cpp ****     //     // hw.PrintLine("Logger is enabled");
 638:MIDIController.cpp ****     //     // hw.PrintLine("Button State: %s", button1_state ? "true" : "false");
 639:MIDIController.cpp ****     //     // Check button state
 640:MIDIController.cpp ****     //     if (button1_state != button1_last_state){
 641:MIDIController.cpp ****     //         button1_state = button1.Read(); // read again to make sure the state is stable
 642:MIDIController.cpp ****     //         if (button1_state == 0) {
 643:MIDIController.cpp ****     //             hw.SetLed(true);
 644:MIDIController.cpp ****     //             // hw.PrintLine("Button pressed ");
 645:MIDIController.cpp ****     //             uint8_t note_on[3] = {0x90, 60, 100};  // 0x90 = Note On channel 0, middle C, ve
 646:MIDIController.cpp ****     //             if (useSerialLogger) {
 647:MIDIController.cpp ****     //                 // hw.Print("Midi message is: ");
 648:MIDIController.cpp ****     //                 // for (int i = 0; i < 3; i++) {
 649:MIDIController.cpp ****     //                 //     hw.Print("%d ", note_on[i]);
 650:MIDIController.cpp ****     //                 // }
 651:MIDIController.cpp ****     //                 hw.PrintLine("Button 1 pressed\n");
 652:MIDIController.cpp ****     //             }
 653:MIDIController.cpp ****     //             else {
 654:MIDIController.cpp ****     //                 midi.SendMessage(note_on, sizeof(note_on));
 655:MIDIController.cpp ****     //             }
 656:MIDIController.cpp ****     //             // hw.Print("Midi message is %d", note_on);
 657:MIDIController.cpp ****     //             // midi.SendMessage(note_on, sizeof(note_on));
 658:MIDIController.cpp ****                 
 659:MIDIController.cpp ****     //             // Note On for middle C with velocity 100
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 94


 660:MIDIController.cpp ****     //         }
 661:MIDIController.cpp ****     //         else {
 662:MIDIController.cpp ****     //             hw.SetLed(false);
 663:MIDIController.cpp ****     //             // Button released
 664:MIDIController.cpp ****     //             // hw.PrintLine("Button released ");
 665:MIDIController.cpp ****     //             // button_pressed = false;
 666:MIDIController.cpp ****     //             uint8_t note_off[3] = {0x80, 60, 0};  // 0890 = Note Off channel 0, middle C, ve
 667:MIDIController.cpp ****     //             if (useSerialLogger) {
 668:MIDIController.cpp ****     //                 // hw.Print("Midi message is: ");
 669:MIDIController.cpp ****     //                 // for (int i = 0; i < 3; i++) {
 670:MIDIController.cpp ****     //                 //     hw.Print("%d ", note_off[i]);
 671:MIDIController.cpp ****     //                 // }
 672:MIDIController.cpp ****     //                 hw.PrintLine("Button 1 released\n");
 673:MIDIController.cpp ****     //             }
 674:MIDIController.cpp ****     //             else {
 675:MIDIController.cpp ****     //                 midi.SendMessage(note_off, sizeof(note_off));
 676:MIDIController.cpp ****     //             }
 677:MIDIController.cpp **** 
 678:MIDIController.cpp ****     //             // hw.Print("Midi message is %d", note_off);
 679:MIDIController.cpp ****     //             // midi.SendMessage(note_off, sizeof(note_off));
 680:MIDIController.cpp ****     //             // midi.SendMessage(MidiEvent::NoteOff(60, 0)); // Note Off for middle C
 681:MIDIController.cpp ****     //         }
 682:MIDIController.cpp ****     //         button1_last_state = button1_state;
 683:MIDIController.cpp ****             
 684:MIDIController.cpp ****     //     }
 685:MIDIController.cpp ****     //    
 686:MIDIController.cpp ****         
 687:MIDIController.cpp ****     // }
 688:MIDIController.cpp ****     while(1) {
 2746              		.loc 10 688 5 is_stmt 1 discriminator 1 view .LVU752
 689:MIDIController.cpp ****         hw.DelayMs(1);
 2747              		.loc 10 689 9 discriminator 1 view .LVU753
 2748              		.loc 10 689 19 is_stmt 0 discriminator 1 view .LVU754
 2749 0042 0121     		movs	r1, #1
 2750 0044 0848     		ldr	r0, .L145+4
 2751 0046 FFF7FEFF 		bl	_ZN5daisy9DaisySeed7DelayMsEj
 2752              	.LVL195:
 690:MIDIController.cpp **** 
 691:MIDIController.cpp ****         // read faders
 692:MIDIController.cpp ****         ReadFaders(useSerialLogger);
 2753              		.loc 10 692 9 is_stmt 1 discriminator 1 view .LVU755
 2754              		.loc 10 692 19 is_stmt 0 discriminator 1 view .LVU756
 2755 004a 0020     		movs	r0, #0
 2756 004c FFF7FEFF 		bl	_Z10ReadFadersb
 2757              	.LVL196:
 693:MIDIController.cpp **** 
 694:MIDIController.cpp ****         // read encoder
 695:MIDIController.cpp ****         ReadEncoder(useSerialLogger);
 2758              		.loc 10 695 9 is_stmt 1 discriminator 1 view .LVU757
 2759              		.loc 10 695 20 is_stmt 0 discriminator 1 view .LVU758
 2760 0050 0020     		movs	r0, #0
 2761 0052 FFF7FEFF 		bl	_Z11ReadEncoderb
 2762              	.LVL197:
 696:MIDIController.cpp **** 
 697:MIDIController.cpp ****         // read buttons
 698:MIDIController.cpp ****         ReadButtons(useSerialLogger);
 2763              		.loc 10 698 9 is_stmt 1 discriminator 1 view .LVU759
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 95


 2764              		.loc 10 698 20 is_stmt 0 discriminator 1 view .LVU760
 2765 0056 0020     		movs	r0, #0
 2766 0058 FFF7FEFF 		bl	_Z11ReadButtonsb
 2767              	.LVL198:
 699:MIDIController.cpp ****         
 700:MIDIController.cpp ****         // oscillate LEDs
 701:MIDIController.cpp ****         // OscillateLEDs();
 702:MIDIController.cpp ****         // read accelerometer
 703:MIDIController.cpp ****         // ReadAccelerometer();
 704:MIDIController.cpp ****         UpdateLEDs();
 2768              		.loc 10 704 9 is_stmt 1 discriminator 1 view .LVU761
 2769              		.loc 10 704 19 is_stmt 0 discriminator 1 view .LVU762
 2770 005c FFF7FEFF 		bl	_Z10UpdateLEDsv
 2771              	.LVL199:
 688:MIDIController.cpp ****         hw.DelayMs(1);
 2772              		.loc 10 688 5 is_stmt 1 discriminator 1 view .LVU763
 2773 0060 EFE7     		b	.L143
 2774              	.L146:
 2775 0062 00BF     		.align	2
 2776              	.L145:
 2777 0064 00000000 		.word	midi
 2778 0068 00000000 		.word	.LANCHOR26
 2779              		.cfi_endproc
 2780              	.LFE4693:
 2782              		.section	.text.startup._GLOBAL__sub_I_unison_active,"ax",%progbits
 2783              		.align	1
 2784              		.p2align 2,,3
 2785              		.syntax unified
 2786              		.thumb
 2787              		.thumb_func
 2789              	_GLOBAL__sub_I_unison_active:
 2790              	.LFB5288:
 705:MIDIController.cpp ****     }
 706:MIDIController.cpp **** }...
 2791              		.loc 10 706 1 view -0
 2792              		.cfi_startproc
 2793              		@ args = 0, pretend = 0, frame = 0
 2794              		@ frame_needed = 0, uses_anonymous_args = 0
 2795              	.LBB725:
 2796              	.LBI725:
 2797              		.loc 10 706 1 view .LVU765
 2798              	.LVL200:
 2799              	.LBB726:
 2800              	.LBB727:
 2801              	.LBI727:
  21:../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 2802              		.loc 1 21 5 view .LVU766
 2803              	.LBB728:
 2804              	.LBB729:
 2805              	.LBI729:
 2806              		.file 12 "../../libDaisy/src/per/qspi.h"
   1:../../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy/src/per/qspi.h **** 
   4:../../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy/src/per/qspi.h **** 
   6:../../libDaisy/src/per/qspi.h **** #include <cstdint>
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 96


   7:../../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy/src/per/qspi.h **** 
   9:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy/src/per/qspi.h **** 
  19:../../libDaisy/src/per/qspi.h **** namespace daisy
  20:../../libDaisy/src/per/qspi.h **** {
  21:../../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy/src/per/qspi.h **** @{
  23:../../libDaisy/src/per/qspi.h **** */
  24:../../libDaisy/src/per/qspi.h **** 
  25:../../libDaisy/src/per/qspi.h **** /** 
  26:../../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy/src/per/qspi.h **** */
  30:../../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy/src/per/qspi.h **** {
  32:../../libDaisy/src/per/qspi.h ****   public:
  33:../../libDaisy/src/per/qspi.h ****     enum Result
  34:../../libDaisy/src/per/qspi.h ****     {
  35:../../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../../libDaisy/src/per/qspi.h ****         ERR
  37:../../libDaisy/src/per/qspi.h ****     };
  38:../../libDaisy/src/per/qspi.h **** 
  39:../../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy/src/per/qspi.h ****          * 
  43:../../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy/src/per/qspi.h ****          */
  48:../../libDaisy/src/per/qspi.h ****     enum Status
  49:../../libDaisy/src/per/qspi.h ****     {
  50:../../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy/src/per/qspi.h ****     };
  55:../../libDaisy/src/per/qspi.h **** 
  56:../../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy/src/per/qspi.h ****     struct Config
  58:../../libDaisy/src/per/qspi.h ****     {
  59:../../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy/src/per/qspi.h ****         enum Device
  61:../../libDaisy/src/per/qspi.h ****         {
  62:../../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 97


  64:../../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy/src/per/qspi.h ****         };
  66:../../libDaisy/src/per/qspi.h **** 
  67:../../libDaisy/src/per/qspi.h ****         /** 
  68:../../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy/src/per/qspi.h ****         */
  74:../../libDaisy/src/per/qspi.h ****         enum Mode
  75:../../libDaisy/src/per/qspi.h ****         {
  76:../../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy/src/per/qspi.h ****         };
  80:../../libDaisy/src/per/qspi.h **** 
  81:../../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy/src/per/qspi.h ****         struct
  83:../../libDaisy/src/per/qspi.h ****         {
  84:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../../libDaisy/src/per/qspi.h **** 
  92:../../libDaisy/src/per/qspi.h ****         Device device;
  93:../../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy/src/per/qspi.h ****     };
  95:../../libDaisy/src/per/qspi.h **** 
  96:../../libDaisy/src/per/qspi.h ****     /** 
  97:../../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy/src/per/qspi.h ****         */
 101:../../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy/src/per/qspi.h **** 
 103:../../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy/src/per/qspi.h **** 
 106:../../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy/src/per/qspi.h ****     /** 
 109:../../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy/src/per/qspi.h ****         */
 113:../../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy/src/per/qspi.h **** 
 115:../../libDaisy/src/per/qspi.h ****     /** 
 116:../../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 98


 121:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy/src/per/qspi.h ****         */
 123:../../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy/src/per/qspi.h **** 
 125:../../libDaisy/src/per/qspi.h ****     /** 
 126:../../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy/src/per/qspi.h ****         */
 132:../../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy/src/per/qspi.h **** 
 134:../../libDaisy/src/per/qspi.h ****     /** 
 135:../../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy/src/per/qspi.h ****         */
 142:../../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy/src/per/qspi.h **** 
 144:../../libDaisy/src/per/qspi.h ****     /**  
 145:../../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy/src/per/qspi.h ****         */
 150:../../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy/src/per/qspi.h **** 
 152:../../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy/src/per/qspi.h ****      */
 155:../../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy/src/per/qspi.h **** 
 157:../../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy/src/per/qspi.h ****      * 
 161:../../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy/src/per/qspi.h ****     */
 164:../../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy/src/per/qspi.h **** 
 166:../../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2807              		.loc 12 166 5 view .LVU767
 2808              	.LBE729:
 2809              	.LBE728:
 2810              	.LBE727:
 2811              	.LBE726:
 2812              	.LBE725:
 2813              		.loc 10 706 1 is_stmt 0 view .LVU768
 2814 0000 10B5     		push	{r4, lr}
 2815              		.cfi_def_cfa_offset 8
 2816              		.cfi_offset 4, -8
 2817              		.cfi_offset 14, -4
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 99


 2818              	.LBB876:
 2819              	.LBB875:
 2820              	.LBB750:
 2821              	.LBB748:
 2822              	.LBB734:
 2823              	.LBB730:
 2824              	.LBB731:
 2825              		.loc 12 166 34 view .LVU769
 2826 0002 2948     		ldr	r0, .L149
 2827 0004 0024     		movs	r4, #0
 2828              	.LBE731:
 2829              	.LBE730:
 2830              	.LBE734:
 2831              	.LBE748:
 2832              	.LBE750:
  37:MIDIController.cpp **** DaisySeed hw;
 2833              		.loc 10 37 11 view .LVU770
 2834 0006 294A     		ldr	r2, .L149+4
 2835 0008 2949     		ldr	r1, .L149+8
 2836              	.LBB751:
 2837              	.LBB749:
 2838              	.LBB735:
 2839              	.LBB733:
 2840              	.LBB732:
 2841              		.loc 12 166 34 view .LVU771
 2842 000a 0460     		str	r4, [r0]
 2843              	.LVL201:
 2844              		.loc 12 166 34 view .LVU772
 2845              	.LBE732:
 2846              	.LBE733:
 2847              	.LBE735:
 2848              	.LBB736:
 2849              	.LBI736:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2850              		.loc 5 95 5 is_stmt 1 view .LVU773
 2851              	.LBB737:
 2852              	.LBB738:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2853              		.loc 5 95 35 is_stmt 0 view .LVU774
 2854 000c 4461     		str	r4, [r0, #20]
 2855              	.LVL202:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2856              		.loc 5 95 35 view .LVU775
 2857              	.LBE738:
 2858              	.LBE737:
 2859              	.LBE736:
 2860              	.LBB739:
 2861              	.LBI739:
 109:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 2862              		.loc 4 109 5 is_stmt 1 view .LVU776
 109:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 2863              		.loc 4 109 5 is_stmt 0 view .LVU777
 2864              	.LBE739:
 2865              	.LBB740:
 2866              	.LBI740:
 2867              		.file 13 "../../libDaisy/src/per/dac.h"
   1:../../libDaisy/src/per/dac.h **** #pragma once
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 100


   2:../../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy/src/per/dac.h **** 
   5:../../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy/src/per/dac.h **** 
   7:../../libDaisy/src/per/dac.h **** namespace daisy
   8:../../libDaisy/src/per/dac.h **** {
   9:../../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy/src/per/dac.h ****  ** 
  12:../../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy/src/per/dac.h ****  **
  15:../../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy/src/per/dac.h ****  **
  17:../../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy/src/per/dac.h ****  ***/
  21:../../libDaisy/src/per/dac.h **** class DacHandle
  22:../../libDaisy/src/per/dac.h **** {
  23:../../libDaisy/src/per/dac.h ****   public:
  24:../../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy/src/per/dac.h ****     enum class Result
  26:../../libDaisy/src/per/dac.h ****     {
  27:../../libDaisy/src/per/dac.h ****         OK,
  28:../../libDaisy/src/per/dac.h ****         ERR,
  29:../../libDaisy/src/per/dac.h ****     };
  30:../../libDaisy/src/per/dac.h **** 
  31:../../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy/src/per/dac.h ****     enum class Channel
  33:../../libDaisy/src/per/dac.h ****     {
  34:../../libDaisy/src/per/dac.h ****         ONE,
  35:../../libDaisy/src/per/dac.h ****         TWO,
  36:../../libDaisy/src/per/dac.h ****         BOTH,
  37:../../libDaisy/src/per/dac.h ****     };
  38:../../libDaisy/src/per/dac.h **** 
  39:../../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy/src/per/dac.h ****      **
  41:../../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy/src/per/dac.h ****      **
  43:../../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy/src/per/dac.h ****      ***/
  46:../../libDaisy/src/per/dac.h ****     enum class Mode
  47:../../libDaisy/src/per/dac.h ****     {
  48:../../libDaisy/src/per/dac.h ****         POLLING,
  49:../../libDaisy/src/per/dac.h ****         DMA,
  50:../../libDaisy/src/per/dac.h ****     };
  51:../../libDaisy/src/per/dac.h **** 
  52:../../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy/src/per/dac.h ****      ***/
  56:../../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy/src/per/dac.h ****     {
  58:../../libDaisy/src/per/dac.h ****         BITS_8,
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 101


  59:../../libDaisy/src/per/dac.h ****         BITS_12
  60:../../libDaisy/src/per/dac.h ****     };
  61:../../libDaisy/src/per/dac.h **** 
  62:../../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../../libDaisy/src/per/dac.h ****     {
  65:../../libDaisy/src/per/dac.h ****         ENABLED,
  66:../../libDaisy/src/per/dac.h ****         DISABLED,
  67:../../libDaisy/src/per/dac.h ****     };
  68:../../libDaisy/src/per/dac.h **** 
  69:../../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy/src/per/dac.h ****     struct Config
  71:../../libDaisy/src/per/dac.h ****     {
  72:../../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy/src/per/dac.h **** 
  78:../../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy/src/per/dac.h ****     };
  83:../../libDaisy/src/per/dac.h **** 
  84:../../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2868              		.loc 13 84 5 is_stmt 1 view .LVU778
 2869              	.LBB741:
 2870              	.LBB742:
 2871              		.loc 13 84 33 is_stmt 0 view .LVU779
 2872 000e 0462     		str	r4, [r0, #32]
 2873              	.LVL203:
 2874              		.loc 13 84 33 view .LVU780
 2875              	.LBE742:
 2876              	.LBE741:
 2877              	.LBE740:
 2878              	.LBB743:
 2879              	.LBI743:
  40:../../libDaisy/src/hid/usb.h **** 
 2880              		.loc 3 40 5 is_stmt 1 view .LVU781
  40:../../libDaisy/src/hid/usb.h **** 
 2881              		.loc 3 40 5 is_stmt 0 view .LVU782
 2882              	.LBE743:
 2883              	.LBB744:
 2884              	.LBI744:
  96:../../libDaisy/src/sys/system.h ****     ~System() {}
 2885              		.loc 2 96 5 is_stmt 1 view .LVU783
  96:../../libDaisy/src/sys/system.h ****     ~System() {}
 2886              		.loc 2 96 5 is_stmt 0 view .LVU784
 2887              	.LBE744:
 2888              	.LBB745:
 2889              	.LBI745:
 2890              		.file 14 "../../libDaisy/src/per/sai.h"
   1:../../libDaisy/src/per/sai.h **** #pragma once
   2:../../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy/src/per/sai.h **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 102


   5:../../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy/src/per/sai.h **** 
   7:../../libDaisy/src/per/sai.h **** namespace daisy
   8:../../libDaisy/src/per/sai.h **** {
   9:../../libDaisy/src/per/sai.h **** /** 
  10:../../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy/src/per/sai.h ****  * 
  14:../../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy/src/per/sai.h ****  *
  18:../../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy/src/per/sai.h ****  * 
  21:../../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy/src/per/sai.h ****  * 
  23:../../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy/src/per/sai.h ****  */
  42:../../libDaisy/src/per/sai.h **** class SaiHandle
  43:../../libDaisy/src/per/sai.h **** {
  44:../../libDaisy/src/per/sai.h ****   public:
  45:../../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy/src/per/sai.h ****     struct Config
  47:../../libDaisy/src/per/sai.h ****     {
  48:../../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy/src/per/sai.h ****         {
  51:../../libDaisy/src/per/sai.h ****             SAI_1,
  52:../../libDaisy/src/per/sai.h ****             SAI_2,
  53:../../libDaisy/src/per/sai.h ****         };
  54:../../libDaisy/src/per/sai.h **** 
  55:../../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy/src/per/sai.h ****         {
  58:../../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy/src/per/sai.h ****             SAI_48KHZ,
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 103


  62:../../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy/src/per/sai.h ****         };
  64:../../libDaisy/src/per/sai.h **** 
  65:../../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy/src/per/sai.h ****         {
  68:../../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy/src/per/sai.h ****         };
  72:../../libDaisy/src/per/sai.h **** 
  73:../../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy/src/per/sai.h ****          */
  77:../../libDaisy/src/per/sai.h ****         enum class Sync
  78:../../libDaisy/src/per/sai.h ****         {
  79:../../libDaisy/src/per/sai.h ****             MASTER,
  80:../../libDaisy/src/per/sai.h ****             SLAVE,
  81:../../libDaisy/src/per/sai.h ****         };
  82:../../libDaisy/src/per/sai.h **** 
  83:../../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy/src/per/sai.h ****         enum class Direction
  85:../../libDaisy/src/per/sai.h ****         {
  86:../../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../../libDaisy/src/per/sai.h ****         };
  89:../../libDaisy/src/per/sai.h **** 
  90:../../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy/src/per/sai.h ****         struct
  92:../../libDaisy/src/per/sai.h ****         {
  93:../../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy/src/per/sai.h ****         } pin_config;
  95:../../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy/src/per/sai.h ****     };
 100:../../libDaisy/src/per/sai.h **** 
 101:../../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy/src/per/sai.h ****     enum class Result
 103:../../libDaisy/src/per/sai.h ****     {
 104:../../libDaisy/src/per/sai.h ****         OK,
 105:../../libDaisy/src/per/sai.h ****         ERR,
 106:../../libDaisy/src/per/sai.h ****     };
 107:../../libDaisy/src/per/sai.h **** 
 108:../../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 2891              		.loc 14 108 5 is_stmt 1 view .LVU785
 2892              	.LBB746:
 2893              	.LBB747:
 2894              		.loc 14 108 33 is_stmt 0 view .LVU786
 2895 0010 C463     		str	r4, [r0, #60]
 2896              	.LVL204:
 2897              		.loc 14 108 33 view .LVU787
 2898              	.LBE747:
 2899              	.LBE746:
 2900              	.LBE745:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 104


 2901              	.LBE749:
 2902              	.LBE751:
  37:MIDIController.cpp **** DaisySeed hw;
 2903              		.loc 10 37 11 view .LVU788
 2904 0012 FFF7FEFF 		bl	__aeabi_atexit
 2905              	.LVL205:
 2906              	.LBB752:
 2907              	.LBI752:
 155:../../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 2908              		.loc 6 155 5 is_stmt 1 view .LVU789
 2909              	.LBB753:
 2910              	.LBB754:
 2911              	.LBI754:
 158:../../libDaisy/src/hid/midi.h ****     {
 2912              		.loc 6 158 12 view .LVU790
 2913              	.LBB755:
 2914              	.LBI755:
  43:../../libDaisy/src/hid/usb_midi.h ****     };
 2915              		.loc 9 43 9 view .LVU791
  43:../../libDaisy/src/hid/usb_midi.h ****     };
 2916              		.loc 9 43 9 is_stmt 0 view .LVU792
 2917              	.LBE755:
 2918              	.LBE754:
 2919              	.LBB756:
 2920              	.LBI756:
  55:../../libDaisy/src/hid/usb_midi.h ****     ~MidiUsbTransport() {}
 2921              		.loc 9 55 5 is_stmt 1 view .LVU793
  55:../../libDaisy/src/hid/usb_midi.h ****     ~MidiUsbTransport() {}
 2922              		.loc 9 55 5 is_stmt 0 view .LVU794
 2923              	.LBE756:
 2924              	.LBB757:
 2925              	.LBI757:
  18:../../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 2926              		.loc 8 18 5 is_stmt 1 view .LVU795
  18:../../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 2927              		.loc 8 18 5 is_stmt 0 view .LVU796
 2928              	.LBE757:
 2929              	.LBB758:
 2930              	.LBI758:
 299:../../libDaisy/src/util/FIFO.h **** {
 300:../../libDaisy/src/util/FIFO.h ****   public:
 301:../../libDaisy/src/util/FIFO.h ****     /** Creates an empty FIFO */
 302:../../libDaisy/src/util/FIFO.h ****     FIFO() : FIFOBase<T>(buffer_, capacity + 1) {}
 2931              		.loc 7 302 5 is_stmt 1 view .LVU797
 2932              	.LBB759:
 2933              	.LBB760:
 2934              	.LBI760:
  14:../../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
 2935              		.loc 7 14 5 view .LVU798
 2936              	.LBE760:
 2937              	.LBE759:
 2938              	.LBE758:
 155:../../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 2939              		.loc 6 155 5 is_stmt 0 view .LVU799
 2940 0016 2748     		ldr	r0, .L149+12
 2941 0018 274B     		ldr	r3, .L149+16
 2942 001a 4FF44071 		mov	r1, #768
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 105


 2943              	.LBE753:
 2944              	.LBE752:
  38:MIDIController.cpp **** MidiUsbHandler midi;
 2945              		.loc 10 38 16 view .LVU800
 2946 001e 234A     		ldr	r2, .L149+4
 2947              	.LBB767:
 2948              	.LBB766:
 155:../../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 2949              		.loc 6 155 5 view .LVU801
 2950 0020 C0F89C30 		str	r3, [r0, #156]
 2951 0024 40F20F73 		movw	r3, #1807
 2952 0028 C0E90014 		strd	r1, r4, [r0]
 2953 002c C0F8A030 		str	r3, [r0, #160]
 2954              	.LBB765:
 2955              	.LBB764:
 2956              	.LBB763:
 2957              	.LBB761:
 2958              	.LBB762:
  15:../../libDaisy/src/util/FIFO.h ****     {
 2959              		.loc 7 15 75 view .LVU802
 2960 0030 00F1B401 		add	r1, r0, #180
 2961 0034 40F20113 		movw	r3, #257
 2962 0038 C0E92B44 		strd	r4, r4, [r0, #172]
 2963              	.LVL206:
  15:../../libDaisy/src/util/FIFO.h ****     {
 2964              		.loc 7 15 75 view .LVU803
 2965 003c C0E92913 		strd	r1, r3, [r0, #164]
 2966              	.LBE762:
 2967              	.LBE761:
 2968              	.LBE763:
 2969              	.LBE764:
 2970              	.LBE765:
 2971              	.LBE766:
 2972              	.LBE767:
  38:MIDIController.cpp **** MidiUsbHandler midi;
 2973              		.loc 10 38 16 view .LVU804
 2974 0040 1E49     		ldr	r1, .L149+20
 2975 0042 FFF7FEFF 		bl	__aeabi_atexit
 2976              	.LVL207:
 2977              	.LBB768:
 2978              	.LBI768:
 2979              		.file 15 "../../libDaisy/src/per/gpio.h"
   1:../../libDaisy/src/per/gpio.h **** #pragma once
   2:../../libDaisy/src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy/src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy/src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy/src/per/gpio.h **** 
   6:../../libDaisy/src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy/src/per/gpio.h **** 
   8:../../libDaisy/src/per/gpio.h **** namespace daisy
   9:../../libDaisy/src/per/gpio.h **** {
  10:../../libDaisy/src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy/src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy/src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy/src/per/gpio.h ****  *   
  14:../../libDaisy/src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy/src/per/gpio.h ****  *  @include GPIO_Input.cpp 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 106


  16:../../libDaisy/src/per/gpio.h ****  * 
  17:../../libDaisy/src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy/src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy/src/per/gpio.h ****  * 
  20:../../libDaisy/src/per/gpio.h **** */
  21:../../libDaisy/src/per/gpio.h **** class GPIO
  22:../../libDaisy/src/per/gpio.h **** {
  23:../../libDaisy/src/per/gpio.h ****   public:
  24:../../libDaisy/src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy/src/per/gpio.h ****     enum class Mode
  26:../../libDaisy/src/per/gpio.h ****     {
  27:../../libDaisy/src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy/src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy/src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy/src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy/src/per/gpio.h ****     };
  32:../../libDaisy/src/per/gpio.h **** 
  33:../../libDaisy/src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy/src/per/gpio.h ****      *  
  35:../../libDaisy/src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy/src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy/src/per/gpio.h ****      * 
  38:../../libDaisy/src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy/src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy/src/per/gpio.h ****      */
  41:../../libDaisy/src/per/gpio.h ****     enum class Pull
  42:../../libDaisy/src/per/gpio.h ****     {
  43:../../libDaisy/src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy/src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy/src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy/src/per/gpio.h ****     };
  47:../../libDaisy/src/per/gpio.h **** 
  48:../../libDaisy/src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy/src/per/gpio.h ****     enum class Speed
  50:../../libDaisy/src/per/gpio.h ****     {
  51:../../libDaisy/src/per/gpio.h ****         LOW,
  52:../../libDaisy/src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy/src/per/gpio.h ****         HIGH,
  54:../../libDaisy/src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy/src/per/gpio.h ****     };
  56:../../libDaisy/src/per/gpio.h **** 
  57:../../libDaisy/src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy/src/per/gpio.h ****     struct Config
  59:../../libDaisy/src/per/gpio.h ****     {
  60:../../libDaisy/src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy/src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy/src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy/src/per/gpio.h ****         Speed speed;
  64:../../libDaisy/src/per/gpio.h **** 
  65:../../libDaisy/src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy/src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy/src/per/gpio.h ****          */
  68:../../libDaisy/src/per/gpio.h ****         Config()
  69:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy/src/per/gpio.h ****         {
  71:../../libDaisy/src/per/gpio.h ****         }
  72:../../libDaisy/src/per/gpio.h ****     };
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 107


  73:../../libDaisy/src/per/gpio.h **** 
  74:../../libDaisy/src/per/gpio.h ****     GPIO() {}
 2980              		.loc 15 74 5 is_stmt 1 view .LVU805
 2981              	.LBB769:
 2982              	.LBB770:
 2983              	.LBI770:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2984              		.loc 15 68 9 view .LVU806
 2985              	.LBB771:
 2986              	.LBB772:
 2987              	.LBB773:
 2988              	.LBI773:
 2989              		.file 16 "../../libDaisy/src/daisy_core.h"
   1:../../libDaisy/src/daisy_core.h **** #pragma once
   2:../../libDaisy/src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy/src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy/src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy/src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy/src/daisy_core.h **** 
   7:../../libDaisy/src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy/src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy/src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy/src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy/src/daisy_core.h **** #else
  15:../../libDaisy/src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy/src/daisy_core.h **** #endif
  17:../../libDaisy/src/daisy_core.h **** 
  18:../../libDaisy/src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy/src/daisy_core.h ****     @{
  20:../../libDaisy/src/daisy_core.h **** */
  21:../../libDaisy/src/daisy_core.h **** 
  22:../../libDaisy/src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy/src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy/src/daisy_core.h **** */
  25:../../libDaisy/src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy/src/daisy_core.h **** /** 
  27:../../libDaisy/src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy/src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy/src/daisy_core.h **** cache enabled.
  30:../../libDaisy/src/daisy_core.h **** */
  31:../../libDaisy/src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy/src/daisy_core.h **** 
  33:../../libDaisy/src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy/src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy/src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy/src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy/src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy/src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy/src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy/src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy/src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy/src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy/src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy/src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 108


  45:../../libDaisy/src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy/src/daisy_core.h **** 
  47:../../libDaisy/src/daisy_core.h **** 
  48:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy/src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy/src/daisy_core.h **** 
  52:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy/src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy/src/daisy_core.h **** 
  56:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy/src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy/src/daisy_core.h **** 
  60:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy/src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy/src/daisy_core.h **** 
  64:../../libDaisy/src/daisy_core.h **** /** 
  65:../../libDaisy/src/daisy_core.h ****     Computes cube.
  66:../../libDaisy/src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy/src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy/src/daisy_core.h **** */
  69:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy/src/daisy_core.h **** {
  71:../../libDaisy/src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy/src/daisy_core.h **** }
  73:../../libDaisy/src/daisy_core.h **** 
  74:../../libDaisy/src/daisy_core.h **** /** 
  75:../../libDaisy/src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy/src/daisy_core.h **** */
  79:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy/src/daisy_core.h **** {
  81:../../libDaisy/src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy/src/daisy_core.h **** }
  83:../../libDaisy/src/daisy_core.h **** 
  84:../../libDaisy/src/daisy_core.h **** /**
  85:../../libDaisy/src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy/src/daisy_core.h **** */
  87:../../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy/src/daisy_core.h **** {
  89:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy/src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy/src/daisy_core.h **** }
  93:../../libDaisy/src/daisy_core.h **** 
  94:../../libDaisy/src/daisy_core.h **** 
  95:../../libDaisy/src/daisy_core.h **** /** 
  96:../../libDaisy/src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy/src/daisy_core.h **** */
 100:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy/src/daisy_core.h **** {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 109


 102:../../libDaisy/src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy/src/daisy_core.h **** }
 104:../../libDaisy/src/daisy_core.h **** 
 105:../../libDaisy/src/daisy_core.h **** /**
 106:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy/src/daisy_core.h **** */
 108:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy/src/daisy_core.h **** {
 110:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy/src/daisy_core.h **** }
 114:../../libDaisy/src/daisy_core.h **** 
 115:../../libDaisy/src/daisy_core.h **** /** 
 116:../../libDaisy/src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy/src/daisy_core.h **** */
 120:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy/src/daisy_core.h **** {
 122:../../libDaisy/src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy/src/daisy_core.h **** }
 124:../../libDaisy/src/daisy_core.h **** 
 125:../../libDaisy/src/daisy_core.h **** /**
 126:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy/src/daisy_core.h **** */
 128:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy/src/daisy_core.h **** {
 130:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy/src/daisy_core.h **** }
 134:../../libDaisy/src/daisy_core.h **** 
 135:../../libDaisy/src/daisy_core.h **** /**
 136:../../libDaisy/src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy/src/daisy_core.h ****  */
 138:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy/src/daisy_core.h **** {
 140:../../libDaisy/src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy/src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy/src/daisy_core.h **** }
 143:../../libDaisy/src/daisy_core.h **** /**
 144:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy/src/daisy_core.h ****  */
 146:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy/src/daisy_core.h **** {
 148:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy/src/daisy_core.h **** }
 152:../../libDaisy/src/daisy_core.h **** 
 153:../../libDaisy/src/daisy_core.h **** /**
 154:../../libDaisy/src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy/src/daisy_core.h ****  */
 156:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy/src/daisy_core.h **** {
 158:../../libDaisy/src/daisy_core.h ****     return (float)x * S322F_SCALE;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 110


 159:../../libDaisy/src/daisy_core.h **** }
 160:../../libDaisy/src/daisy_core.h **** /**
 161:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy/src/daisy_core.h ****  */
 163:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy/src/daisy_core.h **** {
 165:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy/src/daisy_core.h **** }
 169:../../libDaisy/src/daisy_core.h **** 
 170:../../libDaisy/src/daisy_core.h **** 
 171:../../libDaisy/src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy/src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy/src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy/src/daisy_core.h ****  * 
 175:../../libDaisy/src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy/src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy/src/daisy_core.h ****  * 
 178:../../libDaisy/src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy/src/daisy_core.h ****  */
 180:../../libDaisy/src/daisy_core.h **** typedef enum
 181:../../libDaisy/src/daisy_core.h **** {
 182:../../libDaisy/src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy/src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy/src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy/src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy/src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy/src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy/src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy/src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy/src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy/src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy/src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy/src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy/src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy/src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy/src/daisy_core.h **** 
 197:../../libDaisy/src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy/src/daisy_core.h ****  *  
 199:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy/src/daisy_core.h ****  * 
 202:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy/src/daisy_core.h ****  */
 204:../../libDaisy/src/daisy_core.h **** typedef struct
 205:../../libDaisy/src/daisy_core.h **** {
 206:../../libDaisy/src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy/src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy/src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy/src/daisy_core.h **** 
 210:../../libDaisy/src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy/src/daisy_core.h ****  * 
 212:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy/src/daisy_core.h ****  * 
 215:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 111


 216:../../libDaisy/src/daisy_core.h **** */
 217:../../libDaisy/src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy/src/daisy_core.h **** {
 219:../../libDaisy/src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy/src/daisy_core.h ****     p.port = port;
 221:../../libDaisy/src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy/src/daisy_core.h ****     return p;
 223:../../libDaisy/src/daisy_core.h **** }
 224:../../libDaisy/src/daisy_core.h **** 
 225:../../libDaisy/src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy/src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy/src/daisy_core.h ****  * 
 228:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy/src/daisy_core.h ****  * 
 231:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy/src/daisy_core.h ****  */
 233:../../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy/src/daisy_core.h **** {
 235:../../libDaisy/src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy/src/daisy_core.h **** }
 237:../../libDaisy/src/daisy_core.h **** 
 238:../../libDaisy/src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy/src/daisy_core.h **** 
 240:../../libDaisy/src/daisy_core.h **** namespace daisy
 241:../../libDaisy/src/daisy_core.h **** {
 242:../../libDaisy/src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy/src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy/src/daisy_core.h **** {
 245:../../libDaisy/src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy/src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy/src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy/src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy/src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy/src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy/src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy/src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy/src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy/src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy/src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy/src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy/src/daisy_core.h **** };
 258:../../libDaisy/src/daisy_core.h **** 
 259:../../libDaisy/src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy/src/daisy_core.h **** struct Pin
 261:../../libDaisy/src/daisy_core.h **** {
 262:../../libDaisy/src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy/src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy/src/daisy_core.h **** 
 265:../../libDaisy/src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy/src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy/src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy/src/daisy_core.h ****     */
 269:../../libDaisy/src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy/src/daisy_core.h **** 
 271:../../libDaisy/src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy/src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 112


 2990              		.loc 16 272 15 view .LVU807
 2991              		.loc 16 272 15 is_stmt 0 view .LVU808
 2992              	.LBE773:
 2993              	.LBE772:
 2994              	.LBE771:
 2995              	.LBE770:
 2996              		.loc 15 74 12 view .LVU809
 2997 0046 4FF60B73 		movw	r3, #65291
 2998              	.LBE769:
 2999              	.LBE768:
 3000              	.LBB779:
 3001              	.LBB780:
 3002 004a 1D4A     		ldr	r2, .L149+24
 3003              	.LBE780:
 3004              	.LBE779:
 3005              	.LBB790:
 3006              	.LBB777:
 3007 004c 1D49     		ldr	r1, .L149+28
 3008              	.LBE777:
 3009              	.LBE790:
 3010              	.LBB791:
 3011              	.LBB792:
 3012 004e 1E48     		ldr	r0, .L149+32
 3013              	.LBE792:
 3014              	.LBE791:
 3015              	.LBB802:
 3016              	.LBB788:
 3017              	.LBB781:
 3018              	.LBB782:
 3019              	.LBB783:
  69:../../libDaisy/src/per/gpio.h ****         {
 3020              		.loc 15 69 73 view .LVU810
 3021 0050 C2E90034 		strd	r3, r4, [r2]
 3022 0054 C2E90244 		strd	r4, r4, [r2, #8]
 3023              	.LBE783:
 3024              	.LBE782:
 3025              	.LBE781:
 3026              	.LBE788:
 3027              	.LBE802:
 3028              	.LBB803:
 3029              	.LBB804:
 3030              		.loc 15 74 12 view .LVU811
 3031 0058 1C4A     		ldr	r2, .L149+36
 3032              	.LBE804:
 3033              	.LBE803:
 3034              	.LBB818:
 3035              	.LBB778:
 3036              	.LBB776:
 3037              	.LBB775:
 3038              	.LBB774:
  69:../../libDaisy/src/per/gpio.h ****         {
 3039              		.loc 15 69 73 view .LVU812
 3040 005a C1E90034 		strd	r3, r4, [r1]
 3041 005e C1E90244 		strd	r4, r4, [r1, #8]
 3042              	.LVL208:
  69:../../libDaisy/src/per/gpio.h ****         {
 3043              		.loc 15 69 73 view .LVU813
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 113


 3044              	.LBE774:
 3045              	.LBE775:
 3046              	.LBE776:
 3047              	.LBE778:
 3048              	.LBE818:
 3049              	.LBB819:
 3050              	.LBI779:
 3051              		.loc 15 74 5 is_stmt 1 view .LVU814
 3052              	.LBB789:
 3053              	.LBB787:
 3054              	.LBI781:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3055              		.loc 15 68 9 view .LVU815
 3056              	.LBB786:
 3057              	.LBB785:
 3058              	.LBB784:
 3059              	.LBI784:
 3060              		.loc 16 272 15 view .LVU816
 3061              		.loc 16 272 15 is_stmt 0 view .LVU817
 3062              	.LBE784:
 3063              	.LBE785:
 3064              	.LBE786:
 3065              	.LBE787:
 3066              	.LBE789:
 3067              	.LBE819:
 3068              	.LBB820:
 3069              	.LBI791:
 3070              		.loc 15 74 5 is_stmt 1 view .LVU818
 3071              	.LBB800:
 3072              	.LBB793:
 3073              	.LBI793:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3074              		.loc 15 68 9 view .LVU819
 3075              	.LBB794:
 3076              	.LBB795:
 3077              	.LBB796:
 3078              	.LBI796:
 3079              		.loc 16 272 15 view .LVU820
 3080              		.loc 16 272 15 is_stmt 0 view .LVU821
 3081              	.LBE796:
 3082              	.LBE795:
 3083              	.LBE794:
 3084              	.LBE793:
 3085              	.LBE800:
 3086              	.LBE820:
 3087              	.LBB821:
 3088              	.LBB815:
 3089              	.LBB805:
 3090              	.LBB806:
 3091              	.LBB807:
  69:../../libDaisy/src/per/gpio.h ****         {
 3092              		.loc 15 69 73 view .LVU822
 3093 0062 C2E90034 		strd	r3, r4, [r2]
 3094              	.LBE807:
 3095              	.LBE806:
 3096              	.LBE805:
 3097              	.LBE815:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 114


 3098              	.LBE821:
 3099              	.LBB822:
 3100              	.LBB823:
 3101              		.loc 15 74 12 view .LVU823
 3102 0066 1A49     		ldr	r1, .L149+40
 3103              	.LBE823:
 3104              	.LBE822:
 3105              	.LBB829:
 3106              	.LBB816:
 3107              	.LBB813:
 3108              	.LBB811:
 3109              	.LBB809:
  69:../../libDaisy/src/per/gpio.h ****         {
 3110              		.loc 15 69 73 view .LVU824
 3111 0068 C2E90244 		strd	r4, r4, [r2, #8]
 3112              	.LBE809:
 3113              	.LBE811:
 3114              	.LBE813:
 3115              	.LBE816:
 3116              	.LBE829:
 3117              	.LBB830:
 3118              	.LBB831:
 3119              		.loc 15 74 12 view .LVU825
 3120 006c 194A     		ldr	r2, .L149+44
 3121              	.LBE831:
 3122              	.LBE830:
 3123              	.LBB841:
 3124              	.LBB801:
 3125              	.LBB799:
 3126              	.LBB798:
 3127              	.LBB797:
  69:../../libDaisy/src/per/gpio.h ****         {
 3128              		.loc 15 69 73 view .LVU826
 3129 006e C0E90034 		strd	r3, r4, [r0]
 3130 0072 C0E90244 		strd	r4, r4, [r0, #8]
 3131              	.LVL209:
  69:../../libDaisy/src/per/gpio.h ****         {
 3132              		.loc 15 69 73 view .LVU827
 3133              	.LBE797:
 3134              	.LBE798:
 3135              	.LBE799:
 3136              	.LBE801:
 3137              	.LBE841:
 3138              	.LBB842:
 3139              	.LBI803:
 3140              		.loc 15 74 5 is_stmt 1 view .LVU828
 3141              	.LBB817:
 3142              	.LBB814:
 3143              	.LBI805:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3144              		.loc 15 68 9 view .LVU829
 3145              	.LBB812:
 3146              	.LBB810:
 3147              	.LBB808:
 3148              	.LBI808:
 3149              		.loc 16 272 15 view .LVU830
 3150              		.loc 16 272 15 is_stmt 0 view .LVU831
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 115


 3151              	.LBE808:
 3152              	.LBE810:
 3153              	.LBE812:
 3154              	.LBE814:
 3155              	.LBE817:
 3156              	.LBE842:
 3157              	.LBB843:
 3158              	.LBI822:
 3159              		.loc 15 74 5 is_stmt 1 view .LVU832
 3160              	.LBB828:
 3161              	.LBB824:
 3162              	.LBI824:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3163              		.loc 15 68 9 view .LVU833
 3164              	.LBB825:
 3165              	.LBB826:
 3166              	.LBB827:
 3167              	.LBI827:
 3168              		.loc 16 272 15 view .LVU834
 3169              		.loc 16 272 15 is_stmt 0 view .LVU835
 3170              	.LBE827:
  69:../../libDaisy/src/per/gpio.h ****         {
 3171              		.loc 15 69 73 view .LVU836
 3172 0076 C1E90034 		strd	r3, r4, [r1]
 3173 007a C1E90244 		strd	r4, r4, [r1, #8]
 3174              	.LVL210:
  69:../../libDaisy/src/per/gpio.h ****         {
 3175              		.loc 15 69 73 view .LVU837
 3176              	.LBE826:
 3177              	.LBE825:
 3178              	.LBE824:
 3179              	.LBE828:
 3180              	.LBE843:
 3181              	.LBB844:
 3182              	.LBI830:
 3183              		.loc 15 74 5 is_stmt 1 view .LVU838
 3184              	.LBB839:
 3185              	.LBB832:
 3186              	.LBI832:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3187              		.loc 15 68 9 view .LVU839
 3188              	.LBB833:
 3189              	.LBB834:
 3190              	.LBB835:
 3191              	.LBI835:
 3192              		.loc 16 272 15 view .LVU840
 3193              		.loc 16 272 15 is_stmt 0 view .LVU841
 3194              	.LBE835:
 3195              	.LBE834:
 3196              	.LBE833:
 3197              	.LBE832:
 3198              	.LBE839:
 3199              	.LBE844:
 3200              	.LBB845:
 3201              	.LBB846:
 3202              		.loc 15 74 12 view .LVU842
 3203 007e 1648     		ldr	r0, .L149+48
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 116


 3204              	.LBE846:
 3205              	.LBE845:
 3206              	.LBB856:
 3207              	.LBB857:
 3208 0080 1649     		ldr	r1, .L149+52
 3209              	.LBE857:
 3210              	.LBE856:
 3211              	.LBB863:
 3212              	.LBB840:
 3213              	.LBB838:
 3214              	.LBB837:
 3215              	.LBB836:
  69:../../libDaisy/src/per/gpio.h ****         {
 3216              		.loc 15 69 73 view .LVU843
 3217 0082 C2E90034 		strd	r3, r4, [r2]
 3218 0086 C2E90244 		strd	r4, r4, [r2, #8]
 3219              	.LVL211:
  69:../../libDaisy/src/per/gpio.h ****         {
 3220              		.loc 15 69 73 view .LVU844
 3221              	.LBE836:
 3222              	.LBE837:
 3223              	.LBE838:
 3224              	.LBE840:
 3225              	.LBE863:
 3226              	.LBB864:
 3227              	.LBI845:
 3228              		.loc 15 74 5 is_stmt 1 view .LVU845
 3229              	.LBB854:
 3230              	.LBB847:
 3231              	.LBI847:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3232              		.loc 15 68 9 view .LVU846
 3233              	.LBB848:
 3234              	.LBB849:
 3235              	.LBB850:
 3236              	.LBI850:
 3237              		.loc 16 272 15 view .LVU847
 3238              		.loc 16 272 15 is_stmt 0 view .LVU848
 3239              	.LBE850:
 3240              	.LBE849:
 3241              	.LBE848:
 3242              	.LBE847:
 3243              	.LBE854:
 3244              	.LBE864:
 3245              	.LBB865:
 3246              	.LBB866:
 3247              		.loc 15 74 12 view .LVU849
 3248 008a 154A     		ldr	r2, .L149+56
 3249              	.LBE866:
 3250              	.LBE865:
 3251              	.LBB872:
 3252              	.LBB855:
 3253              	.LBB853:
 3254              	.LBB852:
 3255              	.LBB851:
  69:../../libDaisy/src/per/gpio.h ****         {
 3256              		.loc 15 69 73 view .LVU850
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 117


 3257 008c C0E90034 		strd	r3, r4, [r0]
 3258 0090 C0E90244 		strd	r4, r4, [r0, #8]
 3259              	.LVL212:
  69:../../libDaisy/src/per/gpio.h ****         {
 3260              		.loc 15 69 73 view .LVU851
 3261              	.LBE851:
 3262              	.LBE852:
 3263              	.LBE853:
 3264              	.LBE855:
 3265              	.LBE872:
 3266              	.LBB873:
 3267              	.LBI856:
 3268              		.loc 15 74 5 is_stmt 1 view .LVU852
 3269              	.LBB862:
 3270              	.LBB858:
 3271              	.LBI858:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3272              		.loc 15 68 9 view .LVU853
 3273              	.LBB859:
 3274              	.LBB860:
 3275              	.LBB861:
 3276              	.LBI861:
 3277              		.loc 16 272 15 view .LVU854
 3278              		.loc 16 272 15 is_stmt 0 view .LVU855
 3279              	.LBE861:
  69:../../libDaisy/src/per/gpio.h ****         {
 3280              		.loc 15 69 73 view .LVU856
 3281 0094 C1E90034 		strd	r3, r4, [r1]
 3282 0098 C1E90244 		strd	r4, r4, [r1, #8]
 3283              	.LVL213:
  69:../../libDaisy/src/per/gpio.h ****         {
 3284              		.loc 15 69 73 view .LVU857
 3285              	.LBE860:
 3286              	.LBE859:
 3287              	.LBE858:
 3288              	.LBE862:
 3289              	.LBE873:
 3290              	.LBB874:
 3291              	.LBI865:
 3292              		.loc 15 74 5 is_stmt 1 view .LVU858
 3293              	.LBB871:
 3294              	.LBB867:
 3295              	.LBI867:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3296              		.loc 15 68 9 view .LVU859
 3297              	.LBB868:
 3298              	.LBB869:
 3299              	.LBB870:
 3300              	.LBI870:
 3301              		.loc 16 272 15 view .LVU860
 3302              		.loc 16 272 15 is_stmt 0 view .LVU861
 3303              	.LBE870:
  69:../../libDaisy/src/per/gpio.h ****         {
 3304              		.loc 15 69 73 view .LVU862
 3305 009c C2E90034 		strd	r3, r4, [r2]
 3306 00a0 C2E90244 		strd	r4, r4, [r2, #8]
 3307              	.LVL214:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 118


  69:../../libDaisy/src/per/gpio.h ****         {
 3308              		.loc 15 69 73 view .LVU863
 3309              	.LBE869:
 3310              	.LBE868:
 3311              	.LBE867:
 3312              	.LBE871:
 3313              	.LBE874:
 3314              	.LBE875:
 3315              	.LBE876:
 3316              		.loc 10 706 1 view .LVU864
 3317 00a4 10BD     		pop	{r4, pc}
 3318              	.L150:
 3319 00a6 00BF     		.align	2
 3320              	.L149:
 3321 00a8 00000000 		.word	.LANCHOR26
 3322 00ac 00000000 		.word	__dso_handle
 3323 00b0 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 3324 00b4 00000000 		.word	midi
 3325 00b8 0080707F 		.word	2138079232
 3326 00bc 00000000 		.word	_ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED1Ev
 3327 00c0 00000000 		.word	.LANCHOR3
 3328 00c4 00000000 		.word	.LANCHOR1
 3329 00c8 00000000 		.word	.LANCHOR5
 3330 00cc 00000000 		.word	.LANCHOR7
 3331 00d0 00000000 		.word	.LANCHOR9
 3332 00d4 00000000 		.word	.LANCHOR11
 3333 00d8 00000000 		.word	.LANCHOR13
 3334 00dc 00000000 		.word	.LANCHOR15
 3335 00e0 00000000 		.word	.LANCHOR17
 3336              		.cfi_endproc
 3337              	.LFE5288:
 3339              		.section	.init_array,"aw",%init_array
 3340              		.align	2
 3341 0000 00000000 		.word	_GLOBAL__sub_I_unison_active(target1)
 3342              		.global	knob3cfg
 3343              		.global	knob2cfg
 3344              		.global	knob1cfg
 3345              		.global	fader3cfg
 3346              		.global	fader2cfg
 3347              		.global	fader1cfg
 3348              		.global	lastEncB
 3349              		.global	lastEncA
 3350              		.global	encoderPos
 3351              		.global	encoderB
 3352              		.global	encoderA
 3353              		.global	current_led_mode
 3354              		.global	led_state
 3355              		.global	LED_W2
 3356              		.global	LED_W1
 3357              		.global	LED_R2
 3358              		.global	LED_R1
 3359              		.global	button3_last_state
 3360              		.global	button2_last_state
 3361              		.global	button1_last_state
 3362              		.global	button3
 3363              		.global	button2
 3364              		.global	button1
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 119


 3365              		.global	midi
 3366              		.global	hw
 3367              		.global	chorus_state
 3368              		.global	unison_active
 3369              		.section	.bss.LED_R1,"aw",%nobits
 3370              		.align	2
 3371              		.set	.LANCHOR7,. + 0
 3374              	LED_R1:
 3375 0000 00000000 		.space	20
 3375      00000000 
 3375      00000000 
 3375      00000000 
 3375      00000000 
 3376              		.section	.bss.LED_R2,"aw",%nobits
 3377              		.align	2
 3378              		.set	.LANCHOR9,. + 0
 3381              	LED_R2:
 3382 0000 00000000 		.space	20
 3382      00000000 
 3382      00000000 
 3382      00000000 
 3382      00000000 
 3383              		.section	.bss.LED_W1,"aw",%nobits
 3384              		.align	2
 3385              		.set	.LANCHOR11,. + 0
 3388              	LED_W1:
 3389 0000 00000000 		.space	20
 3389      00000000 
 3389      00000000 
 3389      00000000 
 3389      00000000 
 3390              		.section	.bss.LED_W2,"aw",%nobits
 3391              		.align	2
 3392              		.set	.LANCHOR13,. + 0
 3395              	LED_W2:
 3396 0000 00000000 		.space	20
 3396      00000000 
 3396      00000000 
 3396      00000000 
 3396      00000000 
 3397              		.section	.bss._ZZ10ReadFadersbE10last_knob1,"aw",%nobits
 3398              		.align	2
 3399              		.set	.LANCHOR38,. + 0
 3402              	_ZZ10ReadFadersbE10last_knob1:
 3403 0000 00000000 		.space	4
 3404              		.section	.bss._ZZ10ReadFadersbE10last_knob2,"aw",%nobits
 3405              		.align	2
 3406              		.set	.LANCHOR35,. + 0
 3409              	_ZZ10ReadFadersbE10last_knob2:
 3410 0000 00000000 		.space	4
 3411              		.section	.bss._ZZ10ReadFadersbE10last_knob3,"aw",%nobits
 3412              		.align	2
 3413              		.set	.LANCHOR37,. + 0
 3416              	_ZZ10ReadFadersbE10last_knob3:
 3417 0000 00000000 		.space	4
 3418              		.section	.bss._ZZ10ReadFadersbE11last_fader1,"aw",%nobits
 3419              		.align	2
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 120


 3420              		.set	.LANCHOR32,. + 0
 3423              	_ZZ10ReadFadersbE11last_fader1:
 3424 0000 00000000 		.space	4
 3425              		.section	.bss._ZZ10ReadFadersbE11last_fader2,"aw",%nobits
 3426              		.align	2
 3427              		.set	.LANCHOR34,. + 0
 3430              	_ZZ10ReadFadersbE11last_fader2:
 3431 0000 00000000 		.space	4
 3432              		.section	.bss._ZZ10ReadFadersbE11last_fader3,"aw",%nobits
 3433              		.align	2
 3434              		.set	.LANCHOR36,. + 0
 3437              	_ZZ10ReadFadersbE11last_fader3:
 3438 0000 00000000 		.space	4
 3439              		.section	.bss._ZZ10ReadFadersbE15last_sub_active,"aw",%nobits
 3440              		.set	.LANCHOR33,. + 0
 3443              	_ZZ10ReadFadersbE15last_sub_active:
 3444 0000 00       		.space	1
 3445              		.section	.bss._ZZ10UpdateLEDsvE11last_toggle,"aw",%nobits
 3446              		.align	2
 3447              		.set	.LANCHOR29,. + 0
 3450              	_ZZ10UpdateLEDsvE11last_toggle:
 3451 0000 00000000 		.space	4
 3452              		.section	.bss._ZZ10UpdateLEDsvE12led_position,"aw",%nobits
 3453              		.set	.LANCHOR31,. + 0
 3456              	_ZZ10UpdateLEDsvE12led_position:
 3457 0000 00       		.space	1
 3458              		.section	.bss._ZZ10UpdateLEDsvE9led_state,"aw",%nobits
 3459              		.set	.LANCHOR30,. + 0
 3462              	_ZZ10UpdateLEDsvE9led_state:
 3463 0000 00       		.space	1
 3464              		.section	.bss.button1,"aw",%nobits
 3465              		.align	2
 3466              		.set	.LANCHOR1,. + 0
 3469              	button1:
 3470 0000 00000000 		.space	20
 3470      00000000 
 3470      00000000 
 3470      00000000 
 3470      00000000 
 3471              		.section	.bss.button2,"aw",%nobits
 3472              		.align	2
 3473              		.set	.LANCHOR3,. + 0
 3476              	button2:
 3477 0000 00000000 		.space	20
 3477      00000000 
 3477      00000000 
 3477      00000000 
 3477      00000000 
 3478              		.section	.bss.button3,"aw",%nobits
 3479              		.align	2
 3480              		.set	.LANCHOR5,. + 0
 3483              	button3:
 3484 0000 00000000 		.space	20
 3484      00000000 
 3484      00000000 
 3484      00000000 
 3484      00000000 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 121


 3485              		.section	.bss.chorus_state,"aw",%nobits
 3486              		.set	.LANCHOR44,. + 0
 3489              	chorus_state:
 3490 0000 00       		.space	1
 3491              		.section	.bss.current_led_mode,"aw",%nobits
 3492              		.set	.LANCHOR28,. + 0
 3495              	current_led_mode:
 3496 0000 00       		.space	1
 3497              		.section	.bss.encoderA,"aw",%nobits
 3498              		.align	2
 3499              		.set	.LANCHOR15,. + 0
 3502              	encoderA:
 3503 0000 00000000 		.space	20
 3503      00000000 
 3503      00000000 
 3503      00000000 
 3503      00000000 
 3504              		.section	.bss.encoderB,"aw",%nobits
 3505              		.align	2
 3506              		.set	.LANCHOR17,. + 0
 3509              	encoderB:
 3510 0000 00000000 		.space	20
 3510      00000000 
 3510      00000000 
 3510      00000000 
 3510      00000000 
 3511              		.section	.bss.encoderPos,"aw",%nobits
 3512              		.align	2
 3513              		.set	.LANCHOR27,. + 0
 3516              	encoderPos:
 3517 0000 00000000 		.space	4
 3518              		.section	.bss.fader1cfg,"aw",%nobits
 3519              		.align	2
 3520              		.set	.LANCHOR20,. + 0
 3523              	fader1cfg:
 3524 0000 00000000 		.space	18
 3524      00000000 
 3524      00000000 
 3524      00000000 
 3524      0000
 3525              		.section	.bss.fader2cfg,"aw",%nobits
 3526              		.align	2
 3527              		.set	.LANCHOR21,. + 0
 3530              	fader2cfg:
 3531 0000 00000000 		.space	18
 3531      00000000 
 3531      00000000 
 3531      00000000 
 3531      0000
 3532              		.section	.bss.fader3cfg,"aw",%nobits
 3533              		.align	2
 3534              		.set	.LANCHOR22,. + 0
 3537              	fader3cfg:
 3538 0000 00000000 		.space	18
 3538      00000000 
 3538      00000000 
 3538      00000000 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 122


 3538      0000
 3539              		.section	.bss.hw,"aw",%nobits
 3540              		.align	2
 3541              		.set	.LANCHOR26,. + 0
 3544              	hw:
 3545 0000 00000000 		.space	64
 3545      00000000 
 3545      00000000 
 3545      00000000 
 3545      00000000 
 3546              		.section	.bss.knob1cfg,"aw",%nobits
 3547              		.align	2
 3548              		.set	.LANCHOR23,. + 0
 3551              	knob1cfg:
 3552 0000 00000000 		.space	18
 3552      00000000 
 3552      00000000 
 3552      00000000 
 3552      0000
 3553              		.section	.bss.knob2cfg,"aw",%nobits
 3554              		.align	2
 3555              		.set	.LANCHOR24,. + 0
 3558              	knob2cfg:
 3559 0000 00000000 		.space	18
 3559      00000000 
 3559      00000000 
 3559      00000000 
 3559      0000
 3560              		.section	.bss.knob3cfg,"aw",%nobits
 3561              		.align	2
 3562              		.set	.LANCHOR25,. + 0
 3565              	knob3cfg:
 3566 0000 00000000 		.space	18
 3566      00000000 
 3566      00000000 
 3566      00000000 
 3566      0000
 3567              		.section	.bss.lastEncA,"aw",%nobits
 3568              		.align	2
 3569              		.set	.LANCHOR18,. + 0
 3572              	lastEncA:
 3573 0000 00000000 		.space	4
 3574              		.section	.bss.lastEncB,"aw",%nobits
 3575              		.align	2
 3576              		.set	.LANCHOR19,. + 0
 3579              	lastEncB:
 3580 0000 00000000 		.space	4
 3581              		.section	.bss.led_state,"aw",%nobits
 3584              	led_state:
 3585 0000 00       		.space	1
 3586              		.section	.bss.midi,"aw",%nobits
 3587              		.align	2
 3590              	midi:
 3591 0000 00000000 		.space	37188
 3591      00000000 
 3591      00000000 
 3591      00000000 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 123


 3591      00000000 
 3592              		.section	.bss.unison_active,"aw",%nobits
 3593              		.set	.LANCHOR42,. + 0
 3596              	unison_active:
 3597 0000 00       		.space	1
 3598              		.section	.data._ZZ10ReadFadersbE15last_sent_value,"aw"
 3599              		.align	2
 3600              		.set	.LANCHOR39,. + 0
 3603              	_ZZ10ReadFadersbE15last_sent_value:
 3604 0000 FFFFFFFF 		.word	-1
 3605              		.section	.data.button1_last_state,"aw"
 3606              		.set	.LANCHOR40,. + 0
 3609              	button1_last_state:
 3610 0000 01       		.byte	1
 3611              		.section	.data.button2_last_state,"aw"
 3612              		.set	.LANCHOR41,. + 0
 3615              	button2_last_state:
 3616 0000 01       		.byte	1
 3617              		.section	.data.button3_last_state,"aw"
 3618              		.set	.LANCHOR43,. + 0
 3621              	button3_last_state:
 3622 0000 01       		.byte	1
 3623              		.section	.rodata._ZN5daisy4seedL2D0E,"a"
 3624              		.align	2
 3625              		.set	.LANCHOR0,. + 0
 3628              	_ZN5daisy4seedL2D0E:
 3629 0000 01       		.byte	1
 3630 0001 0C       		.byte	12
 3631              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 3632              		.align	2
 3633              		.set	.LANCHOR2,. + 0
 3636              	_ZN5daisy4seedL2D1E:
 3637 0000 02       		.byte	2
 3638 0001 0B       		.byte	11
 3639              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 3640              		.align	2
 3641              		.set	.LANCHOR4,. + 0
 3644              	_ZN5daisy4seedL2D2E:
 3645 0000 02       		.byte	2
 3646 0001 0A       		.byte	10
 3647              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 3648              		.align	2
 3649              		.set	.LANCHOR14,. + 0
 3652              	_ZN5daisy4seedL2D3E:
 3653 0000 02       		.byte	2
 3654 0001 09       		.byte	9
 3655              		.section	.rodata._ZN5daisy4seedL2D4E,"a"
 3656              		.align	2
 3657              		.set	.LANCHOR16,. + 0
 3660              	_ZN5daisy4seedL2D4E:
 3661 0000 02       		.byte	2
 3662 0001 08       		.byte	8
 3663              		.section	.rodata._ZN5daisy4seedL2D5E,"a"
 3664              		.align	2
 3665              		.set	.LANCHOR6,. + 0
 3668              	_ZN5daisy4seedL2D5E:
 3669 0000 03       		.byte	3
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 124


 3670 0001 02       		.byte	2
 3671              		.section	.rodata._ZN5daisy4seedL2D6E,"a"
 3672              		.align	2
 3673              		.set	.LANCHOR8,. + 0
 3676              	_ZN5daisy4seedL2D6E:
 3677 0000 02       		.byte	2
 3678 0001 0C       		.byte	12
 3679              		.section	.rodata._ZN5daisy4seedL2D7E,"a"
 3680              		.align	2
 3681              		.set	.LANCHOR10,. + 0
 3684              	_ZN5daisy4seedL2D7E:
 3685 0000 06       		.byte	6
 3686 0001 0A       		.byte	10
 3687              		.section	.rodata._ZN5daisy4seedL2D8E,"a"
 3688              		.align	2
 3689              		.set	.LANCHOR12,. + 0
 3692              	_ZN5daisy4seedL2D8E:
 3693 0000 06       		.byte	6
 3694 0001 0B       		.byte	11
 3695              		.text
 3696              	.Letext0:
 3697              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 3698              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 3699              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 3700              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 3701              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 3702              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 3703              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 3704              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 3705              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 3706              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 3707              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 3708              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 3709              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 3710              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
 3711              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 3712              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 3713              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 3714              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 3715              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 3716              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 3717              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 3718              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h"
 3719              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 3720              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/type_traits.h"
 3721              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 3722              		.file 42 "<built-in>"
 3723              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 3724              		.file 44 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 3725              		.file 45 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 3726              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 3727              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 3728              		.file 48 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 3729              		.file 49 "../../libDaisy/src/per/tim.h"
 3730              		.file 50 "../../libDaisy/src/hid/MidiEvent.h"
 3731              		.file 51 "../../libDaisy/src/hid/logger_impl.h"
 3732              		.file 52 "../../libDaisy/src/util/wav_format.h"
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 125


 3733              		.file 53 "../../libDaisy/src/dev/max11300.h"
 3734              		.file 54 "../../libDaisy/src/hid/logger.h"
 3735              		.file 55 "../../libDaisy/src/dev/sdram.h"
 3736              		.file 56 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 3737              		.file 57 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 3738              		.file 58 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 3739              		.file 59 "../../DaisySP/Source/Control/adenv.h"
 3740              		.file 60 "../../DaisySP/Source/Utility/dsp.h"
 3741              		.file 61 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 3742              		.file 62 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 3743              		.file 63 "../../libDaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 126


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MIDIController.cpp
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:19     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:26     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:26     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:67     .text._ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:74     .text._ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev:0000000000000000 _ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:74     .text._ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev:0000000000000000 _ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED1Ev
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:113    .text._Z11initButtonsv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:120    .text._Z11initButtonsv:0000000000000000 _Z11initButtonsv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:175    .text._Z11initButtonsv:000000000000003c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:185    .text._Z8testLEDsv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:192    .text._Z8testLEDsv:0000000000000000 _Z8testLEDsv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:256    .text._Z8testLEDsv:000000000000004c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:268    .text._Z11InitEncoderv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:275    .text._Z11InitEncoderv:0000000000000000 _Z11InitEncoderv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:344    .text._Z11InitEncoderv:0000000000000044 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:354    .text._Z10InitFadersv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:361    .text._Z10InitFadersv:0000000000000000 _Z10InitFadersv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:535    .text._Z10InitFadersv:000000000000012c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:546    .rodata._Z11ReadEncoderb.str1.4:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:550    .text._Z11ReadEncoderb:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:557    .text._Z11ReadEncoderb:0000000000000000 _Z11ReadEncoderb
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:671    .text._Z11ReadEncoderb:0000000000000058 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:683    .text._Z14remapWithCurveff:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:690    .text._Z14remapWithCurveff:0000000000000000 _Z14remapWithCurveff
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:829    .text._Z14remapWithCurveff:000000000000006c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:836    .text._Z10UpdateLEDsv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:843    .text._Z10UpdateLEDsv:0000000000000000 _Z10UpdateLEDsv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:874    .text._Z10UpdateLEDsv:0000000000000014 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:878    .text._Z10UpdateLEDsv:0000000000000018 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:1064   .text._Z10UpdateLEDsv:00000000000000ec $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:1076   .rodata._Z10ReadFadersb.str1.4:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:1098   .text._Z10ReadFadersb:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:1105   .text._Z10ReadFadersb:0000000000000000 _Z10ReadFadersb
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:1943   .text._Z10ReadFadersb:0000000000000348 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3590   .bss.midi:0000000000000000 midi
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:1975   .rodata._Z11ReadButtonsb.str1.4:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:2003   .text._Z11ReadButtonsb:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:2010   .text._Z11ReadButtonsb:0000000000000000 _Z11ReadButtonsb
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:2610   .text._Z11ReadButtonsb:00000000000001c8 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:2641   .text.startup.main:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:2648   .text.startup.main:0000000000000000 main
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:2777   .text.startup.main:0000000000000064 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:2783   .text.startup._GLOBAL__sub_I_unison_active:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:2789   .text.startup._GLOBAL__sub_I_unison_active:0000000000000000 _GLOBAL__sub_I_unison_active
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3321   .text.startup._GLOBAL__sub_I_unison_active:00000000000000a8 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3340   .init_array:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3565   .bss.knob3cfg:0000000000000000 knob3cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3558   .bss.knob2cfg:0000000000000000 knob2cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3551   .bss.knob1cfg:0000000000000000 knob1cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3537   .bss.fader3cfg:0000000000000000 fader3cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3530   .bss.fader2cfg:0000000000000000 fader2cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3523   .bss.fader1cfg:0000000000000000 fader1cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3579   .bss.lastEncB:0000000000000000 lastEncB
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3572   .bss.lastEncA:0000000000000000 lastEncA
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3516   .bss.encoderPos:0000000000000000 encoderPos
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 127


/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3509   .bss.encoderB:0000000000000000 encoderB
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3502   .bss.encoderA:0000000000000000 encoderA
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3495   .bss.current_led_mode:0000000000000000 current_led_mode
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3584   .bss.led_state:0000000000000000 led_state
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3395   .bss.LED_W2:0000000000000000 LED_W2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3388   .bss.LED_W1:0000000000000000 LED_W1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3381   .bss.LED_R2:0000000000000000 LED_R2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3374   .bss.LED_R1:0000000000000000 LED_R1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3621   .data.button3_last_state:0000000000000000 button3_last_state
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3615   .data.button2_last_state:0000000000000000 button2_last_state
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3609   .data.button1_last_state:0000000000000000 button1_last_state
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3483   .bss.button3:0000000000000000 button3
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3476   .bss.button2:0000000000000000 button2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3469   .bss.button1:0000000000000000 button1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3544   .bss.hw:0000000000000000 hw
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3489   .bss.chorus_state:0000000000000000 chorus_state
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3596   .bss.unison_active:0000000000000000 unison_active
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3370   .bss.LED_R1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3377   .bss.LED_R2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3384   .bss.LED_W1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3391   .bss.LED_W2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3398   .bss._ZZ10ReadFadersbE10last_knob1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3402   .bss._ZZ10ReadFadersbE10last_knob1:0000000000000000 _ZZ10ReadFadersbE10last_knob1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3405   .bss._ZZ10ReadFadersbE10last_knob2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3409   .bss._ZZ10ReadFadersbE10last_knob2:0000000000000000 _ZZ10ReadFadersbE10last_knob2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3412   .bss._ZZ10ReadFadersbE10last_knob3:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3416   .bss._ZZ10ReadFadersbE10last_knob3:0000000000000000 _ZZ10ReadFadersbE10last_knob3
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3419   .bss._ZZ10ReadFadersbE11last_fader1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3423   .bss._ZZ10ReadFadersbE11last_fader1:0000000000000000 _ZZ10ReadFadersbE11last_fader1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3426   .bss._ZZ10ReadFadersbE11last_fader2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3430   .bss._ZZ10ReadFadersbE11last_fader2:0000000000000000 _ZZ10ReadFadersbE11last_fader2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3433   .bss._ZZ10ReadFadersbE11last_fader3:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3437   .bss._ZZ10ReadFadersbE11last_fader3:0000000000000000 _ZZ10ReadFadersbE11last_fader3
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3443   .bss._ZZ10ReadFadersbE15last_sub_active:0000000000000000 _ZZ10ReadFadersbE15last_sub_active
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3444   .bss._ZZ10ReadFadersbE15last_sub_active:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3446   .bss._ZZ10UpdateLEDsvE11last_toggle:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3450   .bss._ZZ10UpdateLEDsvE11last_toggle:0000000000000000 _ZZ10UpdateLEDsvE11last_toggle
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3456   .bss._ZZ10UpdateLEDsvE12led_position:0000000000000000 _ZZ10UpdateLEDsvE12led_position
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3457   .bss._ZZ10UpdateLEDsvE12led_position:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3462   .bss._ZZ10UpdateLEDsvE9led_state:0000000000000000 _ZZ10UpdateLEDsvE9led_state
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3463   .bss._ZZ10UpdateLEDsvE9led_state:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3465   .bss.button1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3472   .bss.button2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3479   .bss.button3:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3490   .bss.chorus_state:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3496   .bss.current_led_mode:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3498   .bss.encoderA:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3505   .bss.encoderB:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3512   .bss.encoderPos:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3519   .bss.fader1cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3526   .bss.fader2cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3533   .bss.fader3cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3540   .bss.hw:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3547   .bss.knob1cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3554   .bss.knob2cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3561   .bss.knob3cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3568   .bss.lastEncA:0000000000000000 $d
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s 			page 128


/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3575   .bss.lastEncB:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3585   .bss.led_state:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3587   .bss.midi:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3597   .bss.unison_active:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3599   .data._ZZ10ReadFadersbE15last_sent_value:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3603   .data._ZZ10ReadFadersbE15last_sent_value:0000000000000000 _ZZ10ReadFadersbE15last_sent_value
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3624   .rodata._ZN5daisy4seedL2D0E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3628   .rodata._ZN5daisy4seedL2D0E:0000000000000000 _ZN5daisy4seedL2D0E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3632   .rodata._ZN5daisy4seedL2D1E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3636   .rodata._ZN5daisy4seedL2D1E:0000000000000000 _ZN5daisy4seedL2D1E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3640   .rodata._ZN5daisy4seedL2D2E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3644   .rodata._ZN5daisy4seedL2D2E:0000000000000000 _ZN5daisy4seedL2D2E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3648   .rodata._ZN5daisy4seedL2D3E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3652   .rodata._ZN5daisy4seedL2D3E:0000000000000000 _ZN5daisy4seedL2D3E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3656   .rodata._ZN5daisy4seedL2D4E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3660   .rodata._ZN5daisy4seedL2D4E:0000000000000000 _ZN5daisy4seedL2D4E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3664   .rodata._ZN5daisy4seedL2D5E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3668   .rodata._ZN5daisy4seedL2D5E:0000000000000000 _ZN5daisy4seedL2D5E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3672   .rodata._ZN5daisy4seedL2D6E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3676   .rodata._ZN5daisy4seedL2D6E:0000000000000000 _ZN5daisy4seedL2D6E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3680   .rodata._ZN5daisy4seedL2D7E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3684   .rodata._ZN5daisy4seedL2D7E:0000000000000000 _ZN5daisy4seedL2D7E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3688   .rodata._ZN5daisy4seedL2D8E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccYifXaH.s:3692   .rodata._ZN5daisy4seedL2D8E:0000000000000000 _ZN5daisy4seedL2D8E
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED5Ev

UNDEFINED SYMBOLS
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy4GPIO4ReadEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
srand
rand
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
pow
powf
_ZN5daisy6System6GetNowEv
_ZN5daisy4GPIO5WriteEb
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN5daisy16MidiUsbTransport2TxEPhj
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE5PrintEPKcz
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy16MidiUsbTransport4InitENS0_6ConfigE
_ZN5daisy10MidiParser5ResetEv
_ZN5daisy9DaisySeed6SetLedEb
_ZN5daisy9DaisySeed7DelayMsEj
__aeabi_atexit
__dso_handle
