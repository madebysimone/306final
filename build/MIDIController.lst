ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MIDIController.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy9DaisySeedD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2556:
  29              		.file 1 "../../libDaisy/src/daisy_seed.h"
   1:../../libDaisy/src/daisy_seed.h **** #pragma once
   2:../../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy/src/daisy_seed.h **** 
   5:../../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy/src/daisy_seed.h **** 
   7:../../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy/src/daisy_seed.h **** 
  10:../../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../../libDaisy/src/daisy_seed.h **** {
  12:../../libDaisy/src/daisy_seed.h **** /**
  13:../../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy/src/daisy_seed.h **** 
  16:../../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy/src/daisy_seed.h **** */
  18:../../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy/src/daisy_seed.h **** {
  20:../../libDaisy/src/daisy_seed.h ****   public:
  21:../../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB360:
  36              	.LBI360:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 2


  37              		.file 2 "../../libDaisy/src/sys/system.h"
   1:../../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy/src/sys/system.h **** 
   4:../../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy/src/sys/system.h **** 
   6:../../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy/src/sys/system.h **** 
   9:../../libDaisy/src/sys/system.h **** namespace daisy
  10:../../libDaisy/src/sys/system.h **** {
  11:../../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy/src/sys/system.h ****  **
  15:../../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy/src/sys/system.h ****  */
  18:../../libDaisy/src/sys/system.h **** class System
  19:../../libDaisy/src/sys/system.h **** {
  20:../../libDaisy/src/sys/system.h ****   public:
  21:../../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy/src/sys/system.h ****     struct Config
  23:../../libDaisy/src/sys/system.h ****     {
  24:../../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy/src/sys/system.h ****         {
  27:../../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy/src/sys/system.h ****         };
  30:../../libDaisy/src/sys/system.h **** 
  31:../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy/src/sys/system.h ****          ** */
  35:../../libDaisy/src/sys/system.h ****         void Defaults()
  36:../../libDaisy/src/sys/system.h ****         {
  37:../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy/src/sys/system.h ****         }
  42:../../libDaisy/src/sys/system.h **** 
  43:../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy/src/sys/system.h ****          ** */
  47:../../libDaisy/src/sys/system.h ****         void Boost()
  48:../../libDaisy/src/sys/system.h ****         {
  49:../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy/src/sys/system.h ****         }
  54:../../libDaisy/src/sys/system.h **** 
  55:../../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy/src/sys/system.h ****         bool       use_dcache;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 3


  57:../../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy/src/sys/system.h ****     };
  60:../../libDaisy/src/sys/system.h **** 
  61:../../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy/src/sys/system.h ****     {
  64:../../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy/src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy/src/sys/system.h ****         SDRAM,
  71:../../libDaisy/src/sys/system.h ****         QSPI,
  72:../../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy/src/sys/system.h ****     };
  74:../../libDaisy/src/sys/system.h **** 
  75:../../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../../libDaisy/src/sys/system.h ****     {
  78:../../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy/src/sys/system.h ****         {
  80:../../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy/src/sys/system.h ****         } status;
  85:../../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy/src/sys/system.h ****         {
  88:../../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy/src/sys/system.h ****             LAST
  93:../../libDaisy/src/sys/system.h ****         } version;
  94:../../libDaisy/src/sys/system.h ****     };
  95:../../libDaisy/src/sys/system.h **** 
  96:../../libDaisy/src/sys/system.h ****     System() {}
  97:../../libDaisy/src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE360:
  41              	.LBB361:
  42              	.LBI361:
  43              		.file 3 "../../libDaisy/src/hid/usb.h"
   1:../../libDaisy/src/hid/usb.h **** #pragma once
   2:../../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy/src/hid/usb.h **** 
   7:../../libDaisy/src/hid/usb.h **** namespace daisy
   8:../../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy/src/hid/usb.h ****     @{
  10:../../libDaisy/src/hid/usb.h **** */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 4


  11:../../libDaisy/src/hid/usb.h **** 
  12:../../libDaisy/src/hid/usb.h **** {
  13:../../libDaisy/src/hid/usb.h **** /** 
  14:../../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../../libDaisy/src/hid/usb.h **** */
  18:../../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../../libDaisy/src/hid/usb.h **** {
  20:../../libDaisy/src/hid/usb.h ****   public:
  21:../../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy/src/hid/usb.h ****     enum class Result
  23:../../libDaisy/src/hid/usb.h ****     {
  24:../../libDaisy/src/hid/usb.h ****         OK,
  25:../../libDaisy/src/hid/usb.h ****         ERR,
  26:../../libDaisy/src/hid/usb.h ****     };
  27:../../libDaisy/src/hid/usb.h **** 
  28:../../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy/src/hid/usb.h ****     {
  31:../../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy/src/hid/usb.h ****     };
  35:../../libDaisy/src/hid/usb.h **** 
  36:../../libDaisy/src/hid/usb.h **** 
  37:../../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy/src/hid/usb.h **** 
  40:../../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy/src/hid/usb.h **** 
  42:../../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE361:
  47              	.LBB362:
  48              	.LBI362:
  49              		.file 4 "../../libDaisy/src/per/adc.h"
   1:../../libDaisy/src/per/adc.h **** #pragma once
   2:../../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy/src/per/adc.h **** 
   9:../../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy/src/per/adc.h **** 
  11:../../libDaisy/src/per/adc.h **** namespace daisy
  12:../../libDaisy/src/per/adc.h **** {
  13:../../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy/src/per/adc.h ****     @{
  15:../../libDaisy/src/per/adc.h **** */
  16:../../libDaisy/src/per/adc.h **** 
  17:../../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy/src/per/adc.h **** later without breaking existing functionality.
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 5


  20:../../libDaisy/src/per/adc.h **** */
  21:../../libDaisy/src/per/adc.h **** 
  22:../../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy/src/per/adc.h ****  *           one channel.
  26:../../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy/src/per/adc.h **** */
  31:../../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy/src/per/adc.h **** {
  33:../../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../../libDaisy/src/per/adc.h ****     {
  36:../../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy/src/per/adc.h ****     };
  41:../../libDaisy/src/per/adc.h **** 
  42:../../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy/src/per/adc.h ****     {
  45:../../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy/src/per/adc.h ****     };
  54:../../libDaisy/src/per/adc.h **** 
  55:../../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy/src/per/adc.h ****      */
  59:../../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy/src/per/adc.h **** 
  61:../../libDaisy/src/per/adc.h ****     /** 
  62:../../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy/src/per/adc.h ****     */
  74:../../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 6


  77:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy/src/per/adc.h **** 
  81:../../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy/src/per/adc.h **** };
  86:../../libDaisy/src/per/adc.h **** 
  87:../../libDaisy/src/per/adc.h **** /**
  88:../../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy/src/per/adc.h **** */
  90:../../libDaisy/src/per/adc.h **** class AdcHandle
  91:../../libDaisy/src/per/adc.h **** {
  92:../../libDaisy/src/per/adc.h ****   public:
  93:../../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../../libDaisy/src/per/adc.h ****     {
  96:../../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy/src/per/adc.h ****     };
 108:../../libDaisy/src/per/adc.h **** 
 109:../../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE362:
  53              	.LBB363:
  54              	.LBI363:
  55              		.file 5 "../../libDaisy/src/hid/audio.h"
   1:../../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy/src/hid/audio.h **** 
   4:../../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy/src/hid/audio.h **** 
   6:../../libDaisy/src/hid/audio.h **** namespace daisy
   7:../../libDaisy/src/hid/audio.h **** {
   8:../../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 7


  18:../../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy/src/hid/audio.h ****  */
  22:../../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../../libDaisy/src/hid/audio.h **** {
  24:../../libDaisy/src/hid/audio.h ****   public:
  25:../../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy/src/hid/audio.h ****     struct Config
  28:../../libDaisy/src/hid/audio.h ****     {
  29:../../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy/src/hid/audio.h **** 
  32:../../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy/src/hid/audio.h **** 
  35:../../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy/src/hid/audio.h ****         float postgain;
  37:../../libDaisy/src/hid/audio.h **** 
  38:../../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy/src/hid/audio.h ****          */
  41:../../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy/src/hid/audio.h **** 
  43:../../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy/src/hid/audio.h ****         Config()
  45:../../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy/src/hid/audio.h ****         {
  50:../../libDaisy/src/hid/audio.h ****         }
  51:../../libDaisy/src/hid/audio.h ****     };
  52:../../libDaisy/src/hid/audio.h **** 
  53:../../libDaisy/src/hid/audio.h ****     enum class Result
  54:../../libDaisy/src/hid/audio.h ****     {
  55:../../libDaisy/src/hid/audio.h ****         OK,
  56:../../libDaisy/src/hid/audio.h ****         ERR,
  57:../../libDaisy/src/hid/audio.h ****     };
  58:../../libDaisy/src/hid/audio.h **** 
  59:../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy/src/hid/audio.h ****      */
  63:../../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy/src/hid/audio.h **** 
  65:../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy/src/hid/audio.h ****      */
  68:../../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy/src/hid/audio.h **** 
  70:../../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy/src/hid/audio.h ****      */
  73:../../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 8


  75:../../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy/src/hid/audio.h **** 
  77:../../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy/src/hid/audio.h ****     */
  81:../../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy/src/hid/audio.h **** 
  83:../../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy/src/hid/audio.h ****     */
  86:../../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy/src/hid/audio.h **** 
  88:../../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy/src/hid/audio.h ****      */
  91:../../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy/src/hid/audio.h **** 
  95:../../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE363:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2556:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev,"axG",%progbits,_ZN5daisy11MidiH
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	_ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev:
  75              	.LVL1:
  76              	.LFB5275:
  77              		.file 6 "../../libDaisy/src/hid/midi.h"
   1:../../libDaisy/src/hid/midi.h **** #pragma once
   2:../../libDaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy/src/hid/midi.h **** 
   5:../../libDaisy/src/hid/midi.h **** #include <stdint.h>
   6:../../libDaisy/src/hid/midi.h **** #include <stdlib.h>
   7:../../libDaisy/src/hid/midi.h **** #include <algorithm>
   8:../../libDaisy/src/hid/midi.h **** #include "per/uart.h"
   9:../../libDaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  10:../../libDaisy/src/hid/midi.h **** #include "util/FIFO.h"
  11:../../libDaisy/src/hid/midi.h **** #include "hid/midi_parser.h"
  12:../../libDaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  13:../../libDaisy/src/hid/midi.h **** #include "sys/dma.h"
  14:../../libDaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy/src/hid/midi.h **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 9


  16:../../libDaisy/src/hid/midi.h **** namespace daisy
  17:../../libDaisy/src/hid/midi.h **** {
  18:../../libDaisy/src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART
  19:../../libDaisy/src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy/src/hid/midi.h ****  *           There is an additional 2kB of RAM data used within this class
  21:../../libDaisy/src/hid/midi.h ****  *           for processing bulk data from the UART peripheral
  22:../../libDaisy/src/hid/midi.h ****  *  @ingroup midi
  23:../../libDaisy/src/hid/midi.h **** */
  24:../../libDaisy/src/hid/midi.h **** class MidiUartTransport
  25:../../libDaisy/src/hid/midi.h **** {
  26:../../libDaisy/src/hid/midi.h ****   public:
  27:../../libDaisy/src/hid/midi.h ****     typedef void (*MidiRxParseCallback)(uint8_t* data,
  28:../../libDaisy/src/hid/midi.h ****                                         size_t   size,
  29:../../libDaisy/src/hid/midi.h ****                                         void*    context);
  30:../../libDaisy/src/hid/midi.h **** 
  31:../../libDaisy/src/hid/midi.h ****     MidiUartTransport() {}
  32:../../libDaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  33:../../libDaisy/src/hid/midi.h **** 
  34:../../libDaisy/src/hid/midi.h ****     /** @brief Configuration structure for UART MIDI */
  35:../../libDaisy/src/hid/midi.h ****     struct Config
  36:../../libDaisy/src/hid/midi.h ****     {
  37:../../libDaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  38:../../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  39:../../libDaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  40:../../libDaisy/src/hid/midi.h **** 
  41:../../libDaisy/src/hid/midi.h ****         /** Pointer to buffer for DMA UART rx byte transfer in background.
  42:../../libDaisy/src/hid/midi.h ****          *
  43:../../libDaisy/src/hid/midi.h ****          *  @details By default this uses a shared buffer in DMA_BUFFER_MEM_SECTION,
  44:../../libDaisy/src/hid/midi.h ****          *           which can only be utilized for a single UART peripheral. To
  45:../../libDaisy/src/hid/midi.h ****          *           use MIDI with multiple UART peripherals, you must provide your own
  46:../../libDaisy/src/hid/midi.h ****          *           buffer, allocated to a DMA-capable memory section.
  47:../../libDaisy/src/hid/midi.h ****          */
  48:../../libDaisy/src/hid/midi.h ****         uint8_t* rx_buffer;
  49:../../libDaisy/src/hid/midi.h **** 
  50:../../libDaisy/src/hid/midi.h ****         /** Size in bytes of rx_buffer.
  51:../../libDaisy/src/hid/midi.h ****          *
  52:../../libDaisy/src/hid/midi.h ****          *  @details This size determines the maximum Rx bytes readable by the UART in the backgrou
  53:../../libDaisy/src/hid/midi.h ****          *           By default it's set to the size of the default shared rx_buffer (256 bytes).
  54:../../libDaisy/src/hid/midi.h ****          *           While much smaller sizes can be used, data can get missed if the buffer is too
  55:../../libDaisy/src/hid/midi.h ****          */
  56:../../libDaisy/src/hid/midi.h ****         size_t rx_buffer_size;
  57:../../libDaisy/src/hid/midi.h **** 
  58:../../libDaisy/src/hid/midi.h ****         Config();
  59:../../libDaisy/src/hid/midi.h ****     };
  60:../../libDaisy/src/hid/midi.h **** 
  61:../../libDaisy/src/hid/midi.h ****     /** @brief Initialization of UART using config struct */
  62:../../libDaisy/src/hid/midi.h ****     inline void Init(Config config)
  63:../../libDaisy/src/hid/midi.h ****     {
  64:../../libDaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  65:../../libDaisy/src/hid/midi.h **** 
  66:../../libDaisy/src/hid/midi.h ****         //defaults
  67:../../libDaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  68:../../libDaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  69:../../libDaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  70:../../libDaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  71:../../libDaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  72:../../libDaisy/src/hid/midi.h **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 10


  73:../../libDaisy/src/hid/midi.h ****         //user settings
  74:../../libDaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  75:../../libDaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  76:../../libDaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  77:../../libDaisy/src/hid/midi.h **** 
  78:../../libDaisy/src/hid/midi.h ****         rx_buffer      = config.rx_buffer;
  79:../../libDaisy/src/hid/midi.h ****         rx_buffer_size = config.rx_buffer_size;
  80:../../libDaisy/src/hid/midi.h **** 
  81:../../libDaisy/src/hid/midi.h ****         /** zero the buffer to ensure emptiness regardless of source memory */
  82:../../libDaisy/src/hid/midi.h ****         std::fill(rx_buffer, rx_buffer + rx_buffer_size, 0);
  83:../../libDaisy/src/hid/midi.h **** 
  84:../../libDaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  85:../../libDaisy/src/hid/midi.h ****     }
  86:../../libDaisy/src/hid/midi.h **** 
  87:../../libDaisy/src/hid/midi.h ****     /** @brief Start the UART peripheral in listening mode.
  88:../../libDaisy/src/hid/midi.h ****      *  This will fill an internal data structure in the background */
  89:../../libDaisy/src/hid/midi.h ****     inline void StartRx(MidiRxParseCallback parse_callback, void* context)
  90:../../libDaisy/src/hid/midi.h ****     {
  91:../../libDaisy/src/hid/midi.h ****         parse_context_  = context;
  92:../../libDaisy/src/hid/midi.h ****         parse_callback_ = parse_callback;
  93:../../libDaisy/src/hid/midi.h ****         dsy_dma_clear_cache_for_buffer((uint8_t*)this,
  94:../../libDaisy/src/hid/midi.h ****                                        sizeof(MidiUartTransport));
  95:../../libDaisy/src/hid/midi.h ****         uart_.DmaListenStart(
  96:../../libDaisy/src/hid/midi.h ****             rx_buffer, rx_buffer_size, MidiUartTransport::rxCallback, this);
  97:../../libDaisy/src/hid/midi.h ****     }
  98:../../libDaisy/src/hid/midi.h **** 
  99:../../libDaisy/src/hid/midi.h ****     /** @brief returns whether the UART peripheral is actively listening in the background or not *
 100:../../libDaisy/src/hid/midi.h ****     inline bool RxActive() { return uart_.IsListening(); }
 101:../../libDaisy/src/hid/midi.h **** 
 102:../../libDaisy/src/hid/midi.h ****     /** @brief This is a no-op for UART transport - Rx is via DMA callback with circular buffer */
 103:../../libDaisy/src/hid/midi.h ****     inline void FlushRx() {}
 104:../../libDaisy/src/hid/midi.h **** 
 105:../../libDaisy/src/hid/midi.h ****     /** @brief sends the buffer of bytes out of the UART peripheral */
 106:../../libDaisy/src/hid/midi.h ****     inline void Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
 107:../../libDaisy/src/hid/midi.h **** 
 108:../../libDaisy/src/hid/midi.h ****   private:
 109:../../libDaisy/src/hid/midi.h ****     UartHandler         uart_;
 110:../../libDaisy/src/hid/midi.h ****     uint8_t*            rx_buffer;
 111:../../libDaisy/src/hid/midi.h ****     size_t              rx_buffer_size;
 112:../../libDaisy/src/hid/midi.h ****     void*               parse_context_;
 113:../../libDaisy/src/hid/midi.h ****     MidiRxParseCallback parse_callback_;
 114:../../libDaisy/src/hid/midi.h **** 
 115:../../libDaisy/src/hid/midi.h ****     /** Static callback for Uart MIDI that occurs when
 116:../../libDaisy/src/hid/midi.h ****          *  new data is available from the peripheral.
 117:../../libDaisy/src/hid/midi.h ****          *  The new data is transferred from the peripheral to the
 118:../../libDaisy/src/hid/midi.h ****          *  MIDI instance's byte FIFO that feeds the MIDI parser.
 119:../../libDaisy/src/hid/midi.h ****          *
 120:../../libDaisy/src/hid/midi.h ****          *  TODO: Handle UartHandler errors better/at all.
 121:../../libDaisy/src/hid/midi.h ****          *  (If there is a UART error, there's not really any recovery
 122:../../libDaisy/src/hid/midi.h ****          *  option at the moment)
 123:../../libDaisy/src/hid/midi.h ****          */
 124:../../libDaisy/src/hid/midi.h ****     static void rxCallback(uint8_t*            data,
 125:../../libDaisy/src/hid/midi.h ****                            size_t              size,
 126:../../libDaisy/src/hid/midi.h ****                            void*               context,
 127:../../libDaisy/src/hid/midi.h ****                            UartHandler::Result res)
 128:../../libDaisy/src/hid/midi.h ****     {
 129:../../libDaisy/src/hid/midi.h ****         /** Read context as transport type */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 11


 130:../../libDaisy/src/hid/midi.h ****         MidiUartTransport* transport
 131:../../libDaisy/src/hid/midi.h ****             = reinterpret_cast<MidiUartTransport*>(context);
 132:../../libDaisy/src/hid/midi.h ****         if(res == UartHandler::Result::OK)
 133:../../libDaisy/src/hid/midi.h ****         {
 134:../../libDaisy/src/hid/midi.h ****             if(transport->parse_callback_)
 135:../../libDaisy/src/hid/midi.h ****             {
 136:../../libDaisy/src/hid/midi.h ****                 transport->parse_callback_(
 137:../../libDaisy/src/hid/midi.h ****                     data, size, transport->parse_context_);
 138:../../libDaisy/src/hid/midi.h ****             }
 139:../../libDaisy/src/hid/midi.h ****         }
 140:../../libDaisy/src/hid/midi.h ****     }
 141:../../libDaisy/src/hid/midi.h **** };
 142:../../libDaisy/src/hid/midi.h **** 
 143:../../libDaisy/src/hid/midi.h **** /**
 144:../../libDaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n
 145:../../libDaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n
 146:../../libDaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
 147:../../libDaisy/src/hid/midi.h ****     @author shensley
 148:../../libDaisy/src/hid/midi.h ****     @date March 2020
 149:../../libDaisy/src/hid/midi.h ****     @ingroup midi
 150:../../libDaisy/src/hid/midi.h **** */
 151:../../libDaisy/src/hid/midi.h **** template <typename Transport>
 152:../../libDaisy/src/hid/midi.h **** class MidiHandler
 153:../../libDaisy/src/hid/midi.h **** {
 154:../../libDaisy/src/hid/midi.h ****   public:
 155:../../libDaisy/src/hid/midi.h ****     MidiHandler() {}
 156:../../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
  78              		.loc 6 156 5 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LBB364:
  84              	.LBI364:
  85              		.file 7 "../../libDaisy/src/util/FIFO.h"
   1:../../libDaisy/src/util/FIFO.h **** #pragma once
   2:../../libDaisy/src/util/FIFO.h **** 
   3:../../libDaisy/src/util/FIFO.h **** #include <stdint.h>
   4:../../libDaisy/src/util/FIFO.h **** #include <stddef.h>
   5:../../libDaisy/src/util/FIFO.h **** #include <initializer_list>
   6:../../libDaisy/src/util/FIFO.h **** 
   7:../../libDaisy/src/util/FIFO.h **** namespace daisy
   8:../../libDaisy/src/util/FIFO.h **** {
   9:../../libDaisy/src/util/FIFO.h **** /** Capacity-independent base class for FIFO. Use FIFO instead. */
  10:../../libDaisy/src/util/FIFO.h **** template <typename T>
  11:../../libDaisy/src/util/FIFO.h **** class FIFOBase
  12:../../libDaisy/src/util/FIFO.h **** {
  13:../../libDaisy/src/util/FIFO.h ****   protected:
  14:../../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize)
  15:../../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  16:../../libDaisy/src/util/FIFO.h ****     {
  17:../../libDaisy/src/util/FIFO.h ****     }
  18:../../libDaisy/src/util/FIFO.h **** 
  19:../../libDaisy/src/util/FIFO.h ****     FIFOBase(T* buffer, size_t bufferSize, std::initializer_list<T> valuesToAdd)
  20:../../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
  21:../../libDaisy/src/util/FIFO.h ****     {
  22:../../libDaisy/src/util/FIFO.h ****         PushBack(valuesToAdd);
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 12


  23:../../libDaisy/src/util/FIFO.h ****     }
  24:../../libDaisy/src/util/FIFO.h **** 
  25:../../libDaisy/src/util/FIFO.h ****   public:
  26:../../libDaisy/src/util/FIFO.h ****     /** Copies all elements from another FIFO */
  27:../../libDaisy/src/util/FIFO.h ****     FIFOBase<T>& operator=(const FIFOBase<T>& other)
  28:../../libDaisy/src/util/FIFO.h ****     {
  29:../../libDaisy/src/util/FIFO.h ****         bufferIn_ = bufferOut_ = 0;
  30:../../libDaisy/src/util/FIFO.h ****         if(!other.IsEmpty())
  31:../../libDaisy/src/util/FIFO.h ****         {
  32:../../libDaisy/src/util/FIFO.h ****             int readPtr = other.bufferOut_;
  33:../../libDaisy/src/util/FIFO.h ****             while((readPtr != other.bufferIn_) && (bufferIn_ < bufferSize_))
  34:../../libDaisy/src/util/FIFO.h ****             {
  35:../../libDaisy/src/util/FIFO.h ****                 buffer_[bufferIn_++] = other.buffer_[readPtr++];
  36:../../libDaisy/src/util/FIFO.h ****                 if(readPtr >= other.bufferSize_)
  37:../../libDaisy/src/util/FIFO.h ****                     readPtr -= other.bufferSize_;
  38:../../libDaisy/src/util/FIFO.h ****             }
  39:../../libDaisy/src/util/FIFO.h ****         }
  40:../../libDaisy/src/util/FIFO.h ****         return *this;
  41:../../libDaisy/src/util/FIFO.h ****     }
  42:../../libDaisy/src/util/FIFO.h ****     ~FIFOBase() {}
  43:../../libDaisy/src/util/FIFO.h **** 
  44:../../libDaisy/src/util/FIFO.h ****     /** Removes all elements from the FIFO */
  45:../../libDaisy/src/util/FIFO.h ****     void Clear() { bufferIn_ = bufferOut_ = 0; }
  46:../../libDaisy/src/util/FIFO.h **** 
  47:../../libDaisy/src/util/FIFO.h ****     /** Adds an element to the back of the buffer, returning true on
  48:../../libDaisy/src/util/FIFO.h ****         success */
  49:../../libDaisy/src/util/FIFO.h ****     bool PushBack(const T& elementToAdd)
  50:../../libDaisy/src/util/FIFO.h ****     {
  51:../../libDaisy/src/util/FIFO.h ****         if(!IsFull())
  52:../../libDaisy/src/util/FIFO.h ****         {
  53:../../libDaisy/src/util/FIFO.h ****             buffer_[bufferIn_++] = elementToAdd;
  54:../../libDaisy/src/util/FIFO.h ****             if(bufferIn_ >= bufferSize_)
  55:../../libDaisy/src/util/FIFO.h ****                 bufferIn_ -= bufferSize_;
  56:../../libDaisy/src/util/FIFO.h ****             return true;
  57:../../libDaisy/src/util/FIFO.h ****         }
  58:../../libDaisy/src/util/FIFO.h ****         return false;
  59:../../libDaisy/src/util/FIFO.h ****     }
  60:../../libDaisy/src/util/FIFO.h **** 
  61:../../libDaisy/src/util/FIFO.h ****     /** Adds multiple elements and returns the number of elements that were added */
  62:../../libDaisy/src/util/FIFO.h ****     int PushBack(std::initializer_list<T> valuesToAdd)
  63:../../libDaisy/src/util/FIFO.h ****     {
  64:../../libDaisy/src/util/FIFO.h ****         int numAdded = 0;
  65:../../libDaisy/src/util/FIFO.h ****         for(const auto& v : valuesToAdd)
  66:../../libDaisy/src/util/FIFO.h ****         {
  67:../../libDaisy/src/util/FIFO.h ****             if(IsFull())
  68:../../libDaisy/src/util/FIFO.h ****                 return numAdded;
  69:../../libDaisy/src/util/FIFO.h **** 
  70:../../libDaisy/src/util/FIFO.h ****             PushBack(v);
  71:../../libDaisy/src/util/FIFO.h ****             numAdded++;
  72:../../libDaisy/src/util/FIFO.h ****         }
  73:../../libDaisy/src/util/FIFO.h ****         return numAdded;
  74:../../libDaisy/src/util/FIFO.h ****     }
  75:../../libDaisy/src/util/FIFO.h **** 
  76:../../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  77:../../libDaisy/src/util/FIFO.h ****     T& Back()
  78:../../libDaisy/src/util/FIFO.h ****     {
  79:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 13


  80:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  81:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  82:../../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  83:../../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  84:../../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  85:../../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  86:../../libDaisy/src/util/FIFO.h ****     }
  87:../../libDaisy/src/util/FIFO.h **** 
  88:../../libDaisy/src/util/FIFO.h ****     /** returns a reference to the last element */
  89:../../libDaisy/src/util/FIFO.h ****     const T& Back() const
  90:../../libDaisy/src/util/FIFO.h ****     {
  91:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
  92:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
  93:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
  94:../../libDaisy/src/util/FIFO.h ****         int idx = bufferIn_ - 1;
  95:../../libDaisy/src/util/FIFO.h ****         if(idx < 0)
  96:../../libDaisy/src/util/FIFO.h ****             idx += bufferSize_;
  97:../../libDaisy/src/util/FIFO.h ****         return buffer_[idx];
  98:../../libDaisy/src/util/FIFO.h ****     }
  99:../../libDaisy/src/util/FIFO.h **** 
 100:../../libDaisy/src/util/FIFO.h ****     /** removes and returns an element from the front of the buffer */
 101:../../libDaisy/src/util/FIFO.h ****     T PopFront()
 102:../../libDaisy/src/util/FIFO.h ****     {
 103:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 104:../../libDaisy/src/util/FIFO.h ****             return T();
 105:../../libDaisy/src/util/FIFO.h ****         else
 106:../../libDaisy/src/util/FIFO.h ****         {
 107:../../libDaisy/src/util/FIFO.h ****             const auto result = buffer_[bufferOut_];
 108:../../libDaisy/src/util/FIFO.h ****             bufferOut_++;
 109:../../libDaisy/src/util/FIFO.h ****             if(bufferOut_ >= bufferSize_)
 110:../../libDaisy/src/util/FIFO.h ****                 bufferOut_ -= bufferSize_;
 111:../../libDaisy/src/util/FIFO.h ****             return result;
 112:../../libDaisy/src/util/FIFO.h ****         }
 113:../../libDaisy/src/util/FIFO.h ****     }
 114:../../libDaisy/src/util/FIFO.h **** 
 115:../../libDaisy/src/util/FIFO.h ****     /** returns a copy of the first element */
 116:../../libDaisy/src/util/FIFO.h ****     T& Front()
 117:../../libDaisy/src/util/FIFO.h ****     {
 118:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 119:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 120:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 121:../../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 122:../../libDaisy/src/util/FIFO.h ****     }
 123:../../libDaisy/src/util/FIFO.h **** 
 124:../../libDaisy/src/util/FIFO.h ****     /** returns a reference to the first element */
 125:../../libDaisy/src/util/FIFO.h ****     const T& Front() const
 126:../../libDaisy/src/util/FIFO.h ****     {
 127:../../libDaisy/src/util/FIFO.h ****         if(IsEmpty())
 128:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 129:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 130:../../libDaisy/src/util/FIFO.h ****         return buffer_[bufferOut_];
 131:../../libDaisy/src/util/FIFO.h ****     }
 132:../../libDaisy/src/util/FIFO.h **** 
 133:../../libDaisy/src/util/FIFO.h ****     /** Returns true if the buffer contains an element equal to the provided value */
 134:../../libDaisy/src/util/FIFO.h ****     bool Contains(const T& element)
 135:../../libDaisy/src/util/FIFO.h ****     {
 136:../../libDaisy/src/util/FIFO.h ****         auto idx = bufferOut_;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 14


 137:../../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 138:../../libDaisy/src/util/FIFO.h ****         {
 139:../../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 140:../../libDaisy/src/util/FIFO.h ****                 return true;
 141:../../libDaisy/src/util/FIFO.h ****             idx++;
 142:../../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 143:../../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 144:../../libDaisy/src/util/FIFO.h ****         }
 145:../../libDaisy/src/util/FIFO.h ****         return false;
 146:../../libDaisy/src/util/FIFO.h ****     }
 147:../../libDaisy/src/util/FIFO.h **** 
 148:../../libDaisy/src/util/FIFO.h ****     /** Returns the number of elements in the buffer that are equal to the provided value */
 149:../../libDaisy/src/util/FIFO.h ****     size_t CountEqualTo(const T& element)
 150:../../libDaisy/src/util/FIFO.h ****     {
 151:../../libDaisy/src/util/FIFO.h ****         size_t result = 0;
 152:../../libDaisy/src/util/FIFO.h ****         size_t idx    = bufferOut_;
 153:../../libDaisy/src/util/FIFO.h ****         while(idx != bufferIn_)
 154:../../libDaisy/src/util/FIFO.h ****         {
 155:../../libDaisy/src/util/FIFO.h ****             if(buffer_[idx] == element)
 156:../../libDaisy/src/util/FIFO.h ****                 result++;
 157:../../libDaisy/src/util/FIFO.h ****             idx++;
 158:../../libDaisy/src/util/FIFO.h ****             if(idx >= bufferSize_)
 159:../../libDaisy/src/util/FIFO.h ****                 idx -= bufferSize_;
 160:../../libDaisy/src/util/FIFO.h ****         }
 161:../../libDaisy/src/util/FIFO.h ****         return result;
 162:../../libDaisy/src/util/FIFO.h ****     }
 163:../../libDaisy/src/util/FIFO.h **** 
 164:../../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is empty */
 165:../../libDaisy/src/util/FIFO.h ****     bool IsEmpty() const { return bufferIn_ == bufferOut_; }
 166:../../libDaisy/src/util/FIFO.h **** 
 167:../../libDaisy/src/util/FIFO.h ****     /** returns true, if the buffer is Full */
 168:../../libDaisy/src/util/FIFO.h ****     bool IsFull() const { return GetNumElements() == bufferSize_ - 1; }
 169:../../libDaisy/src/util/FIFO.h **** 
 170:../../libDaisy/src/util/FIFO.h ****     /** returns the number of elements in the buffer */
 171:../../libDaisy/src/util/FIFO.h ****     size_t GetNumElements() const
 172:../../libDaisy/src/util/FIFO.h ****     {
 173:../../libDaisy/src/util/FIFO.h ****         int32_t numElements = bufferIn_ - bufferOut_;
 174:../../libDaisy/src/util/FIFO.h ****         if(numElements < 0)
 175:../../libDaisy/src/util/FIFO.h ****             numElements += bufferSize_;
 176:../../libDaisy/src/util/FIFO.h ****         return size_t(numElements);
 177:../../libDaisy/src/util/FIFO.h ****     }
 178:../../libDaisy/src/util/FIFO.h **** 
 179:../../libDaisy/src/util/FIFO.h ****     /** inserts an element "idx" positions behind the first element and returns true if successful 
 180:../../libDaisy/src/util/FIFO.h ****     bool Insert(size_t idx, const T& element)
 181:../../libDaisy/src/util/FIFO.h ****     {
 182:../../libDaisy/src/util/FIFO.h ****         if(idx > GetNumElements())
 183:../../libDaisy/src/util/FIFO.h ****             return false;
 184:../../libDaisy/src/util/FIFO.h ****         if(IsFull())
 185:../../libDaisy/src/util/FIFO.h ****             return false;
 186:../../libDaisy/src/util/FIFO.h ****         if(idx == GetNumElements())
 187:../../libDaisy/src/util/FIFO.h ****         {
 188:../../libDaisy/src/util/FIFO.h ****             PushBack(element);
 189:../../libDaisy/src/util/FIFO.h ****             return true;
 190:../../libDaisy/src/util/FIFO.h ****         }
 191:../../libDaisy/src/util/FIFO.h ****         // copy last element
 192:../../libDaisy/src/util/FIFO.h ****         PushBack(Back());
 193:../../libDaisy/src/util/FIFO.h ****         // move remaining elements: n => n+1
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 15


 194:../../libDaisy/src/util/FIFO.h ****         for(int i = GetNumElements() - 2; i > int(idx); i--)
 195:../../libDaisy/src/util/FIFO.h ****             (*this)[i] = (*this)[i - 1];
 196:../../libDaisy/src/util/FIFO.h ****         // insert element
 197:../../libDaisy/src/util/FIFO.h ****         (*this)[idx] = element;
 198:../../libDaisy/src/util/FIFO.h ****         return true;
 199:../../libDaisy/src/util/FIFO.h ****     }
 200:../../libDaisy/src/util/FIFO.h **** 
 201:../../libDaisy/src/util/FIFO.h ****     /** removes the element "idx" positions behind the first element 
 202:../../libDaisy/src/util/FIFO.h ****      *  and returns true if successful */
 203:../../libDaisy/src/util/FIFO.h ****     bool Remove(size_t idx)
 204:../../libDaisy/src/util/FIFO.h ****     {
 205:../../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 206:../../libDaisy/src/util/FIFO.h ****             return false;
 207:../../libDaisy/src/util/FIFO.h **** 
 208:../../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 209:../../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 210:../../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 211:../../libDaisy/src/util/FIFO.h ****         size_t nextIndex = index + 1;
 212:../../libDaisy/src/util/FIFO.h ****         if(nextIndex >= bufferSize_)
 213:../../libDaisy/src/util/FIFO.h ****             nextIndex -= bufferSize_;
 214:../../libDaisy/src/util/FIFO.h **** 
 215:../../libDaisy/src/util/FIFO.h ****         while(nextIndex != bufferIn_)
 216:../../libDaisy/src/util/FIFO.h ****         {
 217:../../libDaisy/src/util/FIFO.h ****             buffer_[index] = buffer_[nextIndex];
 218:../../libDaisy/src/util/FIFO.h ****             index++;
 219:../../libDaisy/src/util/FIFO.h ****             nextIndex++;
 220:../../libDaisy/src/util/FIFO.h ****             if(index >= bufferSize_)
 221:../../libDaisy/src/util/FIFO.h ****                 index -= bufferSize_;
 222:../../libDaisy/src/util/FIFO.h ****             if(nextIndex >= bufferSize_)
 223:../../libDaisy/src/util/FIFO.h ****                 nextIndex -= bufferSize_;
 224:../../libDaisy/src/util/FIFO.h ****         }
 225:../../libDaisy/src/util/FIFO.h **** 
 226:../../libDaisy/src/util/FIFO.h ****         int32_t nextBufferIn = int32_t(bufferIn_) - 1;
 227:../../libDaisy/src/util/FIFO.h ****         if(nextBufferIn < 0)
 228:../../libDaisy/src/util/FIFO.h ****             nextBufferIn += bufferSize_;
 229:../../libDaisy/src/util/FIFO.h ****         bufferIn_ = size_t(nextBufferIn);
 230:../../libDaisy/src/util/FIFO.h **** 
 231:../../libDaisy/src/util/FIFO.h ****         return true;
 232:../../libDaisy/src/util/FIFO.h ****     }
 233:../../libDaisy/src/util/FIFO.h **** 
 234:../../libDaisy/src/util/FIFO.h ****     /** removes all elements from the buffer for which
 235:../../libDaisy/src/util/FIFO.h ****         (buffer(index) == element) returns true and returns the number of
 236:../../libDaisy/src/util/FIFO.h ****         elements that were removed. */
 237:../../libDaisy/src/util/FIFO.h ****     size_t RemoveAllEqualTo(const T& element)
 238:../../libDaisy/src/util/FIFO.h ****     {
 239:../../libDaisy/src/util/FIFO.h ****         size_t numRemoved = 0;
 240:../../libDaisy/src/util/FIFO.h ****         int    idx        = GetNumElements() - 1;
 241:../../libDaisy/src/util/FIFO.h ****         while(idx >= 0)
 242:../../libDaisy/src/util/FIFO.h ****         {
 243:../../libDaisy/src/util/FIFO.h ****             if((*this)[idx] == element)
 244:../../libDaisy/src/util/FIFO.h ****             {
 245:../../libDaisy/src/util/FIFO.h ****                 numRemoved++;
 246:../../libDaisy/src/util/FIFO.h ****                 Remove(idx);
 247:../../libDaisy/src/util/FIFO.h ****                 // was that the last element?
 248:../../libDaisy/src/util/FIFO.h ****                 if(idx == int(GetNumElements()) - 1)
 249:../../libDaisy/src/util/FIFO.h ****                     idx--;
 250:../../libDaisy/src/util/FIFO.h ****             }
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 16


 251:../../libDaisy/src/util/FIFO.h ****             else
 252:../../libDaisy/src/util/FIFO.h ****                 idx--;
 253:../../libDaisy/src/util/FIFO.h ****         }
 254:../../libDaisy/src/util/FIFO.h ****         return numRemoved;
 255:../../libDaisy/src/util/FIFO.h ****     }
 256:../../libDaisy/src/util/FIFO.h **** 
 257:../../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 258:../../libDaisy/src/util/FIFO.h ****     T& operator[](size_t idx)
 259:../../libDaisy/src/util/FIFO.h ****     {
 260:../../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 261:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 262:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 263:../../libDaisy/src/util/FIFO.h **** 
 264:../../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 265:../../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 266:../../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 267:../../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 268:../../libDaisy/src/util/FIFO.h ****     }
 269:../../libDaisy/src/util/FIFO.h **** 
 270:../../libDaisy/src/util/FIFO.h ****     /** returns the element "idx" positions behind the first element */
 271:../../libDaisy/src/util/FIFO.h ****     const T& operator[](size_t idx) const
 272:../../libDaisy/src/util/FIFO.h ****     {
 273:../../libDaisy/src/util/FIFO.h ****         if(idx >= GetNumElements())
 274:../../libDaisy/src/util/FIFO.h ****             // invalid, but better not pass a temporary T() object as a reference...
 275:../../libDaisy/src/util/FIFO.h ****             return buffer_[0];
 276:../../libDaisy/src/util/FIFO.h **** 
 277:../../libDaisy/src/util/FIFO.h ****         size_t index = bufferOut_ + idx;
 278:../../libDaisy/src/util/FIFO.h ****         if(index >= bufferSize_)
 279:../../libDaisy/src/util/FIFO.h ****             index -= bufferSize_;
 280:../../libDaisy/src/util/FIFO.h ****         return buffer_[index];
 281:../../libDaisy/src/util/FIFO.h ****     }
 282:../../libDaisy/src/util/FIFO.h **** 
 283:../../libDaisy/src/util/FIFO.h ****     /** returns the total capacity */
 284:../../libDaisy/src/util/FIFO.h ****     size_t GetCapacity() const { return bufferSize_ - 1; }
 285:../../libDaisy/src/util/FIFO.h **** 
 286:../../libDaisy/src/util/FIFO.h ****   private:
 287:../../libDaisy/src/util/FIFO.h ****     FIFOBase(const FIFOBase<T>&) {} // non copyable
 288:../../libDaisy/src/util/FIFO.h **** 
 289:../../libDaisy/src/util/FIFO.h ****   private:
 290:../../libDaisy/src/util/FIFO.h ****     T*           buffer_;
 291:../../libDaisy/src/util/FIFO.h ****     const size_t bufferSize_;
 292:../../libDaisy/src/util/FIFO.h ****     size_t       bufferIn_;
 293:../../libDaisy/src/util/FIFO.h ****     size_t       bufferOut_;
 294:../../libDaisy/src/util/FIFO.h **** };
 295:../../libDaisy/src/util/FIFO.h **** 
 296:../../libDaisy/src/util/FIFO.h **** /** A simple FIFO ring buffer with a fixed size. */
 297:../../libDaisy/src/util/FIFO.h **** template <typename T, size_t capacity>
 298:../../libDaisy/src/util/FIFO.h **** class FIFO : public FIFOBase<T>
  86              		.loc 7 298 7 view .LVU11
  87              	.LBB365:
  88              	.LBI365:
  42:../../libDaisy/src/util/FIFO.h **** 
  89              		.loc 7 42 5 view .LVU12
  42:../../libDaisy/src/util/FIFO.h **** 
  90              		.loc 7 42 5 is_stmt 0 view .LVU13
  91              	.LBE365:
  92              	.LBE364:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 17


  93              	.LBB366:
  94              	.LBI366:
  95              		.file 8 "../../libDaisy/src/hid/midi_parser.h"
   1:../../libDaisy/src/hid/midi_parser.h **** #pragma once
   2:../../libDaisy/src/hid/midi_parser.h **** #ifndef DSY_MIDI_PARSER_H
   3:../../libDaisy/src/hid/midi_parser.h **** #define DSY_MIDI_PARSER_H
   4:../../libDaisy/src/hid/midi_parser.h **** 
   5:../../libDaisy/src/hid/midi_parser.h **** #include <stdint.h>
   6:../../libDaisy/src/hid/midi_parser.h **** #include <stdlib.h>
   7:../../libDaisy/src/hid/midi_parser.h **** #include "hid/MidiEvent.h"
   8:../../libDaisy/src/hid/midi_parser.h **** 
   9:../../libDaisy/src/hid/midi_parser.h **** namespace daisy
  10:../../libDaisy/src/hid/midi_parser.h **** {
  11:../../libDaisy/src/hid/midi_parser.h **** /** @brief   Utility class for parsing raw byte streams into MIDI messages
  12:../../libDaisy/src/hid/midi_parser.h ****  *  @details Implemented as a state machine designed to parse one byte at a time
  13:../../libDaisy/src/hid/midi_parser.h ****  *  @ingroup midi
  14:../../libDaisy/src/hid/midi_parser.h ****  */
  15:../../libDaisy/src/hid/midi_parser.h **** class MidiParser
  16:../../libDaisy/src/hid/midi_parser.h **** {
  17:../../libDaisy/src/hid/midi_parser.h ****   public:
  18:../../libDaisy/src/hid/midi_parser.h ****     MidiParser(){};
  19:../../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
  96              		.loc 8 19 5 is_stmt 1 view .LVU14
  97              		.loc 8 19 5 is_stmt 0 view .LVU15
  98              	.LBE366:
  99              	.LBB367:
 100              	.LBI367:
 101              		.file 9 "../../libDaisy/src/hid/usb_midi.h"
   1:../../libDaisy/src/hid/usb_midi.h **** #pragma once
   2:../../libDaisy/src/hid/usb_midi.h **** #ifndef __DSY_MIDIUSBTRANSPORT_H__
   3:../../libDaisy/src/hid/usb_midi.h **** #define __DSY_MIDIUSBTRANSPORT_H__
   4:../../libDaisy/src/hid/usb_midi.h **** 
   5:../../libDaisy/src/hid/usb_midi.h **** #include "hid/usb.h"
   6:../../libDaisy/src/hid/usb_midi.h **** #include "sys/system.h"
   7:../../libDaisy/src/hid/usb_midi.h **** #include "util/ringbuffer.h"
   8:../../libDaisy/src/hid/usb_midi.h **** 
   9:../../libDaisy/src/hid/usb_midi.h **** namespace daisy
  10:../../libDaisy/src/hid/usb_midi.h **** {
  11:../../libDaisy/src/hid/usb_midi.h **** /** @brief USB Transport for MIDI
  12:../../libDaisy/src/hid/usb_midi.h ****  *  @ingroup midi
  13:../../libDaisy/src/hid/usb_midi.h ****  */
  14:../../libDaisy/src/hid/usb_midi.h **** class MidiUsbTransport
  15:../../libDaisy/src/hid/usb_midi.h **** {
  16:../../libDaisy/src/hid/usb_midi.h ****   public:
  17:../../libDaisy/src/hid/usb_midi.h ****     typedef void (*MidiRxParseCallback)(uint8_t* data,
  18:../../libDaisy/src/hid/usb_midi.h ****                                         size_t   size,
  19:../../libDaisy/src/hid/usb_midi.h ****                                         void*    context);
  20:../../libDaisy/src/hid/usb_midi.h **** 
  21:../../libDaisy/src/hid/usb_midi.h ****     struct Config
  22:../../libDaisy/src/hid/usb_midi.h ****     {
  23:../../libDaisy/src/hid/usb_midi.h ****         enum Periph
  24:../../libDaisy/src/hid/usb_midi.h ****         {
  25:../../libDaisy/src/hid/usb_midi.h ****             INTERNAL = 0,
  26:../../libDaisy/src/hid/usb_midi.h ****             EXTERNAL
  27:../../libDaisy/src/hid/usb_midi.h ****         };
  28:../../libDaisy/src/hid/usb_midi.h **** 
  29:../../libDaisy/src/hid/usb_midi.h ****         Periph periph;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 18


  30:../../libDaisy/src/hid/usb_midi.h **** 
  31:../../libDaisy/src/hid/usb_midi.h ****         /**
  32:../../libDaisy/src/hid/usb_midi.h ****          * When sending MIDI messages immediately back-to-back in user code,
  33:../../libDaisy/src/hid/usb_midi.h ****          * sometimes the USB CDC driver is still "busy".
  34:../../libDaisy/src/hid/usb_midi.h ****          *
  35:../../libDaisy/src/hid/usb_midi.h ****          * This option configures the number of times to retry a Tx after
  36:../../libDaisy/src/hid/usb_midi.h ****          * delaying for 100 microseconds (default = 3 retries).
  37:../../libDaisy/src/hid/usb_midi.h ****          *
  38:../../libDaisy/src/hid/usb_midi.h ****          * If you set this to zero, Tx will not retry so the attempt will block
  39:../../libDaisy/src/hid/usb_midi.h ****          * for slightly less time, but transmit can fail if the Tx state is busy.
  40:../../libDaisy/src/hid/usb_midi.h ****          */
  41:../../libDaisy/src/hid/usb_midi.h ****         uint8_t tx_retry_count;
  42:../../libDaisy/src/hid/usb_midi.h **** 
  43:../../libDaisy/src/hid/usb_midi.h ****         Config() : periph(INTERNAL), tx_retry_count(3) {}
  44:../../libDaisy/src/hid/usb_midi.h ****     };
  45:../../libDaisy/src/hid/usb_midi.h **** 
  46:../../libDaisy/src/hid/usb_midi.h ****     void Init(Config config);
  47:../../libDaisy/src/hid/usb_midi.h **** 
  48:../../libDaisy/src/hid/usb_midi.h ****     void StartRx(MidiRxParseCallback callback, void* context);
  49:../../libDaisy/src/hid/usb_midi.h ****     bool RxActive();
  50:../../libDaisy/src/hid/usb_midi.h ****     void FlushRx();
  51:../../libDaisy/src/hid/usb_midi.h ****     void Tx(uint8_t* buffer, size_t size);
  52:../../libDaisy/src/hid/usb_midi.h **** 
  53:../../libDaisy/src/hid/usb_midi.h ****     class Impl;
  54:../../libDaisy/src/hid/usb_midi.h **** 
  55:../../libDaisy/src/hid/usb_midi.h ****     MidiUsbTransport() : pimpl_(nullptr) {}
  56:../../libDaisy/src/hid/usb_midi.h ****     ~MidiUsbTransport() {}
 102              		.loc 9 56 5 is_stmt 1 view .LVU16
 103              		.loc 9 56 5 is_stmt 0 view .LVU17
 104              	.LBE367:
 105              		.loc 6 156 21 view .LVU18
 106 0000 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE5275:
 110              		.weak	_ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED1Ev
 111              		.thumb_set _ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED1Ev,_ZN5daisy11MidiHandlerINS_16MidiUsbT
 112 0002 00BF     		.section	.text._Z11initButtonsv,"ax",%progbits
 113              		.align	1
 114              		.p2align 2,,3
 115              		.global	_Z11initButtonsv
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 120              	_Z11initButtonsv:
 121              	.LFB4682:
 122              		.file 10 "MIDIController.cpp"
   1:MIDIController.cpp **** #include "daisy_seed.h"
   2:MIDIController.cpp **** #include "daisysp.h"
   3:MIDIController.cpp **** #include "hid/midi.h"
   4:MIDIController.cpp **** #include <random>
   5:MIDIController.cpp **** // #include "hid/midi_message.h"
   6:MIDIController.cpp **** 
   7:MIDIController.cpp **** using namespace daisy;
   8:MIDIController.cpp **** using namespace daisy::seed;
   9:MIDIController.cpp **** using namespace daisysp;
  10:MIDIController.cpp **** 
  11:MIDIController.cpp **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 19


  12:MIDIController.cpp **** // #define ADXL345_ADDR 0x53
  13:MIDIController.cpp **** // #define DATAX0 0x32
  14:MIDIController.cpp **** // #define POWER_CTL 0x2D
  15:MIDIController.cpp **** // #define SCALE_FACTOR 0.004 
  16:MIDIController.cpp **** // #define DATA_FORMAT 0x31 
  17:MIDIController.cpp **** 
  18:MIDIController.cpp **** 
  19:MIDIController.cpp **** DaisySeed hw;
  20:MIDIController.cpp **** MidiUsbHandler midi;
  21:MIDIController.cpp **** // I2CHandle i2c;
  22:MIDIController.cpp **** // daisy::GPIO button;
  23:MIDIController.cpp **** 
  24:MIDIController.cpp **** GPIO button1;
  25:MIDIController.cpp **** GPIO button2;
  26:MIDIController.cpp **** GPIO button3;
  27:MIDIController.cpp **** 
  28:MIDIController.cpp **** GPIO LED_R1;
  29:MIDIController.cpp **** GPIO LED_R2;
  30:MIDIController.cpp **** GPIO LED_W1;
  31:MIDIController.cpp **** GPIO LED_W2;
  32:MIDIController.cpp **** 
  33:MIDIController.cpp **** // GPIO accelerometer1_VCC;
  34:MIDIController.cpp **** // GPIO accelerometer1_SC;
  35:MIDIController.cpp **** // GPIO accelerometer1_SDA;
  36:MIDIController.cpp **** // GPIO accelerometer1_SCL;
  37:MIDIController.cpp **** 
  38:MIDIController.cpp **** GPIO encoderA;
  39:MIDIController.cpp **** GPIO encoderB;
  40:MIDIController.cpp **** int encoderPos = 0;
  41:MIDIController.cpp **** int lastEncA;
  42:MIDIController.cpp **** int lastEncB;
  43:MIDIController.cpp **** 
  44:MIDIController.cpp **** AdcChannelConfig fader1cfg;
  45:MIDIController.cpp **** AdcChannelConfig fader2cfg;
  46:MIDIController.cpp **** AdcChannelConfig fader3cfg;
  47:MIDIController.cpp **** AdcChannelConfig knob1cfg;
  48:MIDIController.cpp **** AdcChannelConfig knob2cfg;
  49:MIDIController.cpp **** AdcChannelConfig knob3cfg;
  50:MIDIController.cpp **** void initButtons() {
 123              		.loc 10 50 20 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
  51:MIDIController.cpp ****     // Initialize button
  52:MIDIController.cpp ****     button1.Init(D0, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 127              		.loc 10 52 5 view .LVU20
  50:MIDIController.cpp ****     // Initialize button
 128              		.loc 10 50 20 is_stmt 0 view .LVU21
 129 0000 10B5     		push	{r4, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133              		.loc 10 52 17 view .LVU22
 134 0002 0E49     		ldr	r1, .L6
  50:MIDIController.cpp ****     // Initialize button
 135              		.loc 10 50 20 view .LVU23
 136 0004 82B0     		sub	sp, sp, #8
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 20


 137              		.cfi_def_cfa_offset 16
 138              		.loc 10 52 17 view .LVU24
 139 0006 0024     		movs	r4, #0
 140 0008 0123     		movs	r3, #1
 141 000a 0D48     		ldr	r0, .L6+4
 142 000c 2246     		mov	r2, r4
 143 000e 0968     		ldr	r1, [r1]
 144 0010 0094     		str	r4, [sp]
 145 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 146              	.LVL2:
  53:MIDIController.cpp ****     button2.Init(D1, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 147              		.loc 10 53 5 is_stmt 1 view .LVU25
 148              		.loc 10 53 17 is_stmt 0 view .LVU26
 149 0016 0B49     		ldr	r1, .L6+8
 150 0018 2246     		mov	r2, r4
 151 001a 0123     		movs	r3, #1
 152 001c 0968     		ldr	r1, [r1]
 153 001e 0A48     		ldr	r0, .L6+12
 154 0020 0094     		str	r4, [sp]
 155 0022 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 156              	.LVL3:
  54:MIDIController.cpp ****     button3.Init(D2, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 157              		.loc 10 54 5 is_stmt 1 view .LVU27
 158              		.loc 10 54 17 is_stmt 0 view .LVU28
 159 0026 0949     		ldr	r1, .L6+16
 160 0028 0123     		movs	r3, #1
 161 002a 2246     		mov	r2, r4
 162 002c 0968     		ldr	r1, [r1]
 163 002e 0848     		ldr	r0, .L6+20
 164 0030 0094     		str	r4, [sp]
 165 0032 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 166              	.LVL4:
  55:MIDIController.cpp ****     // my_fader.Init(A0, GPIO::Mode::ANALOG);
  56:MIDIController.cpp ****     // GPIO my_button;
  57:MIDIController.cpp **** }
 167              		.loc 10 57 1 view .LVU29
 168 0036 02B0     		add	sp, sp, #8
 169              		.cfi_def_cfa_offset 8
 170              		@ sp needed
 171 0038 10BD     		pop	{r4, pc}
 172              	.L7:
 173 003a 00BF     		.align	2
 174              	.L6:
 175 003c 00000000 		.word	.LANCHOR0
 176 0040 00000000 		.word	.LANCHOR1
 177 0044 00000000 		.word	.LANCHOR2
 178 0048 00000000 		.word	.LANCHOR3
 179 004c 00000000 		.word	.LANCHOR4
 180 0050 00000000 		.word	.LANCHOR5
 181              		.cfi_endproc
 182              	.LFE4682:
 184              		.section	.text._Z8testLEDsv,"ax",%progbits
 185              		.align	1
 186              		.p2align 2,,3
 187              		.global	_Z8testLEDsv
 188              		.syntax unified
 189              		.thumb
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 21


 190              		.thumb_func
 192              	_Z8testLEDsv:
 193              	.LFB4683:
  58:MIDIController.cpp **** 
  59:MIDIController.cpp **** void testLEDs(){
 194              		.loc 10 59 16 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
  60:MIDIController.cpp ****     LED_R1.Init(D5, GPIO::Mode::OUTPUT);
 198              		.loc 10 60 5 view .LVU31
  59:MIDIController.cpp ****     LED_R1.Init(D5, GPIO::Mode::OUTPUT);
 199              		.loc 10 59 16 is_stmt 0 view .LVU32
 200 0000 10B5     		push	{r4, lr}
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
 204              		.loc 10 60 16 view .LVU33
 205 0002 1249     		ldr	r1, .L10
  59:MIDIController.cpp ****     LED_R1.Init(D5, GPIO::Mode::OUTPUT);
 206              		.loc 10 59 16 view .LVU34
 207 0004 82B0     		sub	sp, sp, #8
 208              		.cfi_def_cfa_offset 16
 209              		.loc 10 60 16 view .LVU35
 210 0006 0024     		movs	r4, #0
 211 0008 0122     		movs	r2, #1
 212 000a 1148     		ldr	r0, .L10+4
 213 000c 2346     		mov	r3, r4
 214 000e 0968     		ldr	r1, [r1]
 215 0010 0094     		str	r4, [sp]
 216 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 217              	.LVL5:
  61:MIDIController.cpp ****     LED_R2.Init(D6, GPIO::Mode::OUTPUT);
 218              		.loc 10 61 5 is_stmt 1 view .LVU36
 219              		.loc 10 61 16 is_stmt 0 view .LVU37
 220 0016 0F49     		ldr	r1, .L10+8
 221 0018 2346     		mov	r3, r4
 222 001a 0122     		movs	r2, #1
 223 001c 0968     		ldr	r1, [r1]
 224 001e 0E48     		ldr	r0, .L10+12
 225 0020 0094     		str	r4, [sp]
 226 0022 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 227              	.LVL6:
  62:MIDIController.cpp ****     LED_W1.Init(D7, GPIO::Mode::OUTPUT);
 228              		.loc 10 62 5 is_stmt 1 view .LVU38
 229              		.loc 10 62 16 is_stmt 0 view .LVU39
 230 0026 0D49     		ldr	r1, .L10+16
 231 0028 2346     		mov	r3, r4
 232 002a 0122     		movs	r2, #1
 233 002c 0968     		ldr	r1, [r1]
 234 002e 0C48     		ldr	r0, .L10+20
 235 0030 0094     		str	r4, [sp]
 236 0032 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 237              	.LVL7:
  63:MIDIController.cpp ****     LED_W2.Init(D8, GPIO::Mode::OUTPUT);
 238              		.loc 10 63 5 is_stmt 1 view .LVU40
 239              		.loc 10 63 16 is_stmt 0 view .LVU41
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 22


 240 0036 0B49     		ldr	r1, .L10+24
 241 0038 2346     		mov	r3, r4
 242 003a 0122     		movs	r2, #1
 243 003c 0968     		ldr	r1, [r1]
 244 003e 0A48     		ldr	r0, .L10+28
 245 0040 0094     		str	r4, [sp]
 246 0042 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 247              	.LVL8:
  64:MIDIController.cpp ****     // LED_R1.Write(true); // turn on the LED
  65:MIDIController.cpp ****     // LED_R2.Write(true); // turn on the LED
  66:MIDIController.cpp ****     // LED_W1.Write(true); // turn on the LED
  67:MIDIController.cpp ****     // LED_W2.Write(true); // turn on the LED
  68:MIDIController.cpp **** }
 248              		.loc 10 68 1 view .LVU42
 249 0046 02B0     		add	sp, sp, #8
 250              		.cfi_def_cfa_offset 8
 251              		@ sp needed
 252 0048 10BD     		pop	{r4, pc}
 253              	.L11:
 254 004a 00BF     		.align	2
 255              	.L10:
 256 004c 00000000 		.word	.LANCHOR6
 257 0050 00000000 		.word	.LANCHOR7
 258 0054 00000000 		.word	.LANCHOR8
 259 0058 00000000 		.word	.LANCHOR9
 260 005c 00000000 		.word	.LANCHOR10
 261 0060 00000000 		.word	.LANCHOR11
 262 0064 00000000 		.word	.LANCHOR12
 263 0068 00000000 		.word	.LANCHOR13
 264              		.cfi_endproc
 265              	.LFE4683:
 267              		.section	.text._Z11InitEncoderv,"ax",%progbits
 268              		.align	1
 269              		.p2align 2,,3
 270              		.global	_Z11InitEncoderv
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	_Z11InitEncoderv:
 276              	.LFB4684:
  69:MIDIController.cpp **** 
  70:MIDIController.cpp **** 
  71:MIDIController.cpp **** 
  72:MIDIController.cpp **** // void InitI2C() {
  73:MIDIController.cpp **** //     // Initialize I2C
  74:MIDIController.cpp **** 
  75:MIDIController.cpp **** 
  76:MIDIController.cpp **** 
  77:MIDIController.cpp **** 
  78:MIDIController.cpp **** //     static constexpr I2CHandle::Config i2c_config = {
  79:MIDIController.cpp **** //         I2CHandle::Config::Peripheral::I2C_1, {{DSY_GPIOB, 8}, {DSY_GPIOB, 9}},
  80:MIDIController.cpp **** // 		I2CHandle::Config::Speed::I2C_100KHZ,  //3.3v does mushy square waves above this.
  81:MIDIController.cpp **** // 		I2CHandle::Config::Mode::I2C_MASTER
  82:MIDIController.cpp **** //         };
  83:MIDIController.cpp **** 
  84:MIDIController.cpp **** 
  85:MIDIController.cpp **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 23


  86:MIDIController.cpp **** 
  87:MIDIController.cpp **** //     // // I2CHandle::Config i2c_config;
  88:MIDIController.cpp **** //     // i2c_config.periph = I2CHandle::Config::Peripheral::I2C_1;
  89:MIDIController.cpp **** //     // // i2c_config.pin_config.scl = hw.GetPin(D11);
  90:MIDIController.cpp **** //     // // i2c_config.pin_config.sda = hw.GetPin(D12);
  91:MIDIController.cpp **** //     // // i2c_config.speed = I2CHandle::Config::Speed::I2C_400KHZ;
  92:MIDIController.cpp **** //     // hw.i2c_1.Init(i2c_config);
  93:MIDIController.cpp **** // }
  94:MIDIController.cpp **** 
  95:MIDIController.cpp **** // void InitI2C()
  96:MIDIController.cpp **** // {
  97:MIDIController.cpp **** //     I2CHandle::Config i2c_cfg;
  98:MIDIController.cpp **** //     i2c_cfg.periph = I2CHandle::Config::Peripheral::I2C_1; // Use I2C1
  99:MIDIController.cpp **** //     i2c_cfg.speed  = I2CHandle::Config::Speed::I2C_400KHZ; // Fast mode
 100:MIDIController.cpp **** //     i2c_cfg.pin_config.scl = Pin(PORTB, 8);                // Default SCL
 101:MIDIController.cpp **** //     i2c_cfg.pin_config.sda = Pin(PORTB, 9);                // Default SDA
 102:MIDIController.cpp **** //     i2c.Init(i2c_cfg);
 103:MIDIController.cpp **** // }
 104:MIDIController.cpp **** 
 105:MIDIController.cpp **** 
 106:MIDIController.cpp **** // void InitAccelerometer() {
 107:MIDIController.cpp **** //     // turns on the accelerometer
 108:MIDIController.cpp **** //     accelerometer1_VCC.Init(D14, GPIO::Mode::OUTPUT);
 109:MIDIController.cpp **** //     accelerometer1_SC.Init(D13, GPIO::Mode::OUTPUT);
 110:MIDIController.cpp **** //     accelerometer1_VCC.Write(true); // turn on the accelerometer
 111:MIDIController.cpp **** //     accelerometer1_SC.Write(true); // put the ADXL345 in I2C mode
 112:MIDIController.cpp **** //     // accelerometer1_SDA.Init(D12, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 113:MIDIController.cpp **** //     // accelerometer1_SCL.Init(D11, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 114:MIDIController.cpp **** //     // Power sequence
 115:MIDIController.cpp **** //     uint8_t powerReg = 0x08;  // Measurement mode
 116:MIDIController.cpp **** //     uint8_t formatReg = 0x08;  // Full resolution, ±2g
 117:MIDIController.cpp ****     
 118:MIDIController.cpp **** //     // Wait for power-up
 119:MIDIController.cpp **** //     hw.DelayMs(100);
 120:MIDIController.cpp ****     
 121:MIDIController.cpp **** //     // Set power control - put in measurement mode
 122:MIDIController.cpp **** //     if(i2c.TransmitBlocking(ADXL345_ADDR, POWER_CTL, &powerReg, 1, 1000) != I2CHandle::Result::O
 123:MIDIController.cpp **** //         hw.PrintLine("Failed to set power mode");
 124:MIDIController.cpp **** //         return;
 125:MIDIController.cpp **** //     }
 126:MIDIController.cpp ****     
 127:MIDIController.cpp **** //     // Set data format
 128:MIDIController.cpp **** //     if(i2c.TransmitBlocking(ADXL345_ADDR, DATA_FORMAT, &formatReg, 1, 1000) != I2CHandle::Result
 129:MIDIController.cpp **** //         hw.PrintLine("Failed to set data format");
 130:MIDIController.cpp **** //         return;
 131:MIDIController.cpp **** //     }
 132:MIDIController.cpp ****     
 133:MIDIController.cpp **** //     hw.PrintLine("ADXL345 Initialized");
 134:MIDIController.cpp **** // }
 135:MIDIController.cpp **** 
 136:MIDIController.cpp **** // void InitAccelerometer() {
 137:MIDIController.cpp **** //     // Power and GPIO setup remains the same
 138:MIDIController.cpp **** //     accelerometer1_VCC.Init(D14, GPIO::Mode::OUTPUT);
 139:MIDIController.cpp **** //     accelerometer1_SC.Init(D13, GPIO::Mode::OUTPUT);
 140:MIDIController.cpp **** //     accelerometer1_VCC.Write(true);
 141:MIDIController.cpp **** //     accelerometer1_SC.Write(true);
 142:MIDIController.cpp ****     
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 24


 143:MIDIController.cpp **** //     hw.DelayMs(200); // Power-up delay
 144:MIDIController.cpp **** 
 145:MIDIController.cpp **** 
 146:MIDIController.cpp **** //     // Verify device is responding
 147:MIDIController.cpp **** //     uint8_t whoami[2] = {0x00, 0x00};  // Device ID register
 148:MIDIController.cpp **** //     if(i2c.TransmitBlocking(ADXL345_ADDR, whoami, 1, 1000) != I2CHandle::Result::OK) {
 149:MIDIController.cpp **** //         hw.PrintLine("Device not responding at address 0x%x", ADXL345_ADDR);
 150:MIDIController.cpp **** //         return;
 151:MIDIController.cpp **** //     }
 152:MIDIController.cpp **** 
 153:MIDIController.cpp **** //     // Setup power control register
 154:MIDIController.cpp **** //     uint8_t power_data[2] = {POWER_CTL, 0x08}; // Register address + data
 155:MIDIController.cpp **** //     if(i2c.TransmitBlocking(ADXL345_ADDR, power_data, 2, 1000) != I2CHandle::Result::OK) {
 156:MIDIController.cpp **** //         hw.PrintLine("Failed to set power mode");
 157:MIDIController.cpp **** //         return;
 158:MIDIController.cpp **** //     }
 159:MIDIController.cpp **** 
 160:MIDIController.cpp **** //     // Setup data format register
 161:MIDIController.cpp **** //     uint8_t format_data[2] = {DATA_FORMAT, 0x08}; // Register address + data
 162:MIDIController.cpp **** //     if(i2c.TransmitBlocking(ADXL345_ADDR, format_data, 2, 1000) != I2CHandle::Result::OK) {
 163:MIDIController.cpp **** //         hw.PrintLine("Failed to set data format");
 164:MIDIController.cpp **** //         return;
 165:MIDIController.cpp **** //     }
 166:MIDIController.cpp **** 
 167:MIDIController.cpp **** //     hw.PrintLine("ADXL345 Initialized");
 168:MIDIController.cpp **** // }
 169:MIDIController.cpp **** 
 170:MIDIController.cpp **** // void ScanI2C() {
 171:MIDIController.cpp **** //     hw.PrintLine("Scanning I2C bus...");
 172:MIDIController.cpp ****     
 173:MIDIController.cpp **** //     for(uint8_t addr = 1; addr < 128; addr++) {
 174:MIDIController.cpp **** //         uint8_t test_data = 0x00;
 175:MIDIController.cpp **** //         // Try both shifted and unshifted addresses
 176:MIDIController.cpp **** //         if(i2c.TransmitBlocking(addr << 1, &test_data, 1, 100) == I2CHandle::Result::OK) {
 177:MIDIController.cpp **** //             hw.PrintLine("Device found at address: 0x%x (7-bit) / 0x%x (8-bit)", 
 178:MIDIController.cpp **** //                         addr, addr << 1);
 179:MIDIController.cpp **** //         }
 180:MIDIController.cpp **** //     }
 181:MIDIController.cpp **** 
 182:MIDIController.cpp **** //     hw.PrintLine("I2C scan complete");
 183:MIDIController.cpp **** // }
 184:MIDIController.cpp **** 
 185:MIDIController.cpp **** // void ScanI2C() {
 186:MIDIController.cpp **** //     hw.PrintLine("Starting I2C bus scan...");
 187:MIDIController.cpp **** //     hw.PrintLine("Note: Addresses shown in hex format");
 188:MIDIController.cpp ****     
 189:MIDIController.cpp **** //     uint8_t devices_found = 0;
 190:MIDIController.cpp ****     
 191:MIDIController.cpp **** //     for(uint8_t addr = 1; addr < 128; addr++) {
 192:MIDIController.cpp **** //         uint8_t test_data = 0x00;
 193:MIDIController.cpp **** //         uint8_t addr_8bit = addr << 1;  // Convert 7-bit to 8-bit address
 194:MIDIController.cpp ****         
 195:MIDIController.cpp **** //         // Small delay between tries
 196:MIDIController.cpp **** //         hw.DelayMs(1);
 197:MIDIController.cpp ****         
 198:MIDIController.cpp **** //         if(i2c.TransmitBlocking(addr_8bit, &test_data, 1, 100) == I2CHandle::Result::OK) {
 199:MIDIController.cpp **** //             hw.PrintLine("Device found!");
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 25


 200:MIDIController.cpp **** //             hw.PrintLine("  7-bit address: 0x%02x", addr);
 201:MIDIController.cpp **** //             hw.PrintLine("  8-bit address: 0x%02x", addr_8bit);  
 202:MIDIController.cpp **** //             devices_found++;
 203:MIDIController.cpp **** //         }
 204:MIDIController.cpp **** //     }
 205:MIDIController.cpp ****     
 206:MIDIController.cpp **** //     if(devices_found == 0) {
 207:MIDIController.cpp **** //         hw.PrintLine("No I2C devices found");
 208:MIDIController.cpp **** //     } else {
 209:MIDIController.cpp **** //         hw.PrintLine("Scan complete - Found %d device(s)", devices_found);
 210:MIDIController.cpp **** //     }
 211:MIDIController.cpp **** // }
 212:MIDIController.cpp **** 
 213:MIDIController.cpp **** 
 214:MIDIController.cpp **** // void InitAccelerometer() {
 215:MIDIController.cpp **** //     // Power sequence
 216:MIDIController.cpp **** //     accelerometer1_VCC.Init(D14, GPIO::Mode::OUTPUT);
 217:MIDIController.cpp **** //     accelerometer1_SC.Init(D13, GPIO::Mode::OUTPUT);
 218:MIDIController.cpp **** //     accelerometer1_VCC.Write(true);
 219:MIDIController.cpp **** //     accelerometer1_SC.Write(true);
 220:MIDIController.cpp ****     
 221:MIDIController.cpp **** //     hw.DelayMs(300); // Extended delay for startup
 222:MIDIController.cpp **** 
 223:MIDIController.cpp **** //     // ScanI2C();
 224:MIDIController.cpp **** 
 225:MIDIController.cpp **** //     // // Try unshifted address first
 226:MIDIController.cpp **** //     // uint8_t whoami_reg = 0x00;
 227:MIDIController.cpp **** //     // if(i2c.TransmitBlocking(ADXL345_ADDR, &whoami_reg, 1, 1000) == I2CHandle::Result::OK) {
 228:MIDIController.cpp **** //     //     hw.PrintLine("Device responded to unshifted address");
 229:MIDIController.cpp **** //     // } else {
 230:MIDIController.cpp **** //     //     hw.PrintLine("Trying shifted address...");
 231:MIDIController.cpp **** //     //     if(i2c.TransmitBlocking(ADXL345_ADDR << 1, &whoami_reg, 1, 1000) != I2CHandle::Result
 232:MIDIController.cpp **** //     //         hw.PrintLine("Device not responding to either address");
 233:MIDIController.cpp **** //     //         return;
 234:MIDIController.cpp **** //     //     }
 235:MIDIController.cpp **** //     // }
 236:MIDIController.cpp **** //     // 7-bit address is 0x53, shift left by 1 for 8-bit address (0xA6)
 237:MIDIController.cpp **** //     const uint8_t ADDR_7BIT = 0x53;
 238:MIDIController.cpp **** //     const uint8_t ADDR_8BIT = ADDR_7BIT << 1;
 239:MIDIController.cpp ****     
 240:MIDIController.cpp **** //     hw.PrintLine("Using 7-bit address: 0x%x (8-bit: 0x%x)", ADDR_7BIT, ADDR_8BIT);
 241:MIDIController.cpp **** 
 242:MIDIController.cpp **** //     // Try to read device ID
 243:MIDIController.cpp **** //     uint8_t whoami_reg = 0x00;
 244:MIDIController.cpp **** //     uint8_t whoami_val = 0;
 245:MIDIController.cpp ****     
 246:MIDIController.cpp **** //     if(i2c.TransmitBlocking(ADDR_8BIT, &whoami_reg, 1, 1000) == I2CHandle::Result::OK) {
 247:MIDIController.cpp **** //         if(i2c.ReceiveBlocking(ADDR_8BIT, &whoami_val, 1, 1000) == I2CHandle::Result::OK) {
 248:MIDIController.cpp **** //             hw.PrintLine("Device ID: 0x%x", whoami_val);
 249:MIDIController.cpp **** //         }
 250:MIDIController.cpp **** //     } else {
 251:MIDIController.cpp **** //         hw.PrintLine("Failed to communicate with ADXL345");
 252:MIDIController.cpp **** //         return;
 253:MIDIController.cpp **** //     }
 254:MIDIController.cpp **** 
 255:MIDIController.cpp **** 
 256:MIDIController.cpp **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 26


 257:MIDIController.cpp ****     // // ADXL345 requires 7-bit address shifted left + R/W bit
 258:MIDIController.cpp ****     // uint8_t device_addr = ADXL345_ADDR << 1;
 259:MIDIController.cpp ****     // hw.PrintLine("Trying address: 0x%x", device_addr);
 260:MIDIController.cpp **** 
 261:MIDIController.cpp ****     // // Read Device ID (should be 0xE5)
 262:MIDIController.cpp ****     // // uint8_t whoami_reg = 0x00;
 263:MIDIController.cpp ****     // uint8_t whoami_val = 0;
 264:MIDIController.cpp **** 
 265:MIDIController.cpp ****     // // Write register address first
 266:MIDIController.cpp ****     // if(i2c.TransmitBlocking(device_addr, &whoami_reg, 1, 1000) != I2CHandle::Result::OK) {
 267:MIDIController.cpp ****     //     hw.PrintLine("Failed to write register address");
 268:MIDIController.cpp ****     //     return;
 269:MIDIController.cpp ****     // }
 270:MIDIController.cpp **** 
 271:MIDIController.cpp ****     // // Then read the value
 272:MIDIController.cpp ****     // if(i2c.ReceiveBlocking(device_addr, &whoami_val, 1, 1000) != I2CHandle::Result::OK) {
 273:MIDIController.cpp ****     //     hw.PrintLine("Failed to read device ID");
 274:MIDIController.cpp ****     //     return;
 275:MIDIController.cpp ****     // }
 276:MIDIController.cpp **** 
 277:MIDIController.cpp ****     // hw.PrintLine("Device ID: 0x%x", whoami_val);
 278:MIDIController.cpp **** // }
 279:MIDIController.cpp **** 
 280:MIDIController.cpp **** void InitEncoder() {
 277              		.loc 10 280 20 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281:MIDIController.cpp ****     // Initialize encoder pins with pull-up resistors
 282:MIDIController.cpp ****     encoderA.Init(D3, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 281              		.loc 10 282 5 view .LVU44
 280:MIDIController.cpp ****     // Initialize encoder pins with pull-up resistors
 282              		.loc 10 280 20 is_stmt 0 view .LVU45
 283 0000 70B5     		push	{r4, r5, r6, lr}
 284              		.cfi_def_cfa_offset 16
 285              		.cfi_offset 4, -16
 286              		.cfi_offset 5, -12
 287              		.cfi_offset 6, -8
 288              		.cfi_offset 14, -4
 289              		.loc 10 282 18 view .LVU46
 290 0002 1049     		ldr	r1, .L14
 280:MIDIController.cpp ****     // Initialize encoder pins with pull-up resistors
 291              		.loc 10 280 20 view .LVU47
 292 0004 82B0     		sub	sp, sp, #8
 293              		.cfi_def_cfa_offset 24
 294              		.loc 10 282 18 view .LVU48
 295 0006 0024     		movs	r4, #0
 296 0008 0F4E     		ldr	r6, .L14+4
 297 000a 0123     		movs	r3, #1
 298 000c 0968     		ldr	r1, [r1]
 299 000e 2246     		mov	r2, r4
 300 0010 3046     		mov	r0, r6
 301 0012 0094     		str	r4, [sp]
 302 0014 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 303              	.LVL9:
 283:MIDIController.cpp ****     encoderB.Init(D4, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);
 304              		.loc 10 283 5 is_stmt 1 view .LVU49
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 27


 305              		.loc 10 283 18 is_stmt 0 view .LVU50
 306 0018 0C4D     		ldr	r5, .L14+8
 307 001a 0D49     		ldr	r1, .L14+12
 308 001c 2246     		mov	r2, r4
 309 001e 0123     		movs	r3, #1
 310 0020 2846     		mov	r0, r5
 311 0022 0968     		ldr	r1, [r1]
 312 0024 0094     		str	r4, [sp]
 313 0026 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 314              	.LVL10:
 284:MIDIController.cpp ****     
 285:MIDIController.cpp ****     // Get initial state
 286:MIDIController.cpp ****     lastEncA = encoderA.Read();
 315              		.loc 10 286 5 is_stmt 1 view .LVU51
 316              		.loc 10 286 29 is_stmt 0 view .LVU52
 317 002a 3046     		mov	r0, r6
 318 002c FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 319              	.LVL11:
 320              		.loc 10 286 14 view .LVU53
 321 0030 084B     		ldr	r3, .L14+16
 322              		.loc 10 286 29 view .LVU54
 323 0032 0246     		mov	r2, r0
 287:MIDIController.cpp ****     lastEncB = encoderB.Read();
 324              		.loc 10 287 29 view .LVU55
 325 0034 2846     		mov	r0, r5
 286:MIDIController.cpp ****     lastEncB = encoderB.Read();
 326              		.loc 10 286 29 view .LVU56
 327 0036 1A60     		str	r2, [r3]
 328              		.loc 10 287 5 is_stmt 1 view .LVU57
 329              		.loc 10 287 29 is_stmt 0 view .LVU58
 330 0038 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 331              	.LVL12:
 332              		.loc 10 287 14 view .LVU59
 333 003c 064B     		ldr	r3, .L14+20
 334              		.loc 10 287 29 view .LVU60
 335 003e 1860     		str	r0, [r3]
 288:MIDIController.cpp **** }
 336              		.loc 10 288 1 view .LVU61
 337 0040 02B0     		add	sp, sp, #8
 338              		.cfi_def_cfa_offset 16
 339              		@ sp needed
 340 0042 70BD     		pop	{r4, r5, r6, pc}
 341              	.L15:
 342              		.align	2
 343              	.L14:
 344 0044 00000000 		.word	.LANCHOR14
 345 0048 00000000 		.word	.LANCHOR15
 346 004c 00000000 		.word	.LANCHOR17
 347 0050 00000000 		.word	.LANCHOR16
 348 0054 00000000 		.word	.LANCHOR18
 349 0058 00000000 		.word	.LANCHOR19
 350              		.cfi_endproc
 351              	.LFE4684:
 353              		.section	.text._Z10InitFadersv,"ax",%progbits
 354              		.align	1
 355              		.p2align 2,,3
 356              		.global	_Z10InitFadersv
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 28


 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	_Z10InitFadersv:
 362              	.LFB4685:
 289:MIDIController.cpp **** 
 290:MIDIController.cpp ****  void InitFaders() {
 363              		.loc 10 290 20 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 136
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 291:MIDIController.cpp ****         // Configure two ADC pins (using pins 21 and 22 as example)
 292:MIDIController.cpp ****         fader1cfg.InitSingle(hw.GetPin(15));  // First fader
 367              		.loc 10 292 9 view .LVU63
 290:MIDIController.cpp ****         // Configure two ADC pins (using pins 21 and 22 as example)
 368              		.loc 10 290 20 is_stmt 0 view .LVU64
 369 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 370              		.cfi_def_cfa_offset 36
 371              		.cfi_offset 4, -36
 372              		.cfi_offset 5, -32
 373              		.cfi_offset 6, -28
 374              		.cfi_offset 7, -24
 375              		.cfi_offset 8, -20
 376              		.cfi_offset 9, -16
 377              		.cfi_offset 10, -12
 378              		.cfi_offset 11, -8
 379              		.cfi_offset 14, -4
 380              		.loc 10 292 29 view .LVU65
 381 0004 0F20     		movs	r0, #15
 290:MIDIController.cpp ****         // Configure two ADC pins (using pins 21 and 22 as example)
 382              		.loc 10 290 20 view .LVU66
 383 0006 A3B0     		sub	sp, sp, #140
 384              		.cfi_def_cfa_offset 176
 385              		.loc 10 292 29 view .LVU67
 386 0008 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 387              	.LVL13:
 388 000c 0346     		mov	r3, r0	@ movhi
 389 000e DFF82CA1 		ldr	r10, .L18+16
 390 0012 0222     		movs	r2, #2
 391 0014 ADF80430 		strh	r3, [sp, #4]	@ movhi
 293:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 294:MIDIController.cpp ****         fader3cfg.InitSingle(hw.GetPin(17));  // Third fader
 295:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 296:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 297:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 298:MIDIController.cpp **** 
 299:MIDIController.cpp **** 
 300:MIDIController.cpp ****         // Initialize ADC with both configs
 301:MIDIController.cpp ****         AdcChannelConfig cfg[6] = {fader1cfg, fader2cfg, fader3cfg, knob1cfg, knob2cfg, knob3cfg};
 392              		.loc 10 301 97 view .LVU68
 393 0018 0DF1640B 		add	fp, sp, #100
 292:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 394              		.loc 10 292 29 view .LVU69
 395 001c 0199     		ldr	r1, [sp, #4]
 396 001e 5046     		mov	r0, r10
 397 0020 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 398              	.LVL14:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 29


 293:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 399              		.loc 10 293 9 is_stmt 1 view .LVU70
 293:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 400              		.loc 10 293 29 is_stmt 0 view .LVU71
 401 0024 DFF81881 		ldr	r8, .L18+20
 402 0028 1020     		movs	r0, #16
 294:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 403              		.loc 10 294 29 view .LVU72
 404 002a 404F     		ldr	r7, .L18
 293:MIDIController.cpp ****         fader2cfg.InitSingle(hw.GetPin(16));  // Second fader
 405              		.loc 10 293 29 view .LVU73
 406 002c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 407              	.LVL15:
 408 0030 ADF80800 		strh	r0, [sp, #8]	@ movhi
 409 0034 0299     		ldr	r1, [sp, #8]
 410 0036 0222     		movs	r2, #2
 411 0038 4046     		mov	r0, r8
 295:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 412              		.loc 10 295 28 view .LVU74
 413 003a 3D4E     		ldr	r6, .L18+4
 293:MIDIController.cpp ****         fader3cfg.InitSingle(hw.GetPin(17));  // Third fader
 414              		.loc 10 293 29 view .LVU75
 415 003c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 416              	.LVL16:
 294:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 417              		.loc 10 294 9 is_stmt 1 view .LVU76
 294:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 418              		.loc 10 294 29 is_stmt 0 view .LVU77
 419 0040 1120     		movs	r0, #17
 420 0042 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 421              	.LVL17:
 422 0046 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 423 004a 0399     		ldr	r1, [sp, #12]
 424 004c 0222     		movs	r2, #2
 425 004e 3846     		mov	r0, r7
 296:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 426              		.loc 10 296 28 view .LVU78
 427 0050 384D     		ldr	r5, .L18+8
 294:MIDIController.cpp ****         knob1cfg.InitSingle(hw.GetPin(18));  // First knob
 428              		.loc 10 294 29 view .LVU79
 429 0052 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 430              	.LVL18:
 295:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 431              		.loc 10 295 9 is_stmt 1 view .LVU80
 295:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
 432              		.loc 10 295 28 is_stmt 0 view .LVU81
 433 0056 1220     		movs	r0, #18
 434 0058 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 435              	.LVL19:
 436 005c ADF81000 		strh	r0, [sp, #16]	@ movhi
 437 0060 0499     		ldr	r1, [sp, #16]
 438 0062 0222     		movs	r2, #2
 439 0064 3046     		mov	r0, r6
 297:MIDIController.cpp **** 
 440              		.loc 10 297 28 view .LVU82
 441 0066 344C     		ldr	r4, .L18+12
 295:MIDIController.cpp ****         knob2cfg.InitSingle(hw.GetPin(19));  // Second knob
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 30


 442              		.loc 10 295 28 view .LVU83
 443 0068 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 444              	.LVL20:
 296:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 445              		.loc 10 296 9 is_stmt 1 view .LVU84
 296:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 446              		.loc 10 296 28 is_stmt 0 view .LVU85
 447 006c 1320     		movs	r0, #19
 448 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 449              	.LVL21:
 450 0072 ADF81400 		strh	r0, [sp, #20]	@ movhi
 451 0076 0599     		ldr	r1, [sp, #20]
 452 0078 0222     		movs	r2, #2
 453 007a 2846     		mov	r0, r5
 302:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 454              		.loc 10 302 20 view .LVU86
 455 007c DFF8C490 		ldr	r9, .L18+24
 296:MIDIController.cpp ****         knob3cfg.InitSingle(hw.GetPin(20));  // Third knob
 456              		.loc 10 296 28 view .LVU87
 457 0080 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 458              	.LVL22:
 297:MIDIController.cpp **** 
 459              		.loc 10 297 9 is_stmt 1 view .LVU88
 297:MIDIController.cpp **** 
 460              		.loc 10 297 28 is_stmt 0 view .LVU89
 461 0084 1420     		movs	r0, #20
 462 0086 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 463              	.LVL23:
 464 008a ADF81800 		strh	r0, [sp, #24]	@ movhi
 465 008e 0699     		ldr	r1, [sp, #24]
 466 0090 2046     		mov	r0, r4
 467 0092 0222     		movs	r2, #2
 468 0094 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 469              	.LVL24:
 301:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 470              		.loc 10 301 9 is_stmt 1 view .LVU90
 301:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 471              		.loc 10 301 97 is_stmt 0 view .LVU91
 472 0098 A446     		mov	ip, r4
 473 009a 07AC     		add	r4, sp, #28
 474 009c 0DF1400E 		add	lr, sp, #64
 475 00a0 BAE80F00 		ldmia	r10!, {r0, r1, r2, r3}
 476 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 477 00a6 DAF80030 		ldr	r3, [r10]
 478 00aa 2380     		strh	r3, [r4]	@ movhi
 479 00ac B8E80F00 		ldmia	r8!, {r0, r1, r2, r3}
 480 00b0 CDF83A30 		str	r3, [sp, #58]	@ unaligned
 481 00b4 B8F80030 		ldrh	r3, [r8]	@ unaligned
 482 00b8 CDF82E00 		str	r0, [sp, #46]	@ unaligned
 483 00bc CDF83210 		str	r1, [sp, #50]	@ unaligned
 484 00c0 CDF83620 		str	r2, [sp, #54]	@ unaligned
 485 00c4 ADF83E30 		strh	r3, [sp, #62]	@ unaligned
 486 00c8 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 487 00ca AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 488 00ce 3B68     		ldr	r3, [r7]
 489 00d0 AEF80030 		strh	r3, [lr]	@ movhi
 490 00d4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 31


 491 00d6 CDF85E30 		str	r3, [sp, #94]	@ unaligned
 492 00da 3388     		ldrh	r3, [r6]	@ unaligned
 493 00dc CDF85200 		str	r0, [sp, #82]	@ unaligned
 494 00e0 CDF85610 		str	r1, [sp, #86]	@ unaligned
 495 00e4 CDF85A20 		str	r2, [sp, #90]	@ unaligned
 496 00e8 ADF86230 		strh	r3, [sp, #98]	@ unaligned
 497 00ec 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 498 00ee ABE80F00 		stmia	fp!, {r0, r1, r2, r3}
 499 00f2 2B68     		ldr	r3, [r5]
 500 00f4 ABF80030 		strh	r3, [fp]	@ movhi
 501 00f8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 502 00fc CDF87600 		str	r0, [sp, #118]	@ unaligned
 503 0100 BCF80000 		ldrh	r0, [ip]	@ unaligned
 504 0104 CDF87A10 		str	r1, [sp, #122]	@ unaligned
 505              		.loc 10 302 20 view .LVU92
 506 0108 07A9     		add	r1, sp, #28
 301:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 507              		.loc 10 301 97 view .LVU93
 508 010a CDF87E20 		str	r2, [sp, #126]	@ unaligned
 509              		.loc 10 302 20 view .LVU94
 510 010e 0622     		movs	r2, #6
 301:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 511              		.loc 10 301 97 view .LVU95
 512 0110 CDF88230 		str	r3, [sp, #130]	@ unaligned
 513              		.loc 10 302 20 view .LVU96
 514 0114 0423     		movs	r3, #4
 301:MIDIController.cpp ****         hw.adc.Init(cfg, 6); 
 515              		.loc 10 301 97 view .LVU97
 516 0116 ADF88600 		strh	r0, [sp, #134]	@ unaligned
 517              		.loc 10 302 9 is_stmt 1 view .LVU98
 518              		.loc 10 302 20 is_stmt 0 view .LVU99
 519 011a 4846     		mov	r0, r9
 520 011c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 521              	.LVL25:
 303:MIDIController.cpp ****         
 304:MIDIController.cpp ****         hw.adc.Start();
 522              		.loc 10 304 9 is_stmt 1 view .LVU100
 523              		.loc 10 304 21 is_stmt 0 view .LVU101
 524 0120 4846     		mov	r0, r9
 525 0122 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 526              	.LVL26:
 305:MIDIController.cpp **** }
 527              		.loc 10 305 1 view .LVU102
 528 0126 23B0     		add	sp, sp, #140
 529              		.cfi_def_cfa_offset 36
 530              		@ sp needed
 531 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 532              	.L19:
 533              		.align	2
 534              	.L18:
 535 012c 00000000 		.word	.LANCHOR22
 536 0130 00000000 		.word	.LANCHOR23
 537 0134 00000000 		.word	.LANCHOR24
 538 0138 00000000 		.word	.LANCHOR25
 539 013c 00000000 		.word	.LANCHOR20
 540 0140 00000000 		.word	.LANCHOR21
 541 0144 18000000 		.word	.LANCHOR26+24
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 32


 542              		.cfi_endproc
 543              	.LFE4685:
 545              		.section	.rodata._Z11ReadEncoderv.str1.4,"aMS",%progbits,1
 546              		.align	2
 547              	.LC0:
 548 0000 52616E64 		.ascii	"Random Value: %d\000"
 548      6F6D2056 
 548      616C7565 
 548      3A202564 
 548      00
 549              		.section	.text._Z11ReadEncoderv,"ax",%progbits
 550              		.align	1
 551              		.p2align 2,,3
 552              		.global	_Z11ReadEncoderv
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 557              	_Z11ReadEncoderv:
 558              	.LFB4686:
 306:MIDIController.cpp **** 
 307:MIDIController.cpp **** // void readAccelerometer(){
 308:MIDIController.cpp **** //     // devices is an ADXL345
 309:MIDIController.cpp **** 
 310:MIDIController.cpp **** // }
 311:MIDIController.cpp **** 
 312:MIDIController.cpp **** 
 313:MIDIController.cpp **** 
 314:MIDIController.cpp **** void ReadEncoder() {
 559              		.loc 10 314 20 is_stmt 1 view -0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 315:MIDIController.cpp ****     int currentA = encoderA.Read();
 563              		.loc 10 315 5 view .LVU104
 314:MIDIController.cpp ****     int currentA = encoderA.Read();
 564              		.loc 10 314 20 is_stmt 0 view .LVU105
 565 0000 70B5     		push	{r4, r5, r6, lr}
 566              		.cfi_def_cfa_offset 16
 567              		.cfi_offset 4, -16
 568              		.cfi_offset 5, -12
 569              		.cfi_offset 6, -8
 570              		.cfi_offset 14, -4
 571              		.loc 10 315 33 view .LVU106
 572 0002 1248     		ldr	r0, .L28
 316:MIDIController.cpp ****     int currentB = encoderB.Read();
 317:MIDIController.cpp ****     
 318:MIDIController.cpp ****     // State change detected
 319:MIDIController.cpp ****     if (currentA != lastEncA || currentB != lastEncB) {
 573              		.loc 10 319 18 view .LVU107
 574 0004 124E     		ldr	r6, .L28+4
 315:MIDIController.cpp ****     int currentB = encoderB.Read();
 575              		.loc 10 315 33 view .LVU108
 576 0006 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 577              	.LVL27:
 578 000a 0446     		mov	r4, r0
 316:MIDIController.cpp ****     int currentB = encoderB.Read();
 579              		.loc 10 316 33 view .LVU109
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 33


 580 000c 1148     		ldr	r0, .L28+8
 581              	.LVL28:
 316:MIDIController.cpp ****     int currentB = encoderB.Read();
 582              		.loc 10 316 5 is_stmt 1 view .LVU110
 316:MIDIController.cpp ****     int currentB = encoderB.Read();
 583              		.loc 10 316 33 is_stmt 0 view .LVU111
 584 000e FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 585              	.LVL29:
 586              		.loc 10 319 5 view .LVU112
 587 0012 3368     		ldr	r3, [r6]
 316:MIDIController.cpp ****     int currentB = encoderB.Read();
 588              		.loc 10 316 33 view .LVU113
 589 0014 0546     		mov	r5, r0
 590              	.LVL30:
 591              		.loc 10 319 5 is_stmt 1 view .LVU114
 592 0016 A342     		cmp	r3, r4
 593 0018 13D0     		beq	.L27
 320:MIDIController.cpp ****         // CW: A leads B
 321:MIDIController.cpp ****         if (currentA != lastEncA) {
 594              		.loc 10 321 9 view .LVU115
 322:MIDIController.cpp ****             if (currentA != currentB) {
 595              		.loc 10 322 13 view .LVU116
 323:MIDIController.cpp ****                 encoderPos++;
 596              		.loc 10 323 27 is_stmt 0 view .LVU117
 597 001a 0F4B     		ldr	r3, .L28+12
 322:MIDIController.cpp ****             if (currentA != currentB) {
 598              		.loc 10 322 13 view .LVU118
 599 001c AC42     		cmp	r4, r5
 600              		.loc 10 323 17 is_stmt 1 view .LVU119
 601              		.loc 10 323 27 is_stmt 0 view .LVU120
 602 001e 1868     		ldr	r0, [r3]
 603              	.LVL31:
 604              		.loc 10 323 27 view .LVU121
 605 0020 14BF     		ite	ne
 606 0022 0130     		addne	r0, r0, #1
 324:MIDIController.cpp ****             } else {
 325:MIDIController.cpp ****                 encoderPos--;
 607              		.loc 10 325 17 is_stmt 1 view .LVU122
 608              		.loc 10 325 27 is_stmt 0 view .LVU123
 609 0024 00F1FF30 		addeq	r0, r0, #-1
 610 0028 1860     		str	r0, [r3]
 326:MIDIController.cpp ****             }
 327:MIDIController.cpp ****             // hw.PrintLine("Encoder Position: %d", encoderPos);
 328:MIDIController.cpp ****             // i want the encoder value to be the seed value of random to be used elsewhere
 329:MIDIController.cpp ****             srand(encoderPos);
 611              		.loc 10 329 13 is_stmt 1 view .LVU124
 612              		.loc 10 329 18 is_stmt 0 view .LVU125
 613 002a FFF7FEFF 		bl	srand
 614              	.LVL32:
 330:MIDIController.cpp ****             hw.PrintLine("Random Value: %d", rand());
 615              		.loc 10 330 13 is_stmt 1 view .LVU126
 616              		.loc 10 330 25 is_stmt 0 view .LVU127
 617 002e FFF7FEFF 		bl	rand
 618              	.LVL33:
 619              		.loc 10 330 25 view .LVU128
 620 0032 0146     		mov	r1, r0
 621              	.LVL34:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 34


 622              	.LBB368:
 623              	.LBI368:
  23:../../libDaisy/src/daisy_seed.h **** 
  24:../../libDaisy/src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy/src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy/src/daisy_seed.h ****      */
  27:../../libDaisy/src/daisy_seed.h ****     void Configure();
  28:../../libDaisy/src/daisy_seed.h **** 
  29:../../libDaisy/src/daisy_seed.h ****     /** 
  30:../../libDaisy/src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy/src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy/src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy/src/daisy_seed.h **** 
  34:../../libDaisy/src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy/src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy/src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy/src/daisy_seed.h ****     */
  38:../../libDaisy/src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy/src/daisy_seed.h **** 
  40:../../libDaisy/src/daisy_seed.h ****     /** 
  41:../../libDaisy/src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy/src/daisy_seed.h ****     */
  43:../../libDaisy/src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy/src/daisy_seed.h **** 
  45:../../libDaisy/src/daisy_seed.h ****     /** 
  46:../../libDaisy/src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy/src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy/src/daisy_seed.h ****     */
  49:../../libDaisy/src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy/src/daisy_seed.h **** 
  51:../../libDaisy/src/daisy_seed.h ****     /** 
  52:../../libDaisy/src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy/src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy/src/daisy_seed.h ****     */
  55:../../libDaisy/src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy/src/daisy_seed.h **** 
  57:../../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy/src/daisy_seed.h ****     */
  61:../../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy/src/daisy_seed.h **** 
  63:../../libDaisy/src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy/src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy/src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy/src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy/src/daisy_seed.h ****     */
  68:../../libDaisy/src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy/src/daisy_seed.h **** 
  70:../../libDaisy/src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy/src/daisy_seed.h ****      */
  72:../../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy/src/daisy_seed.h **** 
  74:../../libDaisy/src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy/src/daisy_seed.h ****      */
  76:../../libDaisy/src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy/src/daisy_seed.h **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 35


  78:../../libDaisy/src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy/src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy/src/daisy_seed.h **** 
  81:../../libDaisy/src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy/src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy/src/daisy_seed.h ****      */
  84:../../libDaisy/src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy/src/daisy_seed.h **** 
  86:../../libDaisy/src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy/src/daisy_seed.h ****      */
  88:../../libDaisy/src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy/src/daisy_seed.h **** 
  90:../../libDaisy/src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy/src/daisy_seed.h ****      */
  92:../../libDaisy/src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy/src/daisy_seed.h **** 
  94:../../libDaisy/src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy/src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy/src/daisy_seed.h **** 
  97:../../libDaisy/src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy/src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy/src/daisy_seed.h **** 
 100:../../libDaisy/src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../../libDaisy/src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../../libDaisy/src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../../libDaisy/src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../../libDaisy/src/daisy_seed.h ****      */
 105:../../libDaisy/src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../../libDaisy/src/daisy_seed.h **** 
 107:../../libDaisy/src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../../libDaisy/src/daisy_seed.h ****      */
 109:../../libDaisy/src/daisy_seed.h ****     void SetLed(bool state);
 110:../../libDaisy/src/daisy_seed.h **** 
 111:../../libDaisy/src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../../libDaisy/src/daisy_seed.h ****      */
 113:../../libDaisy/src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../../libDaisy/src/daisy_seed.h **** 
 115:../../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message
 116:../../libDaisy/src/daisy_seed.h ****      */
 117:../../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 118:../../libDaisy/src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../../libDaisy/src/daisy_seed.h ****     {
 120:../../libDaisy/src/daisy_seed.h ****         Log::Print(format, va...);
 121:../../libDaisy/src/daisy_seed.h ****     }
 122:../../libDaisy/src/daisy_seed.h **** 
 123:../../libDaisy/src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../../libDaisy/src/daisy_seed.h ****     */
 125:../../libDaisy/src/daisy_seed.h ****     template <typename... VA>
 126:../../libDaisy/src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 624              		.loc 1 126 17 is_stmt 1 view .LVU129
 625              	.LBB369:
 127:../../libDaisy/src/daisy_seed.h ****     {
 128:../../libDaisy/src/daisy_seed.h ****         Log::PrintLine(format, va...);
 626              		.loc 1 128 23 is_stmt 0 view .LVU130
 627 0034 0948     		ldr	r0, .L28+16
 628              	.LVL35:
 629              		.loc 1 128 23 view .LVU131
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 36


 630 0036 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 631              	.LVL36:
 632              		.loc 1 128 23 view .LVU132
 633 003a 094B     		ldr	r3, .L28+20
 634              	.LVL37:
 635              	.L22:
 636              		.loc 1 128 23 view .LVU133
 637              	.LBE369:
 638              	.LBE368:
 331:MIDIController.cpp ****         }
 332:MIDIController.cpp ****         
 333:MIDIController.cpp ****         lastEncA = currentA;
 639              		.loc 10 333 9 is_stmt 1 view .LVU134
 640              		.loc 10 333 18 is_stmt 0 view .LVU135
 641 003c 3460     		str	r4, [r6]
 334:MIDIController.cpp ****         lastEncB = currentB;
 642              		.loc 10 334 9 is_stmt 1 view .LVU136
 643              		.loc 10 334 18 is_stmt 0 view .LVU137
 644 003e 1D60     		str	r5, [r3]
 335:MIDIController.cpp ****     }
 336:MIDIController.cpp **** }
 645              		.loc 10 336 1 view .LVU138
 646 0040 70BD     		pop	{r4, r5, r6, pc}
 647              	.LVL38:
 648              	.L27:
 319:MIDIController.cpp ****         // CW: A leads B
 649              		.loc 10 319 42 discriminator 1 view .LVU139
 650 0042 074B     		ldr	r3, .L28+20
 319:MIDIController.cpp ****         // CW: A leads B
 651              		.loc 10 319 30 discriminator 1 view .LVU140
 652 0044 1A68     		ldr	r2, [r3]
 653 0046 8242     		cmp	r2, r0
 654 0048 F8D1     		bne	.L22
 655              		.loc 10 336 1 view .LVU141
 656 004a 70BD     		pop	{r4, r5, r6, pc}
 657              	.LVL39:
 658              	.L29:
 659              		.loc 10 336 1 view .LVU142
 660              		.align	2
 661              	.L28:
 662 004c 00000000 		.word	.LANCHOR15
 663 0050 00000000 		.word	.LANCHOR18
 664 0054 00000000 		.word	.LANCHOR17
 665 0058 00000000 		.word	.LANCHOR27
 666 005c 00000000 		.word	.LC0
 667 0060 00000000 		.word	.LANCHOR19
 668              		.cfi_endproc
 669              	.LFE4686:
 671              		.section	.text._Z14remapWithCurveff,"ax",%progbits
 672              		.align	1
 673              		.p2align 2,,3
 674              		.global	_Z14remapWithCurveff
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 679              	_Z14remapWithCurveff:
 680              	.LVL40:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 37


 681              	.LFB4687:
 337:MIDIController.cpp **** 
 338:MIDIController.cpp **** float remapWithCurve(float inputVal, float slopeVal) {
 682              		.loc 10 338 54 is_stmt 1 view -0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 339:MIDIController.cpp ****     // Map slopeVal (0-1023) to range [0, 1]
 340:MIDIController.cpp ****     float normalizedSlope = slopeVal / 1023.0;
 686              		.loc 10 340 5 view .LVU144
 341:MIDIController.cpp **** 
 342:MIDIController.cpp ****     // Calculate the curve factor k
 343:MIDIController.cpp ****     float k = pow(2, (2 * normalizedSlope - 1));
 687              		.loc 10 343 5 view .LVU145
 340:MIDIController.cpp **** 
 688              		.loc 10 340 11 is_stmt 0 view .LVU146
 689 0000 DFED1A7A 		vldr.32	s15, .L39
 690              		.loc 10 343 18 view .LVU147
 691 0004 B0EE007A 		vmov.f32	s14, #2.0e+0
 692 0008 BFEE001A 		vmov.f32	s2, #-1.0e+0
 340:MIDIController.cpp **** 
 693              		.loc 10 340 11 view .LVU148
 694 000c C0EEA76A 		vdiv.f32	s13, s1, s15
 695              	.LVL41:
 338:MIDIController.cpp ****     // Map slopeVal (0-1023) to range [0, 1]
 696              		.loc 10 338 54 view .LVU149
 697 0010 08B5     		push	{r3, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 3, -8
 700              		.cfi_offset 14, -4
 701 0012 2DED028B 		vpush.64	{d8}
 702              		.cfi_def_cfa_offset 16
 703              		.cfi_offset 80, -16
 704              		.cfi_offset 81, -12
 338:MIDIController.cpp ****     // Map slopeVal (0-1023) to range [0, 1]
 705              		.loc 10 338 54 view .LVU150
 706 0016 B0EE408A 		vmov.f32	s16, s0
 707              	.LBB370:
 708              	.LBB371:
 709              		.file 11 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 38


  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** /** @file include/cmath
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  *  as macros in C).
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****  */
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** //
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #pragma GCC system_header
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/c++config.h>
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <ext/type_traits.h>
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include_next <math.h>
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/std_abs.h>
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef div
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef acos
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef asin
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan2
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ceil
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cos
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cosh
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef exp
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fabs
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef floor
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fmod
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef frexp
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ldexp
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log10
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef modf
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef pow
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sin
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sinh
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sqrt
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tan
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 39


  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tanh
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** extern "C++"
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::acos;
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(float __x)
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosf(__x); }
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(long double __x)
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosl(__x); }
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     acos(_Tp __x)
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_acos(__x); }
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::asin;
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(float __x)
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinf(__x); }
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(long double __x)
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinl(__x); }
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     asin(_Tp __x)
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_asin(__x); }
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(float __x)
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanf(__x); }
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(long double __x)
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanl(__x); }
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 40


 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan(_Tp __x)
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_atan(__x); }
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan2;
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(float __y, float __x)
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(long double __y, long double __x)
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ceil;
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(float __x)
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(long double __x)
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceill(__x); }
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ceil(_Tp __x)
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ceil(__x); }
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cos;
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(float __x)
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(long double __x)
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 41


 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosl(__x); }
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cos(_Tp __x)
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cos(__x); }
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cosh;
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(float __x)
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshf(__x); }
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(long double __x)
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshl(__x); }
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     cosh(_Tp __x)
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cosh(__x); }
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::exp;
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(float __x)
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expf(__x); }
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(long double __x)
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expl(__x); }
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     exp(_Tp __x)
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_exp(__x); }
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fabs;
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(float __x)
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(long double __x)
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 42


 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fabs(_Tp __x)
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_fabs(__x); }
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::floor;
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(float __x)
 261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorf(__x); }
 262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   floor(long double __x)
 265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_floorl(__x); }
 266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     floor(_Tp __x)
 273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_floor(__x); }
 274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fmod;
 276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(float __x, float __y)
 280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   fmod(long double __x, long double __y)
 284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::frexp;
 297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(float __x, int* __exp)
 301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 43


 303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   frexp(long double __x, int* __exp)
 305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ldexp;
 316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(float __x, int __exp)
 320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   ldexp(long double __x, int __exp)
 324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log;
 335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(float __x)
 339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logf(__x); }
 340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log(long double __x)
 343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_logl(__x); }
 344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log(_Tp __x)
 351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log(__x); }
 352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::log10;
 354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(float __x)
 358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10f(__x); }
 359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 44


 360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   log10(long double __x)
 362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_log10l(__x); }
 363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     log10(_Tp __x)
 370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_log10(__x); }
 371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 372:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::modf;
 373:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 374:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 376:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(float __x, float* __iptr)
 377:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 379:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 380:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 383:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 384:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::pow;
 385:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 386:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, float __y)
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 391:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, long double __y)
 393:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 395:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #if __cplusplus < 201103L
 396:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline double
 399:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(double __x, int __i)
 400:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 402:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline float
 403:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(float __x, int __n)
 404:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 406:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   inline long double
 407:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   pow(long double __x, int __n)
 408:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 410:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 411:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 412:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 413:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 45


 417:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****       return pow(__type(__x), __type(__y));
 710              		.loc 11 418 17 view .LVU151
 711 001a B0EE000B 		vmov.f64	d0, #2.0e+0
 712              	.LVL42:
 713              		.loc 11 418 17 view .LVU152
 714              	.LBE371:
 715              	.LBE370:
 716              		.loc 10 343 18 view .LVU153
 717 001e A6EE871A 		vfma.f32	s2, s13, s14
 718              	.LVL43:
 719              	.LBB373:
 720              	.LBI370:
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 721              		.loc 11 415 5 is_stmt 1 view .LVU154
 722              	.LBB372:
 723              		.loc 11 418 17 is_stmt 0 view .LVU155
 724 0022 B7EEC11A 		vcvt.f64.f32	d1, s2
 725              	.LVL44:
 726              		.loc 11 418 17 view .LVU156
 727 0026 FFF7FEFF 		bl	pow
 728              	.LVL45:
 729              		.loc 11 418 17 view .LVU157
 730              	.LBE372:
 731              	.LBE373:
 344:MIDIController.cpp **** 
 345:MIDIController.cpp ****     // Apply the curve based on k
 346:MIDIController.cpp ****     if (k < 1) {
 732              		.loc 10 346 5 view .LVU158
 733 002a F7EE007A 		vmov.f32	s15, #1.0e+0
 343:MIDIController.cpp **** 
 734              		.loc 10 343 47 view .LVU159
 735 002e F7EEC00B 		vcvt.f32.f64	s1, d0
 736              	.LVL46:
 737              		.loc 10 346 5 is_stmt 1 view .LVU160
 738 0032 F4EEE70A 		vcmpe.f32	s1, s15
 739 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 740 003a 0FD4     		bmi	.L37
 347:MIDIController.cpp ****         // Logarithmic mapping
 348:MIDIController.cpp ****         return pow(inputVal, k);
 349:MIDIController.cpp ****     } else if (k == 1) {
 741              		.loc 10 349 12 view .LVU161
 742 003c F4EE670A 		vcmp.f32	s1, s15
 350:MIDIController.cpp ****         // Linear mapping
 351:MIDIController.cpp ****         return inputVal;
 352:MIDIController.cpp ****     } else {
 353:MIDIController.cpp ****         // Exponential mapping
 354:MIDIController.cpp ****         return pow(inputVal, k);
 355:MIDIController.cpp ****     }
 356:MIDIController.cpp **** }
 743              		.loc 10 356 1 is_stmt 0 view .LVU162
 744 0040 B0EE480A 		vmov.f32	s0, s16
 349:MIDIController.cpp ****         // Linear mapping
 745              		.loc 10 349 12 view .LVU163
 746 0044 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 747 0048 02D1     		bne	.L38
 748              		.loc 10 356 1 view .LVU164
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 46


 749 004a BDEC028B 		vldm	sp!, {d8}
 750              		.cfi_remember_state
 751              		.cfi_restore 80
 752              		.cfi_restore 81
 753              		.cfi_def_cfa_offset 8
 754              	.LVL47:
 755              		.loc 10 356 1 view .LVU165
 756 004e 08BD     		pop	{r3, pc}
 757              	.L38:
 758              		.cfi_restore_state
 354:MIDIController.cpp ****     }
 759              		.loc 10 354 9 is_stmt 1 view .LVU166
 760              	.LVL48:
 761              	.LBB374:
 762              	.LBI374:
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 763              		.loc 11 388 3 view .LVU167
 764              	.LBB375:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 765              		.loc 11 389 5 view .LVU168
 766              	.LBE375:
 767              	.LBE374:
 768              		.loc 10 356 1 is_stmt 0 view .LVU169
 769 0050 BDEC028B 		vldm	sp!, {d8}
 770              		.cfi_remember_state
 771              		.cfi_restore 80
 772              		.cfi_restore 81
 773              		.cfi_def_cfa_offset 8
 774 0054 BDE80840 		pop	{r3, lr}
 775              		.cfi_restore 14
 776              		.cfi_restore 3
 777              		.cfi_def_cfa_offset 0
 778              	.LBB377:
 779              	.LBB376:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 780              		.loc 11 389 26 view .LVU170
 781 0058 FFF7FEBF 		b	powf
 782              	.LVL49:
 783              	.L37:
 784              		.cfi_restore_state
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 785              		.loc 11 389 26 view .LVU171
 786              	.LBE376:
 787              	.LBE377:
 348:MIDIController.cpp ****     } else if (k == 1) {
 788              		.loc 10 348 9 is_stmt 1 view .LVU172
 789              	.LBB378:
 790              	.LBI378:
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_powf(__x, __y); }
 791              		.loc 11 388 3 view .LVU173
 792              	.LBB379:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 793              		.loc 11 389 5 view .LVU174
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 794              		.loc 11 389 26 is_stmt 0 view .LVU175
 795 005c B0EE480A 		vmov.f32	s0, s16
 796              	.LBE379:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 47


 797              	.LBE378:
 798              		.loc 10 356 1 view .LVU176
 799 0060 BDEC028B 		vldm	sp!, {d8}
 800              		.cfi_restore 80
 801              		.cfi_restore 81
 802              		.cfi_def_cfa_offset 8
 803              	.LVL50:
 804              		.loc 10 356 1 view .LVU177
 805 0064 BDE80840 		pop	{r3, lr}
 806              		.cfi_restore 14
 807              		.cfi_restore 3
 808              		.cfi_def_cfa_offset 0
 809              	.LBB381:
 810              	.LBB380:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 811              		.loc 11 389 26 view .LVU178
 812 0068 FFF7FEBF 		b	powf
 813              	.LVL51:
 814              	.L40:
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath **** 
 815              		.loc 11 389 26 view .LVU179
 816              		.align	2
 817              	.L39:
 818 006c 00C07F44 		.word	1149222912
 819              	.LBE380:
 820              	.LBE381:
 821              		.cfi_endproc
 822              	.LFE4687:
 824              		.section	.rodata._Z10ReadFadersv.str1.4,"aMS",%progbits,1
 825              		.align	2
 826              	.LC1:
 827 0000 46616465 		.ascii	"Fader1: %d\000"
 827      72313A20 
 827      256400
 828 000b 00       		.align	2
 829              	.LC2:
 830 000c 46616465 		.ascii	"Fader2: %d\000"
 830      72323A20 
 830      256400
 831 0017 00       		.align	2
 832              	.LC3:
 833 0018 46616465 		.ascii	"Fader3: %d\000"
 833      72333A20 
 833      256400
 834 0023 00       		.align	2
 835              	.LC4:
 836 0024 4B6E6F62 		.ascii	"Knob1: %d\000"
 836      313A2025 
 836      6400
 837 002e 0000     		.align	2
 838              	.LC5:
 839 0030 4B6E6F62 		.ascii	"Knob2: %d\000"
 839      323A2025 
 839      6400
 840 003a 0000     		.align	2
 841              	.LC6:
 842 003c 4B6E6F62 		.ascii	"Knob3: %d\000"
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 48


 842      333A2025 
 842      6400
 843              		.section	.text._Z10ReadFadersv,"ax",%progbits
 844              		.align	1
 845              		.p2align 2,,3
 846              		.global	_Z10ReadFadersv
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 851              	_Z10ReadFadersv:
 852              	.LFB4688:
 357:MIDIController.cpp **** 
 358:MIDIController.cpp **** 
 359:MIDIController.cpp **** // void ReadAccelerometer() {
 360:MIDIController.cpp **** //     uint8_t data[6];
 361:MIDIController.cpp **** //     uint8_t reg = DATAX0;
 362:MIDIController.cpp ****     
 363:MIDIController.cpp **** //     // Read all axis data at once (6 bytes)
 364:MIDIController.cpp **** //     if(i2c.TransmitBlocking(ADXL345_ADDR, &reg, 1, 1000) != I2CHandle::Result::OK) {
 365:MIDIController.cpp **** //         hw.PrintLine("Failed to send register address");
 366:MIDIController.cpp **** //         return;
 367:MIDIController.cpp **** //     }
 368:MIDIController.cpp ****     
 369:MIDIController.cpp **** //     if(i2c.ReceiveBlocking(ADXL345_ADDR, data, 6, 1000) != I2CHandle::Result::OK) {
 370:MIDIController.cpp **** //         hw.PrintLine("Failed to read accelerometer data");
 371:MIDIController.cpp **** //         return;
 372:MIDIController.cpp **** //     }
 373:MIDIController.cpp **** 
 374:MIDIController.cpp **** //     // Convert raw data to 16-bit integers
 375:MIDIController.cpp **** //     int16_t x = (data[1] << 8) | data[0];
 376:MIDIController.cpp **** //     int16_t y = (data[3] << 8) | data[2];
 377:MIDIController.cpp **** //     int16_t z = (data[5] << 8) | data[4];
 378:MIDIController.cpp **** 
 379:MIDIController.cpp **** //     // Convert to g-forces
 380:MIDIController.cpp **** //     float x_g = x * SCALE_FACTOR;
 381:MIDIController.cpp **** //     float y_g = y * SCALE_FACTOR;
 382:MIDIController.cpp **** //     float z_g = z * SCALE_FACTOR;
 383:MIDIController.cpp **** 
 384:MIDIController.cpp **** //     // Print values (multiplied by 1000 for better readability)
 385:MIDIController.cpp **** //     hw.PrintLine("X: %d Y: %d Z: %d", 
 386:MIDIController.cpp **** //         (int)(x_g * 1000), 
 387:MIDIController.cpp **** //         (int)(y_g * 1000), 
 388:MIDIController.cpp **** //         (int)(z_g * 1000));
 389:MIDIController.cpp **** // }
 390:MIDIController.cpp **** 
 391:MIDIController.cpp **** 
 392:MIDIController.cpp **** void ReadFaders() {
 853              		.loc 10 392 19 is_stmt 1 view -0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 393:MIDIController.cpp ****     // hw.PrintLine("reading faders called!");
 394:MIDIController.cpp ****     static float last_fader1 = 0.0f;
 857              		.loc 10 394 5 view .LVU181
 395:MIDIController.cpp ****     static float last_fader2 = 0.0f;
 858              		.loc 10 395 5 view .LVU182
 396:MIDIController.cpp ****     static float last_fader3 = 0.0f;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 49


 859              		.loc 10 396 5 view .LVU183
 397:MIDIController.cpp ****     static float last_knob1 = 0.0f;
 860              		.loc 10 397 5 view .LVU184
 398:MIDIController.cpp ****     static float last_knob2 = 0.0f;
 861              		.loc 10 398 5 view .LVU185
 399:MIDIController.cpp ****     static float last_knob3 = 0.0f;
 862              		.loc 10 399 5 view .LVU186
 400:MIDIController.cpp ****     const float threshold = 0.01f; // 1% change threshold
 863              		.loc 10 400 5 view .LVU187
 864              	.LVL52:
 401:MIDIController.cpp **** 
 402:MIDIController.cpp ****     float fader1_value = hw.adc.GetFloat(0);
 865              		.loc 10 402 5 view .LVU188
 392:MIDIController.cpp ****     // hw.PrintLine("reading faders called!");
 866              		.loc 10 392 19 is_stmt 0 view .LVU189
 867 0000 10B5     		push	{r4, lr}
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 4, -8
 870              		.cfi_offset 14, -4
 871              		.loc 10 402 41 view .LVU190
 872 0002 0021     		movs	r1, #0
 873 0004 6948     		ldr	r0, .L67
 874              	.LBB382:
 403:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 404:MIDIController.cpp ****     float fader3_value = hw.adc.GetFloat(2);
 405:MIDIController.cpp ****     float knob1_value = hw.adc.GetFloat(3);
 406:MIDIController.cpp ****     float knob2_value = hw.adc.GetFloat(4);
 407:MIDIController.cpp ****     float knob3_value = hw.adc.GetFloat(5);
 408:MIDIController.cpp ****     
 409:MIDIController.cpp ****     // Check if values changed more than threshold
 410:MIDIController.cpp ****     if (fabsf(fader1_value - last_fader1) > threshold) {
 875              		.loc 10 410 28 view .LVU191
 876 0006 6A4C     		ldr	r4, .L67+4
 877              	.LBE382:
 392:MIDIController.cpp ****     // hw.PrintLine("reading faders called!");
 878              		.loc 10 392 19 view .LVU192
 879 0008 2DED068B 		vpush.64	{d8, d9, d10}
 880              		.cfi_def_cfa_offset 32
 881              		.cfi_offset 80, -32
 882              		.cfi_offset 81, -28
 883              		.cfi_offset 82, -24
 884              		.cfi_offset 83, -20
 885              		.cfi_offset 84, -16
 886              		.cfi_offset 85, -12
 402:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 887              		.loc 10 402 41 view .LVU193
 888 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 889              	.LVL53:
 403:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 890              		.loc 10 403 41 view .LVU194
 891 0010 0121     		movs	r1, #1
 892 0012 6648     		ldr	r0, .L67
 402:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 893              		.loc 10 402 41 view .LVU195
 894 0014 F0EE40AA 		vmov.f32	s21, s0
 895              	.LVL54:
 403:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 50


 896              		.loc 10 403 5 is_stmt 1 view .LVU196
 403:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 897              		.loc 10 403 41 is_stmt 0 view .LVU197
 898 0018 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 899              	.LVL55:
 404:MIDIController.cpp ****     float knob1_value = hw.adc.GetFloat(3);
 900              		.loc 10 404 41 view .LVU198
 901 001c 0221     		movs	r1, #2
 902 001e 6348     		ldr	r0, .L67
 403:MIDIController.cpp ****     float fader2_value = hw.adc.GetFloat(1);
 903              		.loc 10 403 41 view .LVU199
 904 0020 B0EE40AA 		vmov.f32	s20, s0
 905              	.LVL56:
 404:MIDIController.cpp ****     float knob1_value = hw.adc.GetFloat(3);
 906              		.loc 10 404 5 is_stmt 1 view .LVU200
 404:MIDIController.cpp ****     float knob1_value = hw.adc.GetFloat(3);
 907              		.loc 10 404 41 is_stmt 0 view .LVU201
 908 0024 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 909              	.LVL57:
 405:MIDIController.cpp ****     float knob2_value = hw.adc.GetFloat(4);
 910              		.loc 10 405 40 view .LVU202
 911 0028 0321     		movs	r1, #3
 912 002a 6048     		ldr	r0, .L67
 404:MIDIController.cpp ****     float knob1_value = hw.adc.GetFloat(3);
 913              		.loc 10 404 41 view .LVU203
 914 002c F0EE409A 		vmov.f32	s19, s0
 915              	.LVL58:
 405:MIDIController.cpp ****     float knob2_value = hw.adc.GetFloat(4);
 916              		.loc 10 405 5 is_stmt 1 view .LVU204
 405:MIDIController.cpp ****     float knob2_value = hw.adc.GetFloat(4);
 917              		.loc 10 405 40 is_stmt 0 view .LVU205
 918 0030 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 919              	.LVL59:
 406:MIDIController.cpp ****     float knob3_value = hw.adc.GetFloat(5);
 920              		.loc 10 406 40 view .LVU206
 921 0034 0421     		movs	r1, #4
 922 0036 5D48     		ldr	r0, .L67
 405:MIDIController.cpp ****     float knob2_value = hw.adc.GetFloat(4);
 923              		.loc 10 405 40 view .LVU207
 924 0038 B0EE409A 		vmov.f32	s18, s0
 925              	.LVL60:
 406:MIDIController.cpp ****     float knob3_value = hw.adc.GetFloat(5);
 926              		.loc 10 406 5 is_stmt 1 view .LVU208
 406:MIDIController.cpp ****     float knob3_value = hw.adc.GetFloat(5);
 927              		.loc 10 406 40 is_stmt 0 view .LVU209
 928 003c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 929              	.LVL61:
 407:MIDIController.cpp ****     
 930              		.loc 10 407 40 view .LVU210
 931 0040 0521     		movs	r1, #5
 932 0042 5A48     		ldr	r0, .L67
 406:MIDIController.cpp ****     float knob3_value = hw.adc.GetFloat(5);
 933              		.loc 10 406 40 view .LVU211
 934 0044 F0EE408A 		vmov.f32	s17, s0
 935              	.LVL62:
 407:MIDIController.cpp ****     
 936              		.loc 10 407 5 is_stmt 1 view .LVU212
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 51


 407:MIDIController.cpp ****     
 937              		.loc 10 407 40 is_stmt 0 view .LVU213
 938 0048 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 939              	.LVL63:
 940              	.LBB389:
 941              		.loc 10 410 28 view .LVU214
 942 004c D4ED007A 		vldr.32	s15, [r4]
 943              		.loc 10 410 5 view .LVU215
 944 0050 9FED587A 		vldr.32	s14, .L67+8
 945              	.LBE389:
 407:MIDIController.cpp ****     
 946              		.loc 10 407 40 view .LVU216
 947 0054 B0EE408A 		vmov.f32	s16, s0
 948              	.LVL64:
 949              		.loc 10 410 5 is_stmt 1 view .LVU217
 950              	.LBB390:
 951              		.loc 10 410 28 is_stmt 0 view .LVU218
 952 0058 7AEEE77A 		vsub.f32	s15, s21, s15
 953              		.loc 10 410 14 view .LVU219
 954 005c F0EEE77A 		vabs.f32	s15, s15
 955              		.loc 10 410 5 view .LVU220
 956 0060 F4EEC77A 		vcmpe.f32	s15, s14
 957 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 958 0068 49DC     		bgt	.L61
 959              	.LVL65:
 960              	.L42:
 961              		.loc 10 410 5 view .LVU221
 962              	.LBE390:
 411:MIDIController.cpp ****         int fader1_int = (int)(fader1_value * 1000);
 412:MIDIController.cpp ****         hw.PrintLine("Fader1: %d", fader1_int); // TODO: dirty ground right now, need to fix
 413:MIDIController.cpp ****         last_fader1 = fader1_value;
 414:MIDIController.cpp ****     }
 415:MIDIController.cpp ****     
 416:MIDIController.cpp ****     if (fabsf(fader2_value - last_fader2) > threshold) {
 963              		.loc 10 416 5 is_stmt 1 view .LVU222
 964              	.LBB391:
 965              		.loc 10 416 28 is_stmt 0 view .LVU223
 966 006a 534C     		ldr	r4, .L67+12
 967              		.loc 10 416 5 view .LVU224
 968 006c 9FED517A 		vldr.32	s14, .L67+8
 969              		.loc 10 416 28 view .LVU225
 970 0070 D4ED007A 		vldr.32	s15, [r4]
 971 0074 7AEE677A 		vsub.f32	s15, s20, s15
 972              		.loc 10 416 14 view .LVU226
 973 0078 F0EEE77A 		vabs.f32	s15, s15
 974              		.loc 10 416 5 view .LVU227
 975 007c F4EEC77A 		vcmpe.f32	s15, s14
 976 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 977 0084 00F38380 		bgt	.L62
 978              	.L44:
 979              	.LBE391:
 417:MIDIController.cpp ****         int fader2_int = (int)(fader2_value * 1000);
 418:MIDIController.cpp ****         hw.PrintLine("Fader2: %d", fader2_int);
 419:MIDIController.cpp ****         last_fader2 = fader2_value;
 420:MIDIController.cpp ****     }
 421:MIDIController.cpp ****     if (fabsf(fader3_value - last_fader3) > threshold) {
 980              		.loc 10 421 5 is_stmt 1 view .LVU228
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 52


 981              	.LBB398:
 982              		.loc 10 421 28 is_stmt 0 view .LVU229
 983 0088 4C4C     		ldr	r4, .L67+16
 984              		.loc 10 421 5 view .LVU230
 985 008a 9FED4A7A 		vldr.32	s14, .L67+8
 986              		.loc 10 421 28 view .LVU231
 987 008e D4ED007A 		vldr.32	s15, [r4]
 988 0092 79EEE77A 		vsub.f32	s15, s19, s15
 989              		.loc 10 421 14 view .LVU232
 990 0096 F0EEE77A 		vabs.f32	s15, s15
 991              		.loc 10 421 5 view .LVU233
 992 009a F4EEC77A 		vcmpe.f32	s15, s14
 993 009e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 994 00a2 66DC     		bgt	.L63
 995              	.L46:
 996              	.LBE398:
 422:MIDIController.cpp ****         int fader3_int = (int)(fader3_value * 1000);
 423:MIDIController.cpp ****         hw.PrintLine("Fader3: %d", fader3_int);
 424:MIDIController.cpp ****         last_fader3 = fader3_value;
 425:MIDIController.cpp ****     }
 426:MIDIController.cpp ****     if (fabsf(knob1_value - last_knob1) > threshold) {
 997              		.loc 10 426 5 is_stmt 1 view .LVU234
 998              	.LBB405:
 999              		.loc 10 426 27 is_stmt 0 view .LVU235
 1000 00a4 464C     		ldr	r4, .L67+20
 1001              		.loc 10 426 5 view .LVU236
 1002 00a6 9FED437A 		vldr.32	s14, .L67+8
 1003              		.loc 10 426 27 view .LVU237
 1004 00aa D4ED007A 		vldr.32	s15, [r4]
 1005 00ae 79EE677A 		vsub.f32	s15, s18, s15
 1006              		.loc 10 426 14 view .LVU238
 1007 00b2 F0EEE77A 		vabs.f32	s15, s15
 1008              		.loc 10 426 5 view .LVU239
 1009 00b6 F4EEC77A 		vcmpe.f32	s15, s14
 1010 00ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1011 00be 4ADC     		bgt	.L64
 1012              	.L48:
 1013              	.LBE405:
 427:MIDIController.cpp ****         int knob1_int = (int)(knob1_value * 1000);
 428:MIDIController.cpp ****         hw.PrintLine("Knob1: %d", knob1_int);
 429:MIDIController.cpp ****         last_knob1 = knob1_value;
 430:MIDIController.cpp ****     }
 431:MIDIController.cpp ****     if (fabsf(knob2_value - last_knob2) > threshold) {
 1014              		.loc 10 431 5 is_stmt 1 view .LVU240
 1015              	.LBB412:
 1016              		.loc 10 431 27 is_stmt 0 view .LVU241
 1017 00c0 404C     		ldr	r4, .L67+24
 1018              		.loc 10 431 5 view .LVU242
 1019 00c2 9FED3C7A 		vldr.32	s14, .L67+8
 1020              		.loc 10 431 27 view .LVU243
 1021 00c6 D4ED007A 		vldr.32	s15, [r4]
 1022 00ca 78EEE77A 		vsub.f32	s15, s17, s15
 1023              		.loc 10 431 14 view .LVU244
 1024 00ce F0EEE77A 		vabs.f32	s15, s15
 1025              		.loc 10 431 5 view .LVU245
 1026 00d2 F4EEC77A 		vcmpe.f32	s15, s14
 1027 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 53


 1028 00da 2EDC     		bgt	.L65
 1029              	.L50:
 1030              	.LBE412:
 432:MIDIController.cpp ****         int knob2_int = (int)(knob2_value * 1000);
 433:MIDIController.cpp ****         hw.PrintLine("Knob2: %d", knob2_int);
 434:MIDIController.cpp ****         last_knob2 = knob2_value;
 435:MIDIController.cpp ****     }
 436:MIDIController.cpp ****     if (fabsf(knob3_value - last_knob3) > threshold) {
 1031              		.loc 10 436 5 is_stmt 1 view .LVU246
 1032              	.LBB419:
 1033              		.loc 10 436 27 is_stmt 0 view .LVU247
 1034 00dc 3A4C     		ldr	r4, .L67+28
 1035              		.loc 10 436 5 view .LVU248
 1036 00de 9FED357A 		vldr.32	s14, .L67+8
 1037              		.loc 10 436 27 view .LVU249
 1038 00e2 D4ED007A 		vldr.32	s15, [r4]
 1039 00e6 78EE677A 		vsub.f32	s15, s16, s15
 1040              		.loc 10 436 14 view .LVU250
 1041 00ea F0EEE77A 		vabs.f32	s15, s15
 1042              		.loc 10 436 5 view .LVU251
 1043 00ee F4EEC77A 		vcmpe.f32	s15, s14
 1044 00f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1045 00f6 10DC     		bgt	.L66
 1046              	.LBE419:
 437:MIDIController.cpp ****         int knob3_int = (int)(knob3_value * 1000);
 438:MIDIController.cpp ****         hw.PrintLine("Knob3: %d", knob3_int);
 439:MIDIController.cpp ****         last_knob3 = knob3_value;
 440:MIDIController.cpp ****     }
 441:MIDIController.cpp **** 
 442:MIDIController.cpp ****     // // just print the fader values for now
 443:MIDIController.cpp ****     // int fader1_int = (int)(fader1_value * 1000);
 444:MIDIController.cpp ****     // int fader2_int = (int)(fader2_value * 1000);
 445:MIDIController.cpp ****     // hw.PrintLine("Fader1: %d, Fader2: %d", fader1_int, fader2_int);
 446:MIDIController.cpp **** }
 1047              		.loc 10 446 1 view .LVU252
 1048 00f8 BDEC068B 		vldm	sp!, {d8-d10}
 1049              		.cfi_remember_state
 1050              		.cfi_restore 84
 1051              		.cfi_restore 85
 1052              		.cfi_restore 82
 1053              		.cfi_restore 83
 1054              		.cfi_restore 80
 1055              		.cfi_restore 81
 1056              		.cfi_def_cfa_offset 8
 1057              	.LVL66:
 1058              		.loc 10 446 1 view .LVU253
 1059 00fc 10BD     		pop	{r4, pc}
 1060              	.LVL67:
 1061              	.L61:
 1062              		.cfi_restore_state
 1063              	.LBB426:
 1064              	.LBB383:
 411:MIDIController.cpp ****         hw.PrintLine("Fader1: %d", fader1_int); // TODO: dirty ground right now, need to fix
 1065              		.loc 10 411 9 is_stmt 1 view .LVU254
 412:MIDIController.cpp ****         last_fader1 = fader1_value;
 1066              		.loc 10 412 9 view .LVU255
 1067              	.LBB384:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 54


 1068              	.LBI384:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1069              		.loc 1 126 17 view .LVU256
 1070              	.LBE384:
 411:MIDIController.cpp ****         hw.PrintLine("Fader1: %d", fader1_int); // TODO: dirty ground right now, need to fix
 1071              		.loc 10 411 45 is_stmt 0 view .LVU257
 1072 00fe DFED337A 		vldr.32	s15, .L67+32
 1073              	.LBB387:
 1074              	.LBB385:
 1075              		.loc 1 128 23 view .LVU258
 1076 0102 3348     		ldr	r0, .L67+36
 1077              	.LBE385:
 1078              	.LBE387:
 411:MIDIController.cpp ****         hw.PrintLine("Fader1: %d", fader1_int); // TODO: dirty ground right now, need to fix
 1079              		.loc 10 411 45 view .LVU259
 1080 0104 6AEEA77A 		vmul.f32	s15, s21, s15
 1081              	.LBB388:
 1082              	.LBB386:
 1083              		.loc 1 128 23 view .LVU260
 1084 0108 FDEEE77A 		vcvt.s32.f32	s15, s15
 1085 010c 17EE901A 		vmov	r1, s15	@ int
 1086 0110 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1087              	.LVL68:
 1088              		.loc 1 128 23 view .LVU261
 1089              	.LBE386:
 1090              	.LBE388:
 413:MIDIController.cpp ****     }
 1091              		.loc 10 413 9 is_stmt 1 view .LVU262
 413:MIDIController.cpp ****     }
 1092              		.loc 10 413 21 is_stmt 0 view .LVU263
 1093 0114 C4ED00AA 		vstr.32	s21, [r4]
 1094              	.LBE383:
 1095 0118 A7E7     		b	.L42
 1096              	.LVL69:
 1097              	.L66:
 413:MIDIController.cpp ****     }
 1098              		.loc 10 413 21 view .LVU264
 1099              	.LBE426:
 1100              	.LBB427:
 1101              	.LBB420:
 437:MIDIController.cpp ****         hw.PrintLine("Knob3: %d", knob3_int);
 1102              		.loc 10 437 9 is_stmt 1 view .LVU265
 438:MIDIController.cpp ****         last_knob3 = knob3_value;
 1103              		.loc 10 438 9 view .LVU266
 1104              	.LBB421:
 1105              	.LBI421:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1106              		.loc 1 126 17 view .LVU267
 1107              	.LBE421:
 437:MIDIController.cpp ****         hw.PrintLine("Knob3: %d", knob3_int);
 1108              		.loc 10 437 43 is_stmt 0 view .LVU268
 1109 011a DFED2C7A 		vldr.32	s15, .L67+32
 1110              	.LBB424:
 1111              	.LBB422:
 1112              		.loc 1 128 23 view .LVU269
 1113 011e 2D48     		ldr	r0, .L67+40
 1114              	.LBE422:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 55


 1115              	.LBE424:
 437:MIDIController.cpp ****         hw.PrintLine("Knob3: %d", knob3_int);
 1116              		.loc 10 437 43 view .LVU270
 1117 0120 68EE277A 		vmul.f32	s15, s16, s15
 1118              	.LBB425:
 1119              	.LBB423:
 1120              		.loc 1 128 23 view .LVU271
 1121 0124 FDEEE77A 		vcvt.s32.f32	s15, s15
 1122 0128 17EE901A 		vmov	r1, s15	@ int
 1123 012c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1124              	.LVL70:
 1125              		.loc 1 128 23 view .LVU272
 1126              	.LBE423:
 1127              	.LBE425:
 439:MIDIController.cpp ****     }
 1128              		.loc 10 439 9 is_stmt 1 view .LVU273
 439:MIDIController.cpp ****     }
 1129              		.loc 10 439 20 is_stmt 0 view .LVU274
 1130 0130 84ED008A 		vstr.32	s16, [r4]
 1131              	.LBE420:
 1132              	.LBE427:
 1133              		.loc 10 446 1 view .LVU275
 1134 0134 BDEC068B 		vldm	sp!, {d8-d10}
 1135              		.cfi_remember_state
 1136              		.cfi_restore 84
 1137              		.cfi_restore 85
 1138              		.cfi_restore 82
 1139              		.cfi_restore 83
 1140              		.cfi_restore 80
 1141              		.cfi_restore 81
 1142              		.cfi_def_cfa_offset 8
 1143              	.LVL71:
 1144              		.loc 10 446 1 view .LVU276
 1145 0138 10BD     		pop	{r4, pc}
 1146              	.LVL72:
 1147              	.L65:
 1148              		.cfi_restore_state
 1149              	.LBB428:
 1150              	.LBB413:
 432:MIDIController.cpp ****         hw.PrintLine("Knob2: %d", knob2_int);
 1151              		.loc 10 432 9 is_stmt 1 view .LVU277
 433:MIDIController.cpp ****         last_knob2 = knob2_value;
 1152              		.loc 10 433 9 view .LVU278
 1153              	.LBB414:
 1154              	.LBI414:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1155              		.loc 1 126 17 view .LVU279
 1156              	.LBE414:
 432:MIDIController.cpp ****         hw.PrintLine("Knob2: %d", knob2_int);
 1157              		.loc 10 432 43 is_stmt 0 view .LVU280
 1158 013a DFED247A 		vldr.32	s15, .L67+32
 1159              	.LBB417:
 1160              	.LBB415:
 1161              		.loc 1 128 23 view .LVU281
 1162 013e 2648     		ldr	r0, .L67+44
 1163              	.LBE415:
 1164              	.LBE417:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 56


 432:MIDIController.cpp ****         hw.PrintLine("Knob2: %d", knob2_int);
 1165              		.loc 10 432 43 view .LVU282
 1166 0140 68EEA77A 		vmul.f32	s15, s17, s15
 1167              	.LBB418:
 1168              	.LBB416:
 1169              		.loc 1 128 23 view .LVU283
 1170 0144 FDEEE77A 		vcvt.s32.f32	s15, s15
 1171 0148 17EE901A 		vmov	r1, s15	@ int
 1172 014c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1173              	.LVL73:
 1174              		.loc 1 128 23 view .LVU284
 1175              	.LBE416:
 1176              	.LBE418:
 434:MIDIController.cpp ****     }
 1177              		.loc 10 434 9 is_stmt 1 view .LVU285
 434:MIDIController.cpp ****     }
 1178              		.loc 10 434 20 is_stmt 0 view .LVU286
 1179 0150 C4ED008A 		vstr.32	s17, [r4]
 1180              	.LBE413:
 1181 0154 C2E7     		b	.L50
 1182              	.LVL74:
 1183              	.L64:
 434:MIDIController.cpp ****     }
 1184              		.loc 10 434 20 view .LVU287
 1185              	.LBE428:
 1186              	.LBB429:
 1187              	.LBB406:
 427:MIDIController.cpp ****         hw.PrintLine("Knob1: %d", knob1_int);
 1188              		.loc 10 427 9 is_stmt 1 view .LVU288
 428:MIDIController.cpp ****         last_knob1 = knob1_value;
 1189              		.loc 10 428 9 view .LVU289
 1190              	.LBB407:
 1191              	.LBI407:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1192              		.loc 1 126 17 view .LVU290
 1193              	.LBE407:
 427:MIDIController.cpp ****         hw.PrintLine("Knob1: %d", knob1_int);
 1194              		.loc 10 427 43 is_stmt 0 view .LVU291
 1195 0156 DFED1D7A 		vldr.32	s15, .L67+32
 1196              	.LBB410:
 1197              	.LBB408:
 1198              		.loc 1 128 23 view .LVU292
 1199 015a 2048     		ldr	r0, .L67+48
 1200              	.LBE408:
 1201              	.LBE410:
 427:MIDIController.cpp ****         hw.PrintLine("Knob1: %d", knob1_int);
 1202              		.loc 10 427 43 view .LVU293
 1203 015c 69EE277A 		vmul.f32	s15, s18, s15
 1204              	.LBB411:
 1205              	.LBB409:
 1206              		.loc 1 128 23 view .LVU294
 1207 0160 FDEEE77A 		vcvt.s32.f32	s15, s15
 1208 0164 17EE901A 		vmov	r1, s15	@ int
 1209 0168 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1210              	.LVL75:
 1211              		.loc 1 128 23 view .LVU295
 1212              	.LBE409:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 57


 1213              	.LBE411:
 429:MIDIController.cpp ****     }
 1214              		.loc 10 429 9 is_stmt 1 view .LVU296
 429:MIDIController.cpp ****     }
 1215              		.loc 10 429 20 is_stmt 0 view .LVU297
 1216 016c 84ED009A 		vstr.32	s18, [r4]
 1217              	.LBE406:
 1218 0170 A6E7     		b	.L48
 1219              	.LVL76:
 1220              	.L63:
 429:MIDIController.cpp ****     }
 1221              		.loc 10 429 20 view .LVU298
 1222              	.LBE429:
 1223              	.LBB430:
 1224              	.LBB399:
 422:MIDIController.cpp ****         hw.PrintLine("Fader3: %d", fader3_int);
 1225              		.loc 10 422 9 is_stmt 1 view .LVU299
 423:MIDIController.cpp ****         last_fader3 = fader3_value;
 1226              		.loc 10 423 9 view .LVU300
 1227              	.LBB400:
 1228              	.LBI400:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1229              		.loc 1 126 17 view .LVU301
 1230              	.LBE400:
 422:MIDIController.cpp ****         hw.PrintLine("Fader3: %d", fader3_int);
 1231              		.loc 10 422 45 is_stmt 0 view .LVU302
 1232 0172 DFED167A 		vldr.32	s15, .L67+32
 1233              	.LBB403:
 1234              	.LBB401:
 1235              		.loc 1 128 23 view .LVU303
 1236 0176 1A48     		ldr	r0, .L67+52
 1237              	.LBE401:
 1238              	.LBE403:
 422:MIDIController.cpp ****         hw.PrintLine("Fader3: %d", fader3_int);
 1239              		.loc 10 422 45 view .LVU304
 1240 0178 69EEA77A 		vmul.f32	s15, s19, s15
 1241              	.LBB404:
 1242              	.LBB402:
 1243              		.loc 1 128 23 view .LVU305
 1244 017c FDEEE77A 		vcvt.s32.f32	s15, s15
 1245 0180 17EE901A 		vmov	r1, s15	@ int
 1246 0184 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1247              	.LVL77:
 1248              		.loc 1 128 23 view .LVU306
 1249              	.LBE402:
 1250              	.LBE404:
 424:MIDIController.cpp ****     }
 1251              		.loc 10 424 9 is_stmt 1 view .LVU307
 424:MIDIController.cpp ****     }
 1252              		.loc 10 424 21 is_stmt 0 view .LVU308
 1253 0188 C4ED009A 		vstr.32	s19, [r4]
 1254              	.LBE399:
 1255 018c 8AE7     		b	.L46
 1256              	.LVL78:
 1257              	.L62:
 424:MIDIController.cpp ****     }
 1258              		.loc 10 424 21 view .LVU309
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 58


 1259              	.LBE430:
 1260              	.LBB431:
 1261              	.LBB392:
 417:MIDIController.cpp ****         hw.PrintLine("Fader2: %d", fader2_int);
 1262              		.loc 10 417 9 is_stmt 1 view .LVU310
 418:MIDIController.cpp ****         last_fader2 = fader2_value;
 1263              		.loc 10 418 9 view .LVU311
 1264              	.LBB393:
 1265              	.LBI393:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1266              		.loc 1 126 17 view .LVU312
 1267              	.LBE393:
 417:MIDIController.cpp ****         hw.PrintLine("Fader2: %d", fader2_int);
 1268              		.loc 10 417 45 is_stmt 0 view .LVU313
 1269 018e DFED0F7A 		vldr.32	s15, .L67+32
 1270              	.LBB396:
 1271              	.LBB394:
 1272              		.loc 1 128 23 view .LVU314
 1273 0192 1448     		ldr	r0, .L67+56
 1274              	.LBE394:
 1275              	.LBE396:
 417:MIDIController.cpp ****         hw.PrintLine("Fader2: %d", fader2_int);
 1276              		.loc 10 417 45 view .LVU315
 1277 0194 6AEE277A 		vmul.f32	s15, s20, s15
 1278              	.LBB397:
 1279              	.LBB395:
 1280              		.loc 1 128 23 view .LVU316
 1281 0198 FDEEE77A 		vcvt.s32.f32	s15, s15
 1282 019c 17EE901A 		vmov	r1, s15	@ int
 1283 01a0 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1284              	.LVL79:
 1285              		.loc 1 128 23 view .LVU317
 1286              	.LBE395:
 1287              	.LBE397:
 419:MIDIController.cpp ****     }
 1288              		.loc 10 419 9 is_stmt 1 view .LVU318
 419:MIDIController.cpp ****     }
 1289              		.loc 10 419 21 is_stmt 0 view .LVU319
 1290 01a4 84ED00AA 		vstr.32	s20, [r4]
 1291              	.LBE392:
 1292 01a8 6EE7     		b	.L44
 1293              	.L68:
 1294 01aa 00BF     		.align	2
 1295              	.L67:
 1296 01ac 18000000 		.word	.LANCHOR26+24
 1297 01b0 00000000 		.word	.LANCHOR28
 1298 01b4 0AD7233C 		.word	1008981770
 1299 01b8 00000000 		.word	.LANCHOR29
 1300 01bc 00000000 		.word	.LANCHOR30
 1301 01c0 00000000 		.word	.LANCHOR31
 1302 01c4 00000000 		.word	.LANCHOR32
 1303 01c8 00000000 		.word	.LANCHOR33
 1304 01cc 00007A44 		.word	1148846080
 1305 01d0 00000000 		.word	.LC1
 1306 01d4 3C000000 		.word	.LC6
 1307 01d8 30000000 		.word	.LC5
 1308 01dc 24000000 		.word	.LC4
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 59


 1309 01e0 18000000 		.word	.LC3
 1310 01e4 0C000000 		.word	.LC2
 1311              	.LBE431:
 1312              		.cfi_endproc
 1313              	.LFE4688:
 1315              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1316              		.align	2
 1317              	.LC7:
 1318 0000 53657269 		.ascii	"Serial Logger started!\000"
 1318      616C204C 
 1318      6F676765 
 1318      72207374 
 1318      61727465 
 1319 0017 00       		.align	2
 1320              	.LC8:
 1321 0018 42757474 		.ascii	"Button 1 pressed\000"
 1321      6F6E2031 
 1321      20707265 
 1321      73736564 
 1321      00
 1322 0029 000000   		.align	2
 1323              	.LC9:
 1324 002c 42757474 		.ascii	"Button 1 released\000"
 1324      6F6E2031 
 1324      2072656C 
 1324      65617365 
 1324      6400
 1325 003e 0000     		.align	2
 1326              	.LC10:
 1327 0040 42757474 		.ascii	"Button 2 pressed\000"
 1327      6F6E2032 
 1327      20707265 
 1327      73736564 
 1327      00
 1328 0051 000000   		.align	2
 1329              	.LC11:
 1330 0054 42757474 		.ascii	"Button 2 released\000"
 1330      6F6E2032 
 1330      2072656C 
 1330      65617365 
 1330      6400
 1331 0066 0000     		.align	2
 1332              	.LC12:
 1333 0068 42757474 		.ascii	"Button 3 pressed\000"
 1333      6F6E2033 
 1333      20707265 
 1333      73736564 
 1333      00
 1334 0079 000000   		.align	2
 1335              	.LC13:
 1336 007c 42757474 		.ascii	"Button 3 released\000"
 1336      6F6E2033 
 1336      2072656C 
 1336      65617365 
 1336      6400
 1337              		.section	.text.startup.main,"ax",%progbits
 1338              		.align	1
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 60


 1339              		.p2align 2,,3
 1340              		.global	main
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1345              	main:
 1346              	.LFB4689:
 447:MIDIController.cpp **** 
 448:MIDIController.cpp **** int main(void)
 449:MIDIController.cpp **** {   
 1347              		.loc 10 449 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 450:MIDIController.cpp ****      // hw.Configure(); 
 451:MIDIController.cpp **** 
 452:MIDIController.cpp **** 
 453:MIDIController.cpp ****    
 454:MIDIController.cpp **** 
 455:MIDIController.cpp ****     hw.Init();
 1351              		.loc 10 455 5 view .LVU321
 449:MIDIController.cpp ****      // hw.Configure(); 
 1352              		.loc 10 449 1 is_stmt 0 view .LVU322
 1353 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1354              		.cfi_def_cfa_offset 32
 1355              		.cfi_offset 3, -32
 1356              		.cfi_offset 4, -28
 1357              		.cfi_offset 5, -24
 1358              		.cfi_offset 6, -20
 1359              		.cfi_offset 7, -16
 1360              		.cfi_offset 8, -12
 1361              		.cfi_offset 9, -8
 1362              		.cfi_offset 14, -4
 1363              		.loc 10 455 12 view .LVU323
 1364 0004 0021     		movs	r1, #0
 1365 0006 3A48     		ldr	r0, .L79
 1366 0008 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 1367              	.LVL80:
 456:MIDIController.cpp ****     hw.Configure();
 1368              		.loc 10 456 5 is_stmt 1 view .LVU324
 1369              		.loc 10 456 17 is_stmt 0 view .LVU325
 1370 000c 3848     		ldr	r0, .L79
 1371 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 1372              	.LVL81:
 457:MIDIController.cpp ****     initButtons();
 1373              		.loc 10 457 5 is_stmt 1 view .LVU326
 458:MIDIController.cpp ****     InitFaders();
 459:MIDIController.cpp ****     testLEDs();
 460:MIDIController.cpp ****     InitEncoder();
 461:MIDIController.cpp ****     // InitI2C();
 462:MIDIController.cpp ****     // ScanI2C();
 463:MIDIController.cpp ****     // InitAccelerometer();
 464:MIDIController.cpp **** 
 465:MIDIController.cpp **** 
 466:MIDIController.cpp **** 
 467:MIDIController.cpp **** 
 468:MIDIController.cpp **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 61


 469:MIDIController.cpp **** 
 470:MIDIController.cpp **** 
 471:MIDIController.cpp **** 
 472:MIDIController.cpp **** 
 473:MIDIController.cpp **** 
 474:MIDIController.cpp ****     // InitAccelerometer();
 475:MIDIController.cpp ****     //This is our ADC configuration
 476:MIDIController.cpp ****     // AdcChannelConfig fader1cfg;
 477:MIDIController.cpp ****     // AdcChannelConfig fader2cfg;
 478:MIDIController.cpp ****     //Configure pin 21 as an ADC input. This is where we'll read the knob.
 479:MIDIController.cpp ****     // fader1cfg.InitSingle(hw.GetPin(15));
 480:MIDIController.cpp ****     // fader2cfg.InitSingle(hw.GetPin(16));
 481:MIDIController.cpp ****     // AdcChannelConfig faderCfg[2] = {fader1cfg, fader2cfg};
 482:MIDIController.cpp **** 
 483:MIDIController.cpp ****     //Initialize the adc with the config we just made
 484:MIDIController.cpp ****     // hw.adc.Init(&faderCfg, 2);
 485:MIDIController.cpp ****     //Start reading values
 486:MIDIController.cpp ****     // hw.adc.Start();
 487:MIDIController.cpp **** 
 488:MIDIController.cpp **** 
 489:MIDIController.cpp ****     // hw.StartLog();
 490:MIDIController.cpp ****     // hw.DelayMs(100);
 491:MIDIController.cpp ****     // hw.PrintLine("Serial Logger started!");
 492:MIDIController.cpp **** 
 493:MIDIController.cpp ****     bool useSerialLogger = true;
 494:MIDIController.cpp **** 
 495:MIDIController.cpp ****     if (useSerialLogger) {
 496:MIDIController.cpp ****         // Start the Serial Logger
 497:MIDIController.cpp ****         hw.StartLog();
 498:MIDIController.cpp ****         // hw.DelayMs(5000);
 499:MIDIController.cpp ****         hw.PrintLine("Serial Logger started!");
 500:MIDIController.cpp ****         // turn on the LED to indicate in serial mode
 501:MIDIController.cpp ****         hw.SetLed(true);
 502:MIDIController.cpp ****         
 503:MIDIController.cpp ****     }
 504:MIDIController.cpp ****         
 505:MIDIController.cpp ****     else {
 506:MIDIController.cpp ****         // Initialize USB MIDI
 507:MIDIController.cpp ****         MidiUsbHandler::Config midi_cfg;
 508:MIDIController.cpp ****         midi_cfg.transport_config.periph = MidiUsbTransport::Config::INTERNAL;
 509:MIDIController.cpp ****         midi.Init(midi_cfg);
 510:MIDIController.cpp ****         hw.SetLed(false);
 511:MIDIController.cpp ****     }
 512:MIDIController.cpp ****    
 513:MIDIController.cpp ****     
 514:MIDIController.cpp **** 
 515:MIDIController.cpp **** 
 516:MIDIController.cpp **** 
 517:MIDIController.cpp ****     // bool button_pressed =  false;
 518:MIDIController.cpp **** 
 519:MIDIController.cpp ****     // button_pressed = true;
 520:MIDIController.cpp **** 
 521:MIDIController.cpp ****     // hw.DelayMs(2000);
 522:MIDIController.cpp ****     
 523:MIDIController.cpp ****     // hw.PrintLine("Serial Logger initialized!");
 524:MIDIController.cpp ****     bool button1_last_state = true;
 525:MIDIController.cpp ****     bool button2_last_state = true;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 62


 526:MIDIController.cpp ****     bool button3_last_state = true;
 1374              		.loc 10 526 10 is_stmt 0 view .LVU327
 1375 0012 0127     		movs	r7, #1
 457:MIDIController.cpp ****     initButtons();
 1376              		.loc 10 457 16 view .LVU328
 1377 0014 FFF7FEFF 		bl	_Z11initButtonsv
 1378              	.LVL82:
 458:MIDIController.cpp ****     InitFaders();
 1379              		.loc 10 458 5 is_stmt 1 view .LVU329
 458:MIDIController.cpp ****     InitFaders();
 1380              		.loc 10 458 15 is_stmt 0 view .LVU330
 1381 0018 FFF7FEFF 		bl	_Z10InitFadersv
 1382              	.LVL83:
 459:MIDIController.cpp ****     InitEncoder();
 1383              		.loc 10 459 5 is_stmt 1 view .LVU331
 525:MIDIController.cpp ****     bool button3_last_state = true;
 1384              		.loc 10 525 10 is_stmt 0 view .LVU332
 1385 001c B946     		mov	r9, r7
 459:MIDIController.cpp ****     InitEncoder();
 1386              		.loc 10 459 13 view .LVU333
 1387 001e FFF7FEFF 		bl	_Z8testLEDsv
 1388              	.LVL84:
 460:MIDIController.cpp ****     // InitI2C();
 1389              		.loc 10 460 5 is_stmt 1 view .LVU334
 524:MIDIController.cpp ****     bool button2_last_state = true;
 1390              		.loc 10 524 10 is_stmt 0 view .LVU335
 1391 0022 B846     		mov	r8, r7
 460:MIDIController.cpp ****     // InitI2C();
 1392              		.loc 10 460 16 view .LVU336
 1393 0024 FFF7FEFF 		bl	_Z11InitEncoderv
 1394              	.LVL85:
 493:MIDIController.cpp **** 
 1395              		.loc 10 493 5 is_stmt 1 view .LVU337
 495:MIDIController.cpp ****         // Start the Serial Logger
 1396              		.loc 10 495 5 view .LVU338
 1397              	.LBB432:
 497:MIDIController.cpp ****         // hw.DelayMs(5000);
 1398              		.loc 10 497 9 view .LVU339
 1399              	.LBB433:
 1400              	.LBI433:
 129:../../libDaisy/src/daisy_seed.h ****     }
 130:../../libDaisy/src/daisy_seed.h **** 
 131:../../libDaisy/src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 132:../../libDaisy/src/daisy_seed.h ****     */
 133:../../libDaisy/src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 1401              		.loc 1 133 17 view .LVU340
 1402              	.LBB434:
 134:../../libDaisy/src/daisy_seed.h ****     {
 135:../../libDaisy/src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 1403              		.loc 1 135 9 view .LVU341
 1404              		.loc 1 135 22 is_stmt 0 view .LVU342
 1405 0028 0020     		movs	r0, #0
 1406 002a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 1407              	.LVL86:
 1408              		.loc 1 135 22 view .LVU343
 1409              	.LBE434:
 1410              	.LBE433:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 63


 499:MIDIController.cpp ****         // turn on the LED to indicate in serial mode
 1411              		.loc 10 499 9 is_stmt 1 view .LVU344
 1412              	.LBB435:
 1413              	.LBI435:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1414              		.loc 1 126 17 view .LVU345
 1415              	.LBB436:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1416              		.loc 1 128 23 is_stmt 0 view .LVU346
 1417 002e 3148     		ldr	r0, .L79+4
 1418 0030 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1419              	.LVL87:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1420              		.loc 1 128 23 view .LVU347
 1421              	.LBE436:
 1422              	.LBE435:
 501:MIDIController.cpp ****         
 1423              		.loc 10 501 9 is_stmt 1 view .LVU348
 501:MIDIController.cpp ****         
 1424              		.loc 10 501 18 is_stmt 0 view .LVU349
 1425 0034 3946     		mov	r1, r7
 1426 0036 2E48     		ldr	r0, .L79
 1427 0038 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1428              	.LVL88:
 1429              	.LBE432:
 524:MIDIController.cpp ****     bool button2_last_state = true;
 1430              		.loc 10 524 5 is_stmt 1 view .LVU350
 525:MIDIController.cpp ****     bool button3_last_state = true;
 1431              		.loc 10 525 5 view .LVU351
 1432              		.loc 10 526 5 view .LVU352
 1433              		.loc 10 526 5 is_stmt 0 view .LVU353
 1434 003c 23E0     		b	.L76
 1435              	.LVL89:
 1436              	.L78:
 1437              	.LBB437:
 527:MIDIController.cpp ****     // while(1)
 528:MIDIController.cpp ****     // {
 529:MIDIController.cpp ****     //     hw.DelayMs(1);
 530:MIDIController.cpp ****     //     // print to serial the fader value
 531:MIDIController.cpp ****     //     // hw.PrintLine("Fader Value: %f", hw.adc.GetFloat(0));
 532:MIDIController.cpp **** 
 533:MIDIController.cpp **** 
 534:MIDIController.cpp **** 
 535:MIDIController.cpp **** 
 536:MIDIController.cpp ****     //     bool button1_state = ! button1.Read();
 537:MIDIController.cpp ****     //     bool button2_state = ! button2.Read();
 538:MIDIController.cpp ****     //     bool button3_state = ! button3.Read();
 539:MIDIController.cpp ****     //     // hw.PrintLine("Logger is enabled");
 540:MIDIController.cpp ****     //     // hw.PrintLine("Button State: %s", button1_state ? "true" : "false");
 541:MIDIController.cpp ****     //     // Check button state
 542:MIDIController.cpp ****     //     if (button1_state != button1_last_state){
 543:MIDIController.cpp ****     //         button1_state = button1.Read(); // read again to make sure the state is stable
 544:MIDIController.cpp ****     //         if (button1_state == 0) {
 545:MIDIController.cpp ****     //             hw.SetLed(true);
 546:MIDIController.cpp ****     //             // hw.PrintLine("Button pressed ");
 547:MIDIController.cpp ****     //             uint8_t note_on[3] = {0x90, 60, 100};  // 0x90 = Note On channel 0, middle C, ve
 548:MIDIController.cpp ****     //             if (useSerialLogger) {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 64


 549:MIDIController.cpp ****     //                 // hw.Print("Midi message is: ");
 550:MIDIController.cpp ****     //                 // for (int i = 0; i < 3; i++) {
 551:MIDIController.cpp ****     //                 //     hw.Print("%d ", note_on[i]);
 552:MIDIController.cpp ****     //                 // }
 553:MIDIController.cpp ****     //                 hw.PrintLine("Button 1 pressed\n");
 554:MIDIController.cpp ****     //             }
 555:MIDIController.cpp ****     //             else {
 556:MIDIController.cpp ****     //                 midi.SendMessage(note_on, sizeof(note_on));
 557:MIDIController.cpp ****     //             }
 558:MIDIController.cpp ****     //             // hw.Print("Midi message is %d", note_on);
 559:MIDIController.cpp ****     //             // midi.SendMessage(note_on, sizeof(note_on));
 560:MIDIController.cpp ****                 
 561:MIDIController.cpp ****     //             // Note On for middle C with velocity 100
 562:MIDIController.cpp ****     //         }
 563:MIDIController.cpp ****     //         else {
 564:MIDIController.cpp ****     //             hw.SetLed(false);
 565:MIDIController.cpp ****     //             // Button released
 566:MIDIController.cpp ****     //             // hw.PrintLine("Button released ");
 567:MIDIController.cpp ****     //             // button_pressed = false;
 568:MIDIController.cpp ****     //             uint8_t note_off[3] = {0x80, 60, 0};  // 0890 = Note Off channel 0, middle C, ve
 569:MIDIController.cpp ****     //             if (useSerialLogger) {
 570:MIDIController.cpp ****     //                 // hw.Print("Midi message is: ");
 571:MIDIController.cpp ****     //                 // for (int i = 0; i < 3; i++) {
 572:MIDIController.cpp ****     //                 //     hw.Print("%d ", note_off[i]);
 573:MIDIController.cpp ****     //                 // }
 574:MIDIController.cpp ****     //                 hw.PrintLine("Button 1 released\n");
 575:MIDIController.cpp ****     //             }
 576:MIDIController.cpp ****     //             else {
 577:MIDIController.cpp ****     //                 midi.SendMessage(note_off, sizeof(note_off));
 578:MIDIController.cpp ****     //             }
 579:MIDIController.cpp **** 
 580:MIDIController.cpp ****     //             // hw.Print("Midi message is %d", note_off);
 581:MIDIController.cpp ****     //             // midi.SendMessage(note_off, sizeof(note_off));
 582:MIDIController.cpp ****     //             // midi.SendMessage(MidiEvent::NoteOff(60, 0)); // Note Off for middle C
 583:MIDIController.cpp ****     //         }
 584:MIDIController.cpp ****     //         button1_last_state = button1_state;
 585:MIDIController.cpp ****             
 586:MIDIController.cpp ****     //     }
 587:MIDIController.cpp ****     //     if (button2_state != button2_last_state){
 588:MIDIController.cpp ****     //         button2_state = button2.Read(); // read again to make sure the state is stable
 589:MIDIController.cpp ****     //         if (button2_state == 0) {
 590:MIDIController.cpp ****     //             hw.SetLed(true);
 591:MIDIController.cpp ****     //             // hw.PrintLine("Button pressed ");
 592:MIDIController.cpp ****     //             uint8_t note_on[3] = {0x90, 60, 100};  // 0x90 = Note On channel 0, middle C, ve
 593:MIDIController.cpp ****     //             if (useSerialLogger) {
 594:MIDIController.cpp ****     //                 // hw.Print("Midi message is: ");
 595:MIDIController.cpp ****     //                 // for (int i = 0; i < 3; i++) {
 596:MIDIController.cpp ****     //                 //     hw.Print("%d ", note_on[i]);
 597:MIDIController.cpp ****     //                 // }
 598:MIDIController.cpp ****     //                 hw.PrintLine("Button 2 pressed\n");
 599:MIDIController.cpp ****     //             }
 600:MIDIController.cpp ****     //             else {
 601:MIDIController.cpp ****     //                 midi.SendMessage(note_on, sizeof(note_on));
 602:MIDIController.cpp ****     //             }
 603:MIDIController.cpp ****     //             // hw.Print("Midi message is %d", note_on);
 604:MIDIController.cpp ****     //             // midi.SendMessage(note_on, sizeof(note_on));
 605:MIDIController.cpp ****                 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 65


 606:MIDIController.cpp ****     //             // Note On for middle C with velocity 100
 607:MIDIController.cpp ****     //         }
 608:MIDIController.cpp ****     //         else {
 609:MIDIController.cpp ****     //             hw.SetLed(false);
 610:MIDIController.cpp ****     //             // Button released
 611:MIDIController.cpp ****     //             // hw.PrintLine("Button released ");
 612:MIDIController.cpp ****     //             // button_pressed = false;
 613:MIDIController.cpp ****     //             uint8_t note_off[3] = {0x80, 60, 0};  // 0890 = Note Off channel 0, middle C, ve
 614:MIDIController.cpp ****     //             if (useSerialLogger) {
 615:MIDIController.cpp ****     //                 // hw.Print("Midi message is: ");
 616:MIDIController.cpp ****     //                 // for (int i = 0; i < 3; i++) {
 617:MIDIController.cpp ****     //                 //     hw.Print("%d ", note_off[i]);
 618:MIDIController.cpp ****     //                 // }
 619:MIDIController.cpp ****     //                 hw.PrintLine("Button 2 released\n");
 620:MIDIController.cpp ****     //             }
 621:MIDIController.cpp ****     //             else {
 622:MIDIController.cpp ****     //                 midi.SendMessage(note_off, sizeof(note_off));
 623:MIDIController.cpp ****     //             }
 624:MIDIController.cpp **** 
 625:MIDIController.cpp ****     //             // hw.Print("Midi message is %d", note_off);
 626:MIDIController.cpp ****     //             // midi.SendMessage(note_off, sizeof(note_off));
 627:MIDIController.cpp ****     //             // midi.SendMessage(MidiEvent::NoteOff(60, 0)); // Note Off for middle C
 628:MIDIController.cpp ****     //         }
 629:MIDIController.cpp ****     //         button2_last_state = button2_state;
 630:MIDIController.cpp ****             
 631:MIDIController.cpp ****     //     }
 632:MIDIController.cpp ****         
 633:MIDIController.cpp ****     // }
 634:MIDIController.cpp ****     while(1) {
 635:MIDIController.cpp ****         hw.DelayMs(1);
 636:MIDIController.cpp **** 
 637:MIDIController.cpp ****         // Read current button states (invert because of pull-up)
 638:MIDIController.cpp ****         bool button1_current = !button1.Read();
 639:MIDIController.cpp ****         bool button2_current = !button2.Read();
 640:MIDIController.cpp ****         bool button3_current = !button3.Read();
 641:MIDIController.cpp **** 
 642:MIDIController.cpp ****         // Only handle state changes
 643:MIDIController.cpp ****         if (button1_current != button1_last_state) {
 644:MIDIController.cpp ****             if (button1_current) {
 645:MIDIController.cpp ****                 hw.PrintLine("Button 1 pressed");
 1438              		.loc 10 645 17 is_stmt 1 view .LVU354
 1439              	.LBB438:
 1440              	.LBI438:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1441              		.loc 1 126 17 view .LVU355
 1442              	.LBB439:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1443              		.loc 1 128 23 is_stmt 0 view .LVU356
 1444 003e 2E48     		ldr	r0, .L79+8
 1445 0040 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1446              	.LVL90:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1447              		.loc 1 128 23 view .LVU357
 1448              	.LBE439:
 1449              	.LBE438:
 646:MIDIController.cpp ****                 hw.SetLed(true);
 1450              		.loc 10 646 17 is_stmt 1 view .LVU358
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 66


 1451              		.loc 10 646 26 is_stmt 0 view .LVU359
 1452 0044 0121     		movs	r1, #1
 1453 0046 2A48     		ldr	r0, .L79
 1454 0048 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1455              	.LVL91:
 1456              	.L70:
 647:MIDIController.cpp ****             } else {
 648:MIDIController.cpp ****                 hw.PrintLine("Button 1 released");
 649:MIDIController.cpp ****                 hw.SetLed(false);
 650:MIDIController.cpp ****             }
 651:MIDIController.cpp ****             button1_last_state = button1_current;
 652:MIDIController.cpp ****         }
 653:MIDIController.cpp **** 
 654:MIDIController.cpp ****         if (button2_current != button2_last_state) {
 1457              		.loc 10 654 9 is_stmt 1 view .LVU360
 1458 004c B145     		cmp	r9, r6
 1459 004e 08D0     		beq	.L72
 655:MIDIController.cpp ****             if (button2_current) {
 1460              		.loc 10 655 13 view .LVU361
 1461 0050 002E     		cmp	r6, #0
 1462 0052 3CD0     		beq	.L73
 656:MIDIController.cpp ****                 hw.PrintLine("Button 2 pressed");
 1463              		.loc 10 656 17 view .LVU362
 1464              	.LVL92:
 1465              	.LBB440:
 1466              	.LBI440:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1467              		.loc 1 126 17 view .LVU363
 1468              	.LBB441:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1469              		.loc 1 128 23 is_stmt 0 view .LVU364
 1470 0054 2948     		ldr	r0, .L79+12
 1471 0056 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1472              	.LVL93:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1473              		.loc 1 128 23 view .LVU365
 1474              	.LBE441:
 1475              	.LBE440:
 657:MIDIController.cpp ****                 hw.SetLed(true);
 1476              		.loc 10 657 17 is_stmt 1 view .LVU366
 1477              		.loc 10 657 26 is_stmt 0 view .LVU367
 1478 005a 0121     		movs	r1, #1
 1479 005c 2448     		ldr	r0, .L79
 1480 005e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1481              	.LVL94:
 1482              	.L72:
 658:MIDIController.cpp ****             } else {
 659:MIDIController.cpp ****                 hw.PrintLine("Button 2 released");
 660:MIDIController.cpp ****                 hw.SetLed(false);
 661:MIDIController.cpp ****             }
 662:MIDIController.cpp ****             button2_last_state = button2_current;
 663:MIDIController.cpp ****         }
 664:MIDIController.cpp ****         if (button3_current != button3_last_state) {
 1483              		.loc 10 664 9 is_stmt 1 view .LVU368
 1484 0062 A742     		cmp	r7, r4
 1485 0064 08D0     		beq	.L74
 665:MIDIController.cpp ****             if (button3_current) {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 67


 1486              		.loc 10 665 13 view .LVU369
 1487 0066 002C     		cmp	r4, #0
 1488 0068 39D0     		beq	.L75
 666:MIDIController.cpp ****                 hw.PrintLine("Button 3 pressed");
 1489              		.loc 10 666 17 view .LVU370
 1490              	.LVL95:
 1491              	.LBB442:
 1492              	.LBI442:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1493              		.loc 1 126 17 view .LVU371
 1494              	.LBB443:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1495              		.loc 1 128 23 is_stmt 0 view .LVU372
 1496 006a 2548     		ldr	r0, .L79+16
 1497 006c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1498              	.LVL96:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1499              		.loc 1 128 23 view .LVU373
 1500              	.LBE443:
 1501              	.LBE442:
 667:MIDIController.cpp ****                 hw.SetLed(true);
 1502              		.loc 10 667 17 is_stmt 1 view .LVU374
 1503              		.loc 10 667 26 is_stmt 0 view .LVU375
 1504 0070 0121     		movs	r1, #1
 1505 0072 1F48     		ldr	r0, .L79
 1506 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1507              	.LVL97:
 1508              	.L74:
 668:MIDIController.cpp ****             } else {
 669:MIDIController.cpp ****                 hw.PrintLine("Button 3 released");
 670:MIDIController.cpp ****                 hw.SetLed(false);
 671:MIDIController.cpp ****             }
 672:MIDIController.cpp ****             button3_last_state = button3_current;
 673:MIDIController.cpp ****         }
 674:MIDIController.cpp **** 
 675:MIDIController.cpp **** 
 676:MIDIController.cpp ****         // read faders
 677:MIDIController.cpp ****         ReadFaders();
 1509              		.loc 10 677 9 is_stmt 1 view .LVU376
 1510              	.LBE437:
 678:MIDIController.cpp **** 
 679:MIDIController.cpp ****         // read encoder
 680:MIDIController.cpp ****         ReadEncoder();
 681:MIDIController.cpp **** 
 682:MIDIController.cpp ****         // read accelerometer
 683:MIDIController.cpp ****         // ReadAccelerometer();
 684:MIDIController.cpp ****     }
 1511              		.loc 10 684 5 is_stmt 0 view .LVU377
 1512 0078 2746     		mov	r7, r4
 1513 007a B146     		mov	r9, r6
 1514 007c A846     		mov	r8, r5
 1515              	.LBB450:
 677:MIDIController.cpp **** 
 1516              		.loc 10 677 19 view .LVU378
 1517 007e FFF7FEFF 		bl	_Z10ReadFadersv
 1518              	.LVL98:
 680:MIDIController.cpp **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 68


 1519              		.loc 10 680 9 is_stmt 1 view .LVU379
 680:MIDIController.cpp **** 
 1520              		.loc 10 680 20 is_stmt 0 view .LVU380
 1521 0082 FFF7FEFF 		bl	_Z11ReadEncoderv
 1522              	.LVL99:
 1523              	.LBE450:
 634:MIDIController.cpp ****         hw.DelayMs(1);
 1524              		.loc 10 634 5 is_stmt 1 view .LVU381
 1525              	.L76:
 634:MIDIController.cpp ****         hw.DelayMs(1);
 1526              		.loc 10 634 5 view .LVU382
 1527              	.LBB451:
 635:MIDIController.cpp **** 
 1528              		.loc 10 635 9 view .LVU383
 635:MIDIController.cpp **** 
 1529              		.loc 10 635 19 is_stmt 0 view .LVU384
 1530 0086 0121     		movs	r1, #1
 1531 0088 1948     		ldr	r0, .L79
 1532 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed7DelayMsEj
 1533              	.LVL100:
 638:MIDIController.cpp ****         bool button2_current = !button2.Read();
 1534              		.loc 10 638 9 is_stmt 1 view .LVU385
 638:MIDIController.cpp ****         bool button2_current = !button2.Read();
 1535              		.loc 10 638 45 is_stmt 0 view .LVU386
 1536 008e 1D48     		ldr	r0, .L79+20
 1537 0090 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1538              	.LVL101:
 1539 0094 0546     		mov	r5, r0
 639:MIDIController.cpp ****         bool button3_current = !button3.Read();
 1540              		.loc 10 639 45 view .LVU387
 1541 0096 1C48     		ldr	r0, .L79+24
 638:MIDIController.cpp ****         bool button2_current = !button2.Read();
 1542              		.loc 10 638 46 view .LVU388
 1543 0098 85F00105 		eor	r5, r5, #1
 639:MIDIController.cpp ****         bool button3_current = !button3.Read();
 1544              		.loc 10 639 45 view .LVU389
 1545 009c FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1546              	.LVL102:
 1547 00a0 0646     		mov	r6, r0
 640:MIDIController.cpp **** 
 1548              		.loc 10 640 45 view .LVU390
 1549 00a2 1A48     		ldr	r0, .L79+28
 638:MIDIController.cpp ****         bool button2_current = !button2.Read();
 1550              		.loc 10 638 46 view .LVU391
 1551 00a4 EDB2     		uxtb	r5, r5
 1552              	.LVL103:
 639:MIDIController.cpp ****         bool button3_current = !button3.Read();
 1553              		.loc 10 639 9 is_stmt 1 view .LVU392
 640:MIDIController.cpp **** 
 1554              		.loc 10 640 45 is_stmt 0 view .LVU393
 1555 00a6 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1556              	.LVL104:
 639:MIDIController.cpp ****         bool button3_current = !button3.Read();
 1557              		.loc 10 639 46 view .LVU394
 1558 00aa 86F00106 		eor	r6, r6, #1
 640:MIDIController.cpp **** 
 1559              		.loc 10 640 46 view .LVU395
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 69


 1560 00ae 80F00100 		eor	r0, r0, #1
 643:MIDIController.cpp ****             if (button1_current) {
 1561              		.loc 10 643 9 view .LVU396
 1562 00b2 A845     		cmp	r8, r5
 639:MIDIController.cpp ****         bool button3_current = !button3.Read();
 1563              		.loc 10 639 46 view .LVU397
 1564 00b4 F6B2     		uxtb	r6, r6
 1565              	.LVL105:
 640:MIDIController.cpp **** 
 1566              		.loc 10 640 9 is_stmt 1 view .LVU398
 640:MIDIController.cpp **** 
 1567              		.loc 10 640 46 is_stmt 0 view .LVU399
 1568 00b6 C4B2     		uxtb	r4, r0
 1569              	.LVL106:
 643:MIDIController.cpp ****             if (button1_current) {
 1570              		.loc 10 643 9 is_stmt 1 view .LVU400
 1571 00b8 C8D0     		beq	.L70
 644:MIDIController.cpp ****                 hw.PrintLine("Button 1 pressed");
 1572              		.loc 10 644 13 view .LVU401
 1573 00ba 002D     		cmp	r5, #0
 1574 00bc BFD1     		bne	.L78
 648:MIDIController.cpp ****                 hw.SetLed(false);
 1575              		.loc 10 648 17 view .LVU402
 1576              	.LVL107:
 1577              	.LBB444:
 1578              	.LBI444:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1579              		.loc 1 126 17 view .LVU403
 1580              	.LBB445:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1581              		.loc 1 128 23 is_stmt 0 view .LVU404
 1582 00be 1448     		ldr	r0, .L79+32
 1583 00c0 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1584              	.LVL108:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1585              		.loc 1 128 23 view .LVU405
 1586              	.LBE445:
 1587              	.LBE444:
 649:MIDIController.cpp ****             }
 1588              		.loc 10 649 17 is_stmt 1 view .LVU406
 649:MIDIController.cpp ****             }
 1589              		.loc 10 649 26 is_stmt 0 view .LVU407
 1590 00c4 2946     		mov	r1, r5
 1591 00c6 0A48     		ldr	r0, .L79
 1592 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1593              	.LVL109:
 1594 00cc BEE7     		b	.L70
 1595              	.LVL110:
 1596              	.L73:
 659:MIDIController.cpp ****                 hw.SetLed(false);
 1597              		.loc 10 659 17 is_stmt 1 view .LVU408
 1598              	.LBB446:
 1599              	.LBI446:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1600              		.loc 1 126 17 view .LVU409
 1601              	.LBB447:
 128:../../libDaisy/src/daisy_seed.h ****     }
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 70


 1602              		.loc 1 128 23 is_stmt 0 view .LVU410
 1603 00ce 1148     		ldr	r0, .L79+36
 1604 00d0 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1605              	.LVL111:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1606              		.loc 1 128 23 view .LVU411
 1607              	.LBE447:
 1608              	.LBE446:
 660:MIDIController.cpp ****             }
 1609              		.loc 10 660 17 is_stmt 1 view .LVU412
 660:MIDIController.cpp ****             }
 1610              		.loc 10 660 26 is_stmt 0 view .LVU413
 1611 00d4 3146     		mov	r1, r6
 1612 00d6 0648     		ldr	r0, .L79
 1613 00d8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1614              	.LVL112:
 1615 00dc C1E7     		b	.L72
 1616              	.LVL113:
 1617              	.L75:
 669:MIDIController.cpp ****                 hw.SetLed(false);
 1618              		.loc 10 669 17 is_stmt 1 view .LVU414
 1619              	.LBB448:
 1620              	.LBI448:
 126:../../libDaisy/src/daisy_seed.h ****     {
 1621              		.loc 1 126 17 view .LVU415
 1622              	.LBB449:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1623              		.loc 1 128 23 is_stmt 0 view .LVU416
 1624 00de 0E48     		ldr	r0, .L79+40
 1625 00e0 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1626              	.LVL114:
 128:../../libDaisy/src/daisy_seed.h ****     }
 1627              		.loc 1 128 23 view .LVU417
 1628              	.LBE449:
 1629              	.LBE448:
 670:MIDIController.cpp ****             }
 1630              		.loc 10 670 17 is_stmt 1 view .LVU418
 670:MIDIController.cpp ****             }
 1631              		.loc 10 670 26 is_stmt 0 view .LVU419
 1632 00e4 2146     		mov	r1, r4
 1633 00e6 0248     		ldr	r0, .L79
 1634 00e8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1635              	.LVL115:
 1636 00ec C4E7     		b	.L74
 1637              	.L80:
 1638 00ee 00BF     		.align	2
 1639              	.L79:
 1640 00f0 00000000 		.word	.LANCHOR26
 1641 00f4 00000000 		.word	.LC7
 1642 00f8 18000000 		.word	.LC8
 1643 00fc 40000000 		.word	.LC10
 1644 0100 68000000 		.word	.LC12
 1645 0104 00000000 		.word	.LANCHOR1
 1646 0108 00000000 		.word	.LANCHOR3
 1647 010c 00000000 		.word	.LANCHOR5
 1648 0110 2C000000 		.word	.LC9
 1649 0114 54000000 		.word	.LC11
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 71


 1650 0118 7C000000 		.word	.LC13
 1651              	.LBE451:
 1652              		.cfi_endproc
 1653              	.LFE4689:
 1655              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 1656              		.align	1
 1657              		.p2align 2,,3
 1658              		.syntax unified
 1659              		.thumb
 1660              		.thumb_func
 1662              	_GLOBAL__sub_I_hw:
 1663              	.LFB5277:
 685:MIDIController.cpp **** }...
 1664              		.loc 10 685 1 is_stmt 1 view -0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 0
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 1668              	.LBB562:
 1669              	.LBI562:
 1670              		.loc 10 685 1 view .LVU421
 1671              	.LVL116:
 1672              	.LBB563:
 1673              	.LBB564:
 1674              	.LBI564:
  21:../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 1675              		.loc 1 21 5 view .LVU422
 1676              	.LBB565:
 1677              	.LBB566:
 1678              	.LBI566:
 1679              		.file 12 "../../libDaisy/src/per/qspi.h"
   1:../../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy/src/per/qspi.h **** 
   4:../../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy/src/per/qspi.h **** 
   6:../../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy/src/per/qspi.h **** 
   9:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy/src/per/qspi.h **** 
  19:../../libDaisy/src/per/qspi.h **** namespace daisy
  20:../../libDaisy/src/per/qspi.h **** {
  21:../../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy/src/per/qspi.h **** @{
  23:../../libDaisy/src/per/qspi.h **** */
  24:../../libDaisy/src/per/qspi.h **** 
  25:../../libDaisy/src/per/qspi.h **** /** 
  26:../../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 72


  28:../../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy/src/per/qspi.h **** */
  30:../../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy/src/per/qspi.h **** {
  32:../../libDaisy/src/per/qspi.h ****   public:
  33:../../libDaisy/src/per/qspi.h ****     enum Result
  34:../../libDaisy/src/per/qspi.h ****     {
  35:../../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../../libDaisy/src/per/qspi.h ****         ERR
  37:../../libDaisy/src/per/qspi.h ****     };
  38:../../libDaisy/src/per/qspi.h **** 
  39:../../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy/src/per/qspi.h ****          * 
  43:../../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy/src/per/qspi.h ****          */
  48:../../libDaisy/src/per/qspi.h ****     enum Status
  49:../../libDaisy/src/per/qspi.h ****     {
  50:../../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy/src/per/qspi.h ****     };
  55:../../libDaisy/src/per/qspi.h **** 
  56:../../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy/src/per/qspi.h ****     struct Config
  58:../../libDaisy/src/per/qspi.h ****     {
  59:../../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy/src/per/qspi.h ****         enum Device
  61:../../libDaisy/src/per/qspi.h ****         {
  62:../../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy/src/per/qspi.h ****         };
  66:../../libDaisy/src/per/qspi.h **** 
  67:../../libDaisy/src/per/qspi.h ****         /** 
  68:../../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy/src/per/qspi.h ****         */
  74:../../libDaisy/src/per/qspi.h ****         enum Mode
  75:../../libDaisy/src/per/qspi.h ****         {
  76:../../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy/src/per/qspi.h ****         };
  80:../../libDaisy/src/per/qspi.h **** 
  81:../../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy/src/per/qspi.h ****         struct
  83:../../libDaisy/src/per/qspi.h ****         {
  84:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 73


  85:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../../libDaisy/src/per/qspi.h **** 
  92:../../libDaisy/src/per/qspi.h ****         Device device;
  93:../../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy/src/per/qspi.h ****     };
  95:../../libDaisy/src/per/qspi.h **** 
  96:../../libDaisy/src/per/qspi.h ****     /** 
  97:../../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy/src/per/qspi.h ****         */
 101:../../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy/src/per/qspi.h **** 
 103:../../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy/src/per/qspi.h **** 
 106:../../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy/src/per/qspi.h ****     /** 
 109:../../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy/src/per/qspi.h ****         */
 113:../../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy/src/per/qspi.h **** 
 115:../../libDaisy/src/per/qspi.h ****     /** 
 116:../../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy/src/per/qspi.h ****         */
 123:../../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy/src/per/qspi.h **** 
 125:../../libDaisy/src/per/qspi.h ****     /** 
 126:../../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy/src/per/qspi.h ****         */
 132:../../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy/src/per/qspi.h **** 
 134:../../libDaisy/src/per/qspi.h ****     /** 
 135:../../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy/src/per/qspi.h ****         */
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 74


 142:../../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy/src/per/qspi.h **** 
 144:../../libDaisy/src/per/qspi.h ****     /**  
 145:../../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy/src/per/qspi.h ****         */
 150:../../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy/src/per/qspi.h **** 
 152:../../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy/src/per/qspi.h ****      */
 155:../../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy/src/per/qspi.h **** 
 157:../../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy/src/per/qspi.h ****      * 
 161:../../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy/src/per/qspi.h ****     */
 164:../../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy/src/per/qspi.h **** 
 166:../../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1680              		.loc 12 166 5 view .LVU423
 1681              	.LBE566:
 1682              	.LBE565:
 1683              	.LBE564:
 1684              	.LBE563:
 1685              	.LBE562:
 1686              		.loc 10 685 1 is_stmt 0 view .LVU424
 1687 0000 10B5     		push	{r4, lr}
 1688              		.cfi_def_cfa_offset 8
 1689              		.cfi_offset 4, -8
 1690              		.cfi_offset 14, -4
 1691              	.LBB713:
 1692              	.LBB712:
 1693              	.LBB587:
 1694              	.LBB585:
 1695              	.LBB571:
 1696              	.LBB567:
 1697              	.LBB568:
 1698              		.loc 12 166 34 view .LVU425
 1699 0002 2948     		ldr	r0, .L83
 1700 0004 0024     		movs	r4, #0
 1701              	.LBE568:
 1702              	.LBE567:
 1703              	.LBE571:
 1704              	.LBE585:
 1705              	.LBE587:
  19:MIDIController.cpp **** DaisySeed hw;
 1706              		.loc 10 19 11 view .LVU426
 1707 0006 294A     		ldr	r2, .L83+4
 1708 0008 2949     		ldr	r1, .L83+8
 1709              	.LBB588:
 1710              	.LBB586:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 75


 1711              	.LBB572:
 1712              	.LBB570:
 1713              	.LBB569:
 1714              		.loc 12 166 34 view .LVU427
 1715 000a 0460     		str	r4, [r0]
 1716              	.LVL117:
 1717              		.loc 12 166 34 view .LVU428
 1718              	.LBE569:
 1719              	.LBE570:
 1720              	.LBE572:
 1721              	.LBB573:
 1722              	.LBI573:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 1723              		.loc 5 95 5 is_stmt 1 view .LVU429
 1724              	.LBB574:
 1725              	.LBB575:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 1726              		.loc 5 95 35 is_stmt 0 view .LVU430
 1727 000c 4461     		str	r4, [r0, #20]
 1728              	.LVL118:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 1729              		.loc 5 95 35 view .LVU431
 1730              	.LBE575:
 1731              	.LBE574:
 1732              	.LBE573:
 1733              	.LBB576:
 1734              	.LBI576:
 109:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 1735              		.loc 4 109 5 is_stmt 1 view .LVU432
 109:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 1736              		.loc 4 109 5 is_stmt 0 view .LVU433
 1737              	.LBE576:
 1738              	.LBB577:
 1739              	.LBI577:
 1740              		.file 13 "../../libDaisy/src/per/dac.h"
   1:../../libDaisy/src/per/dac.h **** #pragma once
   2:../../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy/src/per/dac.h **** 
   5:../../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy/src/per/dac.h **** 
   7:../../libDaisy/src/per/dac.h **** namespace daisy
   8:../../libDaisy/src/per/dac.h **** {
   9:../../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy/src/per/dac.h ****  ** 
  12:../../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy/src/per/dac.h ****  **
  15:../../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy/src/per/dac.h ****  **
  17:../../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy/src/per/dac.h ****  ***/
  21:../../libDaisy/src/per/dac.h **** class DacHandle
  22:../../libDaisy/src/per/dac.h **** {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 76


  23:../../libDaisy/src/per/dac.h ****   public:
  24:../../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy/src/per/dac.h ****     enum class Result
  26:../../libDaisy/src/per/dac.h ****     {
  27:../../libDaisy/src/per/dac.h ****         OK,
  28:../../libDaisy/src/per/dac.h ****         ERR,
  29:../../libDaisy/src/per/dac.h ****     };
  30:../../libDaisy/src/per/dac.h **** 
  31:../../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy/src/per/dac.h ****     enum class Channel
  33:../../libDaisy/src/per/dac.h ****     {
  34:../../libDaisy/src/per/dac.h ****         ONE,
  35:../../libDaisy/src/per/dac.h ****         TWO,
  36:../../libDaisy/src/per/dac.h ****         BOTH,
  37:../../libDaisy/src/per/dac.h ****     };
  38:../../libDaisy/src/per/dac.h **** 
  39:../../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy/src/per/dac.h ****      **
  41:../../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy/src/per/dac.h ****      **
  43:../../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy/src/per/dac.h ****      ***/
  46:../../libDaisy/src/per/dac.h ****     enum class Mode
  47:../../libDaisy/src/per/dac.h ****     {
  48:../../libDaisy/src/per/dac.h ****         POLLING,
  49:../../libDaisy/src/per/dac.h ****         DMA,
  50:../../libDaisy/src/per/dac.h ****     };
  51:../../libDaisy/src/per/dac.h **** 
  52:../../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy/src/per/dac.h ****      ***/
  56:../../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy/src/per/dac.h ****     {
  58:../../libDaisy/src/per/dac.h ****         BITS_8,
  59:../../libDaisy/src/per/dac.h ****         BITS_12
  60:../../libDaisy/src/per/dac.h ****     };
  61:../../libDaisy/src/per/dac.h **** 
  62:../../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../../libDaisy/src/per/dac.h ****     {
  65:../../libDaisy/src/per/dac.h ****         ENABLED,
  66:../../libDaisy/src/per/dac.h ****         DISABLED,
  67:../../libDaisy/src/per/dac.h ****     };
  68:../../libDaisy/src/per/dac.h **** 
  69:../../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy/src/per/dac.h ****     struct Config
  71:../../libDaisy/src/per/dac.h ****     {
  72:../../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy/src/per/dac.h **** 
  78:../../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../../libDaisy/src/per/dac.h ****         Mode        mode;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 77


  80:../../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy/src/per/dac.h ****     };
  83:../../libDaisy/src/per/dac.h **** 
  84:../../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1741              		.loc 13 84 5 is_stmt 1 view .LVU434
 1742              	.LBB578:
 1743              	.LBB579:
 1744              		.loc 13 84 33 is_stmt 0 view .LVU435
 1745 000e 0462     		str	r4, [r0, #32]
 1746              	.LVL119:
 1747              		.loc 13 84 33 view .LVU436
 1748              	.LBE579:
 1749              	.LBE578:
 1750              	.LBE577:
 1751              	.LBB580:
 1752              	.LBI580:
  40:../../libDaisy/src/hid/usb.h **** 
 1753              		.loc 3 40 5 is_stmt 1 view .LVU437
  40:../../libDaisy/src/hid/usb.h **** 
 1754              		.loc 3 40 5 is_stmt 0 view .LVU438
 1755              	.LBE580:
 1756              	.LBB581:
 1757              	.LBI581:
  96:../../libDaisy/src/sys/system.h ****     ~System() {}
 1758              		.loc 2 96 5 is_stmt 1 view .LVU439
  96:../../libDaisy/src/sys/system.h ****     ~System() {}
 1759              		.loc 2 96 5 is_stmt 0 view .LVU440
 1760              	.LBE581:
 1761              	.LBB582:
 1762              	.LBI582:
 1763              		.file 14 "../../libDaisy/src/per/sai.h"
   1:../../libDaisy/src/per/sai.h **** #pragma once
   2:../../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy/src/per/sai.h **** 
   5:../../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy/src/per/sai.h **** 
   7:../../libDaisy/src/per/sai.h **** namespace daisy
   8:../../libDaisy/src/per/sai.h **** {
   9:../../libDaisy/src/per/sai.h **** /** 
  10:../../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy/src/per/sai.h ****  * 
  14:../../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy/src/per/sai.h ****  *
  18:../../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy/src/per/sai.h ****  * 
  21:../../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy/src/per/sai.h ****  * 
  23:../../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 78


  26:../../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy/src/per/sai.h ****  */
  42:../../libDaisy/src/per/sai.h **** class SaiHandle
  43:../../libDaisy/src/per/sai.h **** {
  44:../../libDaisy/src/per/sai.h ****   public:
  45:../../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy/src/per/sai.h ****     struct Config
  47:../../libDaisy/src/per/sai.h ****     {
  48:../../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy/src/per/sai.h ****         {
  51:../../libDaisy/src/per/sai.h ****             SAI_1,
  52:../../libDaisy/src/per/sai.h ****             SAI_2,
  53:../../libDaisy/src/per/sai.h ****         };
  54:../../libDaisy/src/per/sai.h **** 
  55:../../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy/src/per/sai.h ****         {
  58:../../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy/src/per/sai.h ****         };
  64:../../libDaisy/src/per/sai.h **** 
  65:../../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy/src/per/sai.h ****         {
  68:../../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy/src/per/sai.h ****         };
  72:../../libDaisy/src/per/sai.h **** 
  73:../../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy/src/per/sai.h ****          */
  77:../../libDaisy/src/per/sai.h ****         enum class Sync
  78:../../libDaisy/src/per/sai.h ****         {
  79:../../libDaisy/src/per/sai.h ****             MASTER,
  80:../../libDaisy/src/per/sai.h ****             SLAVE,
  81:../../libDaisy/src/per/sai.h ****         };
  82:../../libDaisy/src/per/sai.h **** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 79


  83:../../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy/src/per/sai.h ****         enum class Direction
  85:../../libDaisy/src/per/sai.h ****         {
  86:../../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../../libDaisy/src/per/sai.h ****         };
  89:../../libDaisy/src/per/sai.h **** 
  90:../../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy/src/per/sai.h ****         struct
  92:../../libDaisy/src/per/sai.h ****         {
  93:../../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy/src/per/sai.h ****         } pin_config;
  95:../../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy/src/per/sai.h ****     };
 100:../../libDaisy/src/per/sai.h **** 
 101:../../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy/src/per/sai.h ****     enum class Result
 103:../../libDaisy/src/per/sai.h ****     {
 104:../../libDaisy/src/per/sai.h ****         OK,
 105:../../libDaisy/src/per/sai.h ****         ERR,
 106:../../libDaisy/src/per/sai.h ****     };
 107:../../libDaisy/src/per/sai.h **** 
 108:../../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 1764              		.loc 14 108 5 is_stmt 1 view .LVU441
 1765              	.LBB583:
 1766              	.LBB584:
 1767              		.loc 14 108 33 is_stmt 0 view .LVU442
 1768 0010 C463     		str	r4, [r0, #60]
 1769              	.LVL120:
 1770              		.loc 14 108 33 view .LVU443
 1771              	.LBE584:
 1772              	.LBE583:
 1773              	.LBE582:
 1774              	.LBE586:
 1775              	.LBE588:
  19:MIDIController.cpp **** DaisySeed hw;
 1776              		.loc 10 19 11 view .LVU444
 1777 0012 FFF7FEFF 		bl	__aeabi_atexit
 1778              	.LVL121:
 1779              	.LBB589:
 1780              	.LBI589:
 155:../../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1781              		.loc 6 155 5 is_stmt 1 view .LVU445
 1782              	.LBB590:
 1783              	.LBB591:
 1784              	.LBI591:
 157:../../libDaisy/src/hid/midi.h **** 
 158:../../libDaisy/src/hid/midi.h ****     struct Config
 1785              		.loc 6 158 12 view .LVU446
 1786              	.LBB592:
 1787              	.LBI592:
  43:../../libDaisy/src/hid/usb_midi.h ****     };
 1788              		.loc 9 43 9 view .LVU447
  43:../../libDaisy/src/hid/usb_midi.h ****     };
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 80


 1789              		.loc 9 43 9 is_stmt 0 view .LVU448
 1790              	.LBE592:
 1791              	.LBE591:
 1792              	.LBB593:
 1793              	.LBI593:
  55:../../libDaisy/src/hid/usb_midi.h ****     ~MidiUsbTransport() {}
 1794              		.loc 9 55 5 is_stmt 1 view .LVU449
  55:../../libDaisy/src/hid/usb_midi.h ****     ~MidiUsbTransport() {}
 1795              		.loc 9 55 5 is_stmt 0 view .LVU450
 1796              	.LBE593:
 1797              	.LBB594:
 1798              	.LBI594:
  18:../../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 1799              		.loc 8 18 5 is_stmt 1 view .LVU451
  18:../../libDaisy/src/hid/midi_parser.h ****     ~MidiParser() {}
 1800              		.loc 8 18 5 is_stmt 0 view .LVU452
 1801              	.LBE594:
 1802              	.LBB595:
 1803              	.LBI595:
 299:../../libDaisy/src/util/FIFO.h **** {
 300:../../libDaisy/src/util/FIFO.h ****   public:
 301:../../libDaisy/src/util/FIFO.h ****     /** Creates an empty FIFO */
 302:../../libDaisy/src/util/FIFO.h ****     FIFO() : FIFOBase<T>(buffer_, capacity + 1) {}
 1804              		.loc 7 302 5 is_stmt 1 view .LVU453
 1805              	.LBB596:
 1806              	.LBB597:
 1807              	.LBI597:
  14:../../libDaisy/src/util/FIFO.h ****     : buffer_(buffer), bufferSize_(bufferSize), bufferIn_(0), bufferOut_(0)
 1808              		.loc 7 14 5 view .LVU454
 1809              	.LBE597:
 1810              	.LBE596:
 1811              	.LBE595:
 155:../../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1812              		.loc 6 155 5 is_stmt 0 view .LVU455
 1813 0016 2748     		ldr	r0, .L83+12
 1814 0018 274B     		ldr	r3, .L83+16
 1815 001a 4FF44071 		mov	r1, #768
 1816              	.LBE590:
 1817              	.LBE589:
  20:MIDIController.cpp **** MidiUsbHandler midi;
 1818              		.loc 10 20 16 view .LVU456
 1819 001e 234A     		ldr	r2, .L83+4
 1820              	.LBB604:
 1821              	.LBB603:
 155:../../libDaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1822              		.loc 6 155 5 view .LVU457
 1823 0020 C0F89C30 		str	r3, [r0, #156]
 1824 0024 40F20F73 		movw	r3, #1807
 1825 0028 C0E90014 		strd	r1, r4, [r0]
 1826 002c C0F8A030 		str	r3, [r0, #160]
 1827              	.LBB602:
 1828              	.LBB601:
 1829              	.LBB600:
 1830              	.LBB598:
 1831              	.LBB599:
  15:../../libDaisy/src/util/FIFO.h ****     {
 1832              		.loc 7 15 75 view .LVU458
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 81


 1833 0030 00F1B401 		add	r1, r0, #180
 1834 0034 40F20113 		movw	r3, #257
 1835 0038 C0E92B44 		strd	r4, r4, [r0, #172]
 1836              	.LVL122:
  15:../../libDaisy/src/util/FIFO.h ****     {
 1837              		.loc 7 15 75 view .LVU459
 1838 003c C0E92913 		strd	r1, r3, [r0, #164]
 1839              	.LBE599:
 1840              	.LBE598:
 1841              	.LBE600:
 1842              	.LBE601:
 1843              	.LBE602:
 1844              	.LBE603:
 1845              	.LBE604:
  20:MIDIController.cpp **** MidiUsbHandler midi;
 1846              		.loc 10 20 16 view .LVU460
 1847 0040 1E49     		ldr	r1, .L83+20
 1848 0042 FFF7FEFF 		bl	__aeabi_atexit
 1849              	.LVL123:
 1850              	.LBB605:
 1851              	.LBI605:
 1852              		.file 15 "../../libDaisy/src/per/gpio.h"
   1:../../libDaisy/src/per/gpio.h **** #pragma once
   2:../../libDaisy/src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy/src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy/src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy/src/per/gpio.h **** 
   6:../../libDaisy/src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy/src/per/gpio.h **** 
   8:../../libDaisy/src/per/gpio.h **** namespace daisy
   9:../../libDaisy/src/per/gpio.h **** {
  10:../../libDaisy/src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy/src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy/src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy/src/per/gpio.h ****  *   
  14:../../libDaisy/src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy/src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy/src/per/gpio.h ****  * 
  17:../../libDaisy/src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy/src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy/src/per/gpio.h ****  * 
  20:../../libDaisy/src/per/gpio.h **** */
  21:../../libDaisy/src/per/gpio.h **** class GPIO
  22:../../libDaisy/src/per/gpio.h **** {
  23:../../libDaisy/src/per/gpio.h ****   public:
  24:../../libDaisy/src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy/src/per/gpio.h ****     enum class Mode
  26:../../libDaisy/src/per/gpio.h ****     {
  27:../../libDaisy/src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy/src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy/src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy/src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy/src/per/gpio.h ****     };
  32:../../libDaisy/src/per/gpio.h **** 
  33:../../libDaisy/src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy/src/per/gpio.h ****      *  
  35:../../libDaisy/src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 82


  36:../../libDaisy/src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy/src/per/gpio.h ****      * 
  38:../../libDaisy/src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy/src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy/src/per/gpio.h ****      */
  41:../../libDaisy/src/per/gpio.h ****     enum class Pull
  42:../../libDaisy/src/per/gpio.h ****     {
  43:../../libDaisy/src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy/src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy/src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy/src/per/gpio.h ****     };
  47:../../libDaisy/src/per/gpio.h **** 
  48:../../libDaisy/src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy/src/per/gpio.h ****     enum class Speed
  50:../../libDaisy/src/per/gpio.h ****     {
  51:../../libDaisy/src/per/gpio.h ****         LOW,
  52:../../libDaisy/src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy/src/per/gpio.h ****         HIGH,
  54:../../libDaisy/src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy/src/per/gpio.h ****     };
  56:../../libDaisy/src/per/gpio.h **** 
  57:../../libDaisy/src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy/src/per/gpio.h ****     struct Config
  59:../../libDaisy/src/per/gpio.h ****     {
  60:../../libDaisy/src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy/src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy/src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy/src/per/gpio.h ****         Speed speed;
  64:../../libDaisy/src/per/gpio.h **** 
  65:../../libDaisy/src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy/src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy/src/per/gpio.h ****          */
  68:../../libDaisy/src/per/gpio.h ****         Config()
  69:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy/src/per/gpio.h ****         {
  71:../../libDaisy/src/per/gpio.h ****         }
  72:../../libDaisy/src/per/gpio.h ****     };
  73:../../libDaisy/src/per/gpio.h **** 
  74:../../libDaisy/src/per/gpio.h ****     GPIO() {}
 1853              		.loc 15 74 5 is_stmt 1 view .LVU461
 1854              	.LBB606:
 1855              	.LBB607:
 1856              	.LBI607:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1857              		.loc 15 68 9 view .LVU462
 1858              	.LBB608:
 1859              	.LBB609:
 1860              	.LBB610:
 1861              	.LBI610:
 1862              		.file 16 "../../libDaisy/src/daisy_core.h"
   1:../../libDaisy/src/daisy_core.h **** #pragma once
   2:../../libDaisy/src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy/src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy/src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy/src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy/src/daisy_core.h **** 
   7:../../libDaisy/src/daisy_core.h **** #if defined(_MSC_VER)
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 83


   8:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy/src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy/src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy/src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy/src/daisy_core.h **** #else
  15:../../libDaisy/src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy/src/daisy_core.h **** #endif
  17:../../libDaisy/src/daisy_core.h **** 
  18:../../libDaisy/src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy/src/daisy_core.h ****     @{
  20:../../libDaisy/src/daisy_core.h **** */
  21:../../libDaisy/src/daisy_core.h **** 
  22:../../libDaisy/src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy/src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy/src/daisy_core.h **** */
  25:../../libDaisy/src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy/src/daisy_core.h **** /** 
  27:../../libDaisy/src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy/src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy/src/daisy_core.h **** cache enabled.
  30:../../libDaisy/src/daisy_core.h **** */
  31:../../libDaisy/src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy/src/daisy_core.h **** 
  33:../../libDaisy/src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy/src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy/src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy/src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy/src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy/src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy/src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy/src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy/src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy/src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy/src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy/src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy/src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy/src/daisy_core.h **** 
  47:../../libDaisy/src/daisy_core.h **** 
  48:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy/src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy/src/daisy_core.h **** 
  52:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy/src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy/src/daisy_core.h **** 
  56:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy/src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy/src/daisy_core.h **** 
  60:../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy/src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy/src/daisy_core.h **** 
  64:../../libDaisy/src/daisy_core.h **** /** 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 84


  65:../../libDaisy/src/daisy_core.h ****     Computes cube.
  66:../../libDaisy/src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy/src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy/src/daisy_core.h **** */
  69:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy/src/daisy_core.h **** {
  71:../../libDaisy/src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy/src/daisy_core.h **** }
  73:../../libDaisy/src/daisy_core.h **** 
  74:../../libDaisy/src/daisy_core.h **** /** 
  75:../../libDaisy/src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy/src/daisy_core.h **** */
  79:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy/src/daisy_core.h **** {
  81:../../libDaisy/src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy/src/daisy_core.h **** }
  83:../../libDaisy/src/daisy_core.h **** 
  84:../../libDaisy/src/daisy_core.h **** /**
  85:../../libDaisy/src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy/src/daisy_core.h **** */
  87:../../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy/src/daisy_core.h **** {
  89:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy/src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy/src/daisy_core.h **** }
  93:../../libDaisy/src/daisy_core.h **** 
  94:../../libDaisy/src/daisy_core.h **** 
  95:../../libDaisy/src/daisy_core.h **** /** 
  96:../../libDaisy/src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy/src/daisy_core.h **** */
 100:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy/src/daisy_core.h **** {
 102:../../libDaisy/src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy/src/daisy_core.h **** }
 104:../../libDaisy/src/daisy_core.h **** 
 105:../../libDaisy/src/daisy_core.h **** /**
 106:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy/src/daisy_core.h **** */
 108:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy/src/daisy_core.h **** {
 110:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy/src/daisy_core.h **** }
 114:../../libDaisy/src/daisy_core.h **** 
 115:../../libDaisy/src/daisy_core.h **** /** 
 116:../../libDaisy/src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy/src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy/src/daisy_core.h **** */
 120:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy/src/daisy_core.h **** {
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 85


 122:../../libDaisy/src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy/src/daisy_core.h **** }
 124:../../libDaisy/src/daisy_core.h **** 
 125:../../libDaisy/src/daisy_core.h **** /**
 126:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy/src/daisy_core.h **** */
 128:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy/src/daisy_core.h **** {
 130:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy/src/daisy_core.h **** }
 134:../../libDaisy/src/daisy_core.h **** 
 135:../../libDaisy/src/daisy_core.h **** /**
 136:../../libDaisy/src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy/src/daisy_core.h ****  */
 138:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy/src/daisy_core.h **** {
 140:../../libDaisy/src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy/src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy/src/daisy_core.h **** }
 143:../../libDaisy/src/daisy_core.h **** /**
 144:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy/src/daisy_core.h ****  */
 146:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy/src/daisy_core.h **** {
 148:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy/src/daisy_core.h **** }
 152:../../libDaisy/src/daisy_core.h **** 
 153:../../libDaisy/src/daisy_core.h **** /**
 154:../../libDaisy/src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy/src/daisy_core.h ****  */
 156:../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy/src/daisy_core.h **** {
 158:../../libDaisy/src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy/src/daisy_core.h **** }
 160:../../libDaisy/src/daisy_core.h **** /**
 161:../../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy/src/daisy_core.h ****  */
 163:../../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy/src/daisy_core.h **** {
 165:../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy/src/daisy_core.h **** }
 169:../../libDaisy/src/daisy_core.h **** 
 170:../../libDaisy/src/daisy_core.h **** 
 171:../../libDaisy/src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy/src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy/src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy/src/daisy_core.h ****  * 
 175:../../libDaisy/src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy/src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy/src/daisy_core.h ****  * 
 178:../../libDaisy/src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 86


 179:../../libDaisy/src/daisy_core.h ****  */
 180:../../libDaisy/src/daisy_core.h **** typedef enum
 181:../../libDaisy/src/daisy_core.h **** {
 182:../../libDaisy/src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy/src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy/src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy/src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy/src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy/src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy/src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy/src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy/src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy/src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy/src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy/src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy/src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy/src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy/src/daisy_core.h **** 
 197:../../libDaisy/src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy/src/daisy_core.h ****  *  
 199:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy/src/daisy_core.h ****  * 
 202:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy/src/daisy_core.h ****  */
 204:../../libDaisy/src/daisy_core.h **** typedef struct
 205:../../libDaisy/src/daisy_core.h **** {
 206:../../libDaisy/src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy/src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy/src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy/src/daisy_core.h **** 
 210:../../libDaisy/src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy/src/daisy_core.h ****  * 
 212:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy/src/daisy_core.h ****  * 
 215:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy/src/daisy_core.h **** */
 217:../../libDaisy/src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy/src/daisy_core.h **** {
 219:../../libDaisy/src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy/src/daisy_core.h ****     p.port = port;
 221:../../libDaisy/src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy/src/daisy_core.h ****     return p;
 223:../../libDaisy/src/daisy_core.h **** }
 224:../../libDaisy/src/daisy_core.h **** 
 225:../../libDaisy/src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy/src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy/src/daisy_core.h ****  * 
 228:../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy/src/daisy_core.h ****  * 
 231:../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy/src/daisy_core.h ****  */
 233:../../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy/src/daisy_core.h **** {
 235:../../libDaisy/src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 87


 236:../../libDaisy/src/daisy_core.h **** }
 237:../../libDaisy/src/daisy_core.h **** 
 238:../../libDaisy/src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy/src/daisy_core.h **** 
 240:../../libDaisy/src/daisy_core.h **** namespace daisy
 241:../../libDaisy/src/daisy_core.h **** {
 242:../../libDaisy/src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy/src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy/src/daisy_core.h **** {
 245:../../libDaisy/src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy/src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy/src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy/src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy/src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy/src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy/src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy/src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy/src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy/src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy/src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy/src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy/src/daisy_core.h **** };
 258:../../libDaisy/src/daisy_core.h **** 
 259:../../libDaisy/src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy/src/daisy_core.h **** struct Pin
 261:../../libDaisy/src/daisy_core.h **** {
 262:../../libDaisy/src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy/src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy/src/daisy_core.h **** 
 265:../../libDaisy/src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy/src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy/src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy/src/daisy_core.h ****     */
 269:../../libDaisy/src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy/src/daisy_core.h **** 
 271:../../libDaisy/src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy/src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 1863              		.loc 16 272 15 view .LVU463
 1864              		.loc 16 272 15 is_stmt 0 view .LVU464
 1865              	.LBE610:
 1866              	.LBE609:
 1867              	.LBE608:
 1868              	.LBE607:
 1869              		.loc 15 74 12 view .LVU465
 1870 0046 4FF60B73 		movw	r3, #65291
 1871              	.LBE606:
 1872              	.LBE605:
 1873              	.LBB616:
 1874              	.LBB617:
 1875 004a 1D4A     		ldr	r2, .L83+24
 1876              	.LBE617:
 1877              	.LBE616:
 1878              	.LBB627:
 1879              	.LBB614:
 1880 004c 1D49     		ldr	r1, .L83+28
 1881              	.LBE614:
 1882              	.LBE627:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 88


 1883              	.LBB628:
 1884              	.LBB629:
 1885 004e 1E48     		ldr	r0, .L83+32
 1886              	.LBE629:
 1887              	.LBE628:
 1888              	.LBB639:
 1889              	.LBB625:
 1890              	.LBB618:
 1891              	.LBB619:
 1892              	.LBB620:
  69:../../libDaisy/src/per/gpio.h ****         {
 1893              		.loc 15 69 73 view .LVU466
 1894 0050 C2E90034 		strd	r3, r4, [r2]
 1895 0054 C2E90244 		strd	r4, r4, [r2, #8]
 1896              	.LBE620:
 1897              	.LBE619:
 1898              	.LBE618:
 1899              	.LBE625:
 1900              	.LBE639:
 1901              	.LBB640:
 1902              	.LBB641:
 1903              		.loc 15 74 12 view .LVU467
 1904 0058 1C4A     		ldr	r2, .L83+36
 1905              	.LBE641:
 1906              	.LBE640:
 1907              	.LBB655:
 1908              	.LBB615:
 1909              	.LBB613:
 1910              	.LBB612:
 1911              	.LBB611:
  69:../../libDaisy/src/per/gpio.h ****         {
 1912              		.loc 15 69 73 view .LVU468
 1913 005a C1E90034 		strd	r3, r4, [r1]
 1914 005e C1E90244 		strd	r4, r4, [r1, #8]
 1915              	.LVL124:
  69:../../libDaisy/src/per/gpio.h ****         {
 1916              		.loc 15 69 73 view .LVU469
 1917              	.LBE611:
 1918              	.LBE612:
 1919              	.LBE613:
 1920              	.LBE615:
 1921              	.LBE655:
 1922              	.LBB656:
 1923              	.LBI616:
 1924              		.loc 15 74 5 is_stmt 1 view .LVU470
 1925              	.LBB626:
 1926              	.LBB624:
 1927              	.LBI618:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1928              		.loc 15 68 9 view .LVU471
 1929              	.LBB623:
 1930              	.LBB622:
 1931              	.LBB621:
 1932              	.LBI621:
 1933              		.loc 16 272 15 view .LVU472
 1934              		.loc 16 272 15 is_stmt 0 view .LVU473
 1935              	.LBE621:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 89


 1936              	.LBE622:
 1937              	.LBE623:
 1938              	.LBE624:
 1939              	.LBE626:
 1940              	.LBE656:
 1941              	.LBB657:
 1942              	.LBI628:
 1943              		.loc 15 74 5 is_stmt 1 view .LVU474
 1944              	.LBB637:
 1945              	.LBB630:
 1946              	.LBI630:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1947              		.loc 15 68 9 view .LVU475
 1948              	.LBB631:
 1949              	.LBB632:
 1950              	.LBB633:
 1951              	.LBI633:
 1952              		.loc 16 272 15 view .LVU476
 1953              		.loc 16 272 15 is_stmt 0 view .LVU477
 1954              	.LBE633:
 1955              	.LBE632:
 1956              	.LBE631:
 1957              	.LBE630:
 1958              	.LBE637:
 1959              	.LBE657:
 1960              	.LBB658:
 1961              	.LBB652:
 1962              	.LBB642:
 1963              	.LBB643:
 1964              	.LBB644:
  69:../../libDaisy/src/per/gpio.h ****         {
 1965              		.loc 15 69 73 view .LVU478
 1966 0062 C2E90034 		strd	r3, r4, [r2]
 1967              	.LBE644:
 1968              	.LBE643:
 1969              	.LBE642:
 1970              	.LBE652:
 1971              	.LBE658:
 1972              	.LBB659:
 1973              	.LBB660:
 1974              		.loc 15 74 12 view .LVU479
 1975 0066 1A49     		ldr	r1, .L83+40
 1976              	.LBE660:
 1977              	.LBE659:
 1978              	.LBB666:
 1979              	.LBB653:
 1980              	.LBB650:
 1981              	.LBB648:
 1982              	.LBB646:
  69:../../libDaisy/src/per/gpio.h ****         {
 1983              		.loc 15 69 73 view .LVU480
 1984 0068 C2E90244 		strd	r4, r4, [r2, #8]
 1985              	.LBE646:
 1986              	.LBE648:
 1987              	.LBE650:
 1988              	.LBE653:
 1989              	.LBE666:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 90


 1990              	.LBB667:
 1991              	.LBB668:
 1992              		.loc 15 74 12 view .LVU481
 1993 006c 194A     		ldr	r2, .L83+44
 1994              	.LBE668:
 1995              	.LBE667:
 1996              	.LBB678:
 1997              	.LBB638:
 1998              	.LBB636:
 1999              	.LBB635:
 2000              	.LBB634:
  69:../../libDaisy/src/per/gpio.h ****         {
 2001              		.loc 15 69 73 view .LVU482
 2002 006e C0E90034 		strd	r3, r4, [r0]
 2003 0072 C0E90244 		strd	r4, r4, [r0, #8]
 2004              	.LVL125:
  69:../../libDaisy/src/per/gpio.h ****         {
 2005              		.loc 15 69 73 view .LVU483
 2006              	.LBE634:
 2007              	.LBE635:
 2008              	.LBE636:
 2009              	.LBE638:
 2010              	.LBE678:
 2011              	.LBB679:
 2012              	.LBI640:
 2013              		.loc 15 74 5 is_stmt 1 view .LVU484
 2014              	.LBB654:
 2015              	.LBB651:
 2016              	.LBI642:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2017              		.loc 15 68 9 view .LVU485
 2018              	.LBB649:
 2019              	.LBB647:
 2020              	.LBB645:
 2021              	.LBI645:
 2022              		.loc 16 272 15 view .LVU486
 2023              		.loc 16 272 15 is_stmt 0 view .LVU487
 2024              	.LBE645:
 2025              	.LBE647:
 2026              	.LBE649:
 2027              	.LBE651:
 2028              	.LBE654:
 2029              	.LBE679:
 2030              	.LBB680:
 2031              	.LBI659:
 2032              		.loc 15 74 5 is_stmt 1 view .LVU488
 2033              	.LBB665:
 2034              	.LBB661:
 2035              	.LBI661:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2036              		.loc 15 68 9 view .LVU489
 2037              	.LBB662:
 2038              	.LBB663:
 2039              	.LBB664:
 2040              	.LBI664:
 2041              		.loc 16 272 15 view .LVU490
 2042              		.loc 16 272 15 is_stmt 0 view .LVU491
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 91


 2043              	.LBE664:
  69:../../libDaisy/src/per/gpio.h ****         {
 2044              		.loc 15 69 73 view .LVU492
 2045 0076 C1E90034 		strd	r3, r4, [r1]
 2046 007a C1E90244 		strd	r4, r4, [r1, #8]
 2047              	.LVL126:
  69:../../libDaisy/src/per/gpio.h ****         {
 2048              		.loc 15 69 73 view .LVU493
 2049              	.LBE663:
 2050              	.LBE662:
 2051              	.LBE661:
 2052              	.LBE665:
 2053              	.LBE680:
 2054              	.LBB681:
 2055              	.LBI667:
 2056              		.loc 15 74 5 is_stmt 1 view .LVU494
 2057              	.LBB676:
 2058              	.LBB669:
 2059              	.LBI669:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2060              		.loc 15 68 9 view .LVU495
 2061              	.LBB670:
 2062              	.LBB671:
 2063              	.LBB672:
 2064              	.LBI672:
 2065              		.loc 16 272 15 view .LVU496
 2066              		.loc 16 272 15 is_stmt 0 view .LVU497
 2067              	.LBE672:
 2068              	.LBE671:
 2069              	.LBE670:
 2070              	.LBE669:
 2071              	.LBE676:
 2072              	.LBE681:
 2073              	.LBB682:
 2074              	.LBB683:
 2075              		.loc 15 74 12 view .LVU498
 2076 007e 1648     		ldr	r0, .L83+48
 2077              	.LBE683:
 2078              	.LBE682:
 2079              	.LBB693:
 2080              	.LBB694:
 2081 0080 1649     		ldr	r1, .L83+52
 2082              	.LBE694:
 2083              	.LBE693:
 2084              	.LBB700:
 2085              	.LBB677:
 2086              	.LBB675:
 2087              	.LBB674:
 2088              	.LBB673:
  69:../../libDaisy/src/per/gpio.h ****         {
 2089              		.loc 15 69 73 view .LVU499
 2090 0082 C2E90034 		strd	r3, r4, [r2]
 2091 0086 C2E90244 		strd	r4, r4, [r2, #8]
 2092              	.LVL127:
  69:../../libDaisy/src/per/gpio.h ****         {
 2093              		.loc 15 69 73 view .LVU500
 2094              	.LBE673:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 92


 2095              	.LBE674:
 2096              	.LBE675:
 2097              	.LBE677:
 2098              	.LBE700:
 2099              	.LBB701:
 2100              	.LBI682:
 2101              		.loc 15 74 5 is_stmt 1 view .LVU501
 2102              	.LBB691:
 2103              	.LBB684:
 2104              	.LBI684:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2105              		.loc 15 68 9 view .LVU502
 2106              	.LBB685:
 2107              	.LBB686:
 2108              	.LBB687:
 2109              	.LBI687:
 2110              		.loc 16 272 15 view .LVU503
 2111              		.loc 16 272 15 is_stmt 0 view .LVU504
 2112              	.LBE687:
 2113              	.LBE686:
 2114              	.LBE685:
 2115              	.LBE684:
 2116              	.LBE691:
 2117              	.LBE701:
 2118              	.LBB702:
 2119              	.LBB703:
 2120              		.loc 15 74 12 view .LVU505
 2121 008a 154A     		ldr	r2, .L83+56
 2122              	.LBE703:
 2123              	.LBE702:
 2124              	.LBB709:
 2125              	.LBB692:
 2126              	.LBB690:
 2127              	.LBB689:
 2128              	.LBB688:
  69:../../libDaisy/src/per/gpio.h ****         {
 2129              		.loc 15 69 73 view .LVU506
 2130 008c C0E90034 		strd	r3, r4, [r0]
 2131 0090 C0E90244 		strd	r4, r4, [r0, #8]
 2132              	.LVL128:
  69:../../libDaisy/src/per/gpio.h ****         {
 2133              		.loc 15 69 73 view .LVU507
 2134              	.LBE688:
 2135              	.LBE689:
 2136              	.LBE690:
 2137              	.LBE692:
 2138              	.LBE709:
 2139              	.LBB710:
 2140              	.LBI693:
 2141              		.loc 15 74 5 is_stmt 1 view .LVU508
 2142              	.LBB699:
 2143              	.LBB695:
 2144              	.LBI695:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2145              		.loc 15 68 9 view .LVU509
 2146              	.LBB696:
 2147              	.LBB697:
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 93


 2148              	.LBB698:
 2149              	.LBI698:
 2150              		.loc 16 272 15 view .LVU510
 2151              		.loc 16 272 15 is_stmt 0 view .LVU511
 2152              	.LBE698:
  69:../../libDaisy/src/per/gpio.h ****         {
 2153              		.loc 15 69 73 view .LVU512
 2154 0094 C1E90034 		strd	r3, r4, [r1]
 2155 0098 C1E90244 		strd	r4, r4, [r1, #8]
 2156              	.LVL129:
  69:../../libDaisy/src/per/gpio.h ****         {
 2157              		.loc 15 69 73 view .LVU513
 2158              	.LBE697:
 2159              	.LBE696:
 2160              	.LBE695:
 2161              	.LBE699:
 2162              	.LBE710:
 2163              	.LBB711:
 2164              	.LBI702:
 2165              		.loc 15 74 5 is_stmt 1 view .LVU514
 2166              	.LBB708:
 2167              	.LBB704:
 2168              	.LBI704:
  68:../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2169              		.loc 15 68 9 view .LVU515
 2170              	.LBB705:
 2171              	.LBB706:
 2172              	.LBB707:
 2173              	.LBI707:
 2174              		.loc 16 272 15 view .LVU516
 2175              		.loc 16 272 15 is_stmt 0 view .LVU517
 2176              	.LBE707:
  69:../../libDaisy/src/per/gpio.h ****         {
 2177              		.loc 15 69 73 view .LVU518
 2178 009c C2E90034 		strd	r3, r4, [r2]
 2179 00a0 C2E90244 		strd	r4, r4, [r2, #8]
 2180              	.LVL130:
  69:../../libDaisy/src/per/gpio.h ****         {
 2181              		.loc 15 69 73 view .LVU519
 2182              	.LBE706:
 2183              	.LBE705:
 2184              	.LBE704:
 2185              	.LBE708:
 2186              	.LBE711:
 2187              	.LBE712:
 2188              	.LBE713:
 2189              		.loc 10 685 1 view .LVU520
 2190 00a4 10BD     		pop	{r4, pc}
 2191              	.L84:
 2192 00a6 00BF     		.align	2
 2193              	.L83:
 2194 00a8 00000000 		.word	.LANCHOR26
 2195 00ac 00000000 		.word	__dso_handle
 2196 00b0 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 2197 00b4 00000000 		.word	midi
 2198 00b8 0080707F 		.word	2138079232
 2199 00bc 00000000 		.word	_ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED1Ev
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 94


 2200 00c0 00000000 		.word	.LANCHOR3
 2201 00c4 00000000 		.word	.LANCHOR1
 2202 00c8 00000000 		.word	.LANCHOR5
 2203 00cc 00000000 		.word	.LANCHOR7
 2204 00d0 00000000 		.word	.LANCHOR9
 2205 00d4 00000000 		.word	.LANCHOR11
 2206 00d8 00000000 		.word	.LANCHOR13
 2207 00dc 00000000 		.word	.LANCHOR15
 2208 00e0 00000000 		.word	.LANCHOR17
 2209              		.cfi_endproc
 2210              	.LFE5277:
 2212              		.section	.init_array,"aw",%init_array
 2213              		.align	2
 2214 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 2215              		.global	knob3cfg
 2216              		.global	knob2cfg
 2217              		.global	knob1cfg
 2218              		.global	fader3cfg
 2219              		.global	fader2cfg
 2220              		.global	fader1cfg
 2221              		.global	lastEncB
 2222              		.global	lastEncA
 2223              		.global	encoderPos
 2224              		.global	encoderB
 2225              		.global	encoderA
 2226              		.global	LED_W2
 2227              		.global	LED_W1
 2228              		.global	LED_R2
 2229              		.global	LED_R1
 2230              		.global	button3
 2231              		.global	button2
 2232              		.global	button1
 2233              		.global	midi
 2234              		.global	hw
 2235              		.section	.bss.LED_R1,"aw",%nobits
 2236              		.align	2
 2237              		.set	.LANCHOR7,. + 0
 2240              	LED_R1:
 2241 0000 00000000 		.space	20
 2241      00000000 
 2241      00000000 
 2241      00000000 
 2241      00000000 
 2242              		.section	.bss.LED_R2,"aw",%nobits
 2243              		.align	2
 2244              		.set	.LANCHOR9,. + 0
 2247              	LED_R2:
 2248 0000 00000000 		.space	20
 2248      00000000 
 2248      00000000 
 2248      00000000 
 2248      00000000 
 2249              		.section	.bss.LED_W1,"aw",%nobits
 2250              		.align	2
 2251              		.set	.LANCHOR11,. + 0
 2254              	LED_W1:
 2255 0000 00000000 		.space	20
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 95


 2255      00000000 
 2255      00000000 
 2255      00000000 
 2255      00000000 
 2256              		.section	.bss.LED_W2,"aw",%nobits
 2257              		.align	2
 2258              		.set	.LANCHOR13,. + 0
 2261              	LED_W2:
 2262 0000 00000000 		.space	20
 2262      00000000 
 2262      00000000 
 2262      00000000 
 2262      00000000 
 2263              		.section	.bss._ZZ10ReadFadersvE10last_knob1,"aw",%nobits
 2264              		.align	2
 2265              		.set	.LANCHOR31,. + 0
 2268              	_ZZ10ReadFadersvE10last_knob1:
 2269 0000 00000000 		.space	4
 2270              		.section	.bss._ZZ10ReadFadersvE10last_knob2,"aw",%nobits
 2271              		.align	2
 2272              		.set	.LANCHOR32,. + 0
 2275              	_ZZ10ReadFadersvE10last_knob2:
 2276 0000 00000000 		.space	4
 2277              		.section	.bss._ZZ10ReadFadersvE10last_knob3,"aw",%nobits
 2278              		.align	2
 2279              		.set	.LANCHOR33,. + 0
 2282              	_ZZ10ReadFadersvE10last_knob3:
 2283 0000 00000000 		.space	4
 2284              		.section	.bss._ZZ10ReadFadersvE11last_fader1,"aw",%nobits
 2285              		.align	2
 2286              		.set	.LANCHOR28,. + 0
 2289              	_ZZ10ReadFadersvE11last_fader1:
 2290 0000 00000000 		.space	4
 2291              		.section	.bss._ZZ10ReadFadersvE11last_fader2,"aw",%nobits
 2292              		.align	2
 2293              		.set	.LANCHOR29,. + 0
 2296              	_ZZ10ReadFadersvE11last_fader2:
 2297 0000 00000000 		.space	4
 2298              		.section	.bss._ZZ10ReadFadersvE11last_fader3,"aw",%nobits
 2299              		.align	2
 2300              		.set	.LANCHOR30,. + 0
 2303              	_ZZ10ReadFadersvE11last_fader3:
 2304 0000 00000000 		.space	4
 2305              		.section	.bss.button1,"aw",%nobits
 2306              		.align	2
 2307              		.set	.LANCHOR1,. + 0
 2310              	button1:
 2311 0000 00000000 		.space	20
 2311      00000000 
 2311      00000000 
 2311      00000000 
 2311      00000000 
 2312              		.section	.bss.button2,"aw",%nobits
 2313              		.align	2
 2314              		.set	.LANCHOR3,. + 0
 2317              	button2:
 2318 0000 00000000 		.space	20
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 96


 2318      00000000 
 2318      00000000 
 2318      00000000 
 2318      00000000 
 2319              		.section	.bss.button3,"aw",%nobits
 2320              		.align	2
 2321              		.set	.LANCHOR5,. + 0
 2324              	button3:
 2325 0000 00000000 		.space	20
 2325      00000000 
 2325      00000000 
 2325      00000000 
 2325      00000000 
 2326              		.section	.bss.encoderA,"aw",%nobits
 2327              		.align	2
 2328              		.set	.LANCHOR15,. + 0
 2331              	encoderA:
 2332 0000 00000000 		.space	20
 2332      00000000 
 2332      00000000 
 2332      00000000 
 2332      00000000 
 2333              		.section	.bss.encoderB,"aw",%nobits
 2334              		.align	2
 2335              		.set	.LANCHOR17,. + 0
 2338              	encoderB:
 2339 0000 00000000 		.space	20
 2339      00000000 
 2339      00000000 
 2339      00000000 
 2339      00000000 
 2340              		.section	.bss.encoderPos,"aw",%nobits
 2341              		.align	2
 2342              		.set	.LANCHOR27,. + 0
 2345              	encoderPos:
 2346 0000 00000000 		.space	4
 2347              		.section	.bss.fader1cfg,"aw",%nobits
 2348              		.align	2
 2349              		.set	.LANCHOR20,. + 0
 2352              	fader1cfg:
 2353 0000 00000000 		.space	18
 2353      00000000 
 2353      00000000 
 2353      00000000 
 2353      0000
 2354              		.section	.bss.fader2cfg,"aw",%nobits
 2355              		.align	2
 2356              		.set	.LANCHOR21,. + 0
 2359              	fader2cfg:
 2360 0000 00000000 		.space	18
 2360      00000000 
 2360      00000000 
 2360      00000000 
 2360      0000
 2361              		.section	.bss.fader3cfg,"aw",%nobits
 2362              		.align	2
 2363              		.set	.LANCHOR22,. + 0
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 97


 2366              	fader3cfg:
 2367 0000 00000000 		.space	18
 2367      00000000 
 2367      00000000 
 2367      00000000 
 2367      0000
 2368              		.section	.bss.hw,"aw",%nobits
 2369              		.align	2
 2370              		.set	.LANCHOR26,. + 0
 2373              	hw:
 2374 0000 00000000 		.space	64
 2374      00000000 
 2374      00000000 
 2374      00000000 
 2374      00000000 
 2375              		.section	.bss.knob1cfg,"aw",%nobits
 2376              		.align	2
 2377              		.set	.LANCHOR23,. + 0
 2380              	knob1cfg:
 2381 0000 00000000 		.space	18
 2381      00000000 
 2381      00000000 
 2381      00000000 
 2381      0000
 2382              		.section	.bss.knob2cfg,"aw",%nobits
 2383              		.align	2
 2384              		.set	.LANCHOR24,. + 0
 2387              	knob2cfg:
 2388 0000 00000000 		.space	18
 2388      00000000 
 2388      00000000 
 2388      00000000 
 2388      0000
 2389              		.section	.bss.knob3cfg,"aw",%nobits
 2390              		.align	2
 2391              		.set	.LANCHOR25,. + 0
 2394              	knob3cfg:
 2395 0000 00000000 		.space	18
 2395      00000000 
 2395      00000000 
 2395      00000000 
 2395      0000
 2396              		.section	.bss.lastEncA,"aw",%nobits
 2397              		.align	2
 2398              		.set	.LANCHOR18,. + 0
 2401              	lastEncA:
 2402 0000 00000000 		.space	4
 2403              		.section	.bss.lastEncB,"aw",%nobits
 2404              		.align	2
 2405              		.set	.LANCHOR19,. + 0
 2408              	lastEncB:
 2409 0000 00000000 		.space	4
 2410              		.section	.bss.midi,"aw",%nobits
 2411              		.align	2
 2414              	midi:
 2415 0000 00000000 		.space	37188
 2415      00000000 
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 98


 2415      00000000 
 2415      00000000 
 2415      00000000 
 2416              		.section	.rodata._ZN5daisy4seedL2D0E,"a"
 2417              		.align	2
 2418              		.set	.LANCHOR0,. + 0
 2421              	_ZN5daisy4seedL2D0E:
 2422 0000 01       		.byte	1
 2423 0001 0C       		.byte	12
 2424              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 2425              		.align	2
 2426              		.set	.LANCHOR2,. + 0
 2429              	_ZN5daisy4seedL2D1E:
 2430 0000 02       		.byte	2
 2431 0001 0B       		.byte	11
 2432              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 2433              		.align	2
 2434              		.set	.LANCHOR4,. + 0
 2437              	_ZN5daisy4seedL2D2E:
 2438 0000 02       		.byte	2
 2439 0001 0A       		.byte	10
 2440              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 2441              		.align	2
 2442              		.set	.LANCHOR14,. + 0
 2445              	_ZN5daisy4seedL2D3E:
 2446 0000 02       		.byte	2
 2447 0001 09       		.byte	9
 2448              		.section	.rodata._ZN5daisy4seedL2D4E,"a"
 2449              		.align	2
 2450              		.set	.LANCHOR16,. + 0
 2453              	_ZN5daisy4seedL2D4E:
 2454 0000 02       		.byte	2
 2455 0001 08       		.byte	8
 2456              		.section	.rodata._ZN5daisy4seedL2D5E,"a"
 2457              		.align	2
 2458              		.set	.LANCHOR6,. + 0
 2461              	_ZN5daisy4seedL2D5E:
 2462 0000 03       		.byte	3
 2463 0001 02       		.byte	2
 2464              		.section	.rodata._ZN5daisy4seedL2D6E,"a"
 2465              		.align	2
 2466              		.set	.LANCHOR8,. + 0
 2469              	_ZN5daisy4seedL2D6E:
 2470 0000 02       		.byte	2
 2471 0001 0C       		.byte	12
 2472              		.section	.rodata._ZN5daisy4seedL2D7E,"a"
 2473              		.align	2
 2474              		.set	.LANCHOR10,. + 0
 2477              	_ZN5daisy4seedL2D7E:
 2478 0000 06       		.byte	6
 2479 0001 0A       		.byte	10
 2480              		.section	.rodata._ZN5daisy4seedL2D8E,"a"
 2481              		.align	2
 2482              		.set	.LANCHOR12,. + 0
 2485              	_ZN5daisy4seedL2D8E:
 2486 0000 06       		.byte	6
 2487 0001 0B       		.byte	11
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 99


 2488              		.text
 2489              	.Letext0:
 2490              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 2491              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 2492              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 2493              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2494              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 2495              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 2496              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 2497              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 2498              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 2499              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 2500              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 2501              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 2502              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 2503              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
 2504              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 2505              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 2506              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 2507              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 2508              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 2509              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 2510              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 2511              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 2512              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/type_traits.h"
 2513              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 2514              		.file 41 "<built-in>"
 2515              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 2516              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 2517              		.file 44 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 2518              		.file 45 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 2519              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 2520              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 2521              		.file 48 "../../libDaisy/src/per/tim.h"
 2522              		.file 49 "../../libDaisy/src/hid/MidiEvent.h"
 2523              		.file 50 "../../libDaisy/src/hid/logger_impl.h"
 2524              		.file 51 "../../libDaisy/src/util/wav_format.h"
 2525              		.file 52 "../../libDaisy/src/dev/max11300.h"
 2526              		.file 53 "../../libDaisy/src/hid/logger.h"
 2527              		.file 54 "../../libDaisy/src/dev/sdram.h"
 2528              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 2529              		.file 56 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 2530              		.file 57 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 2531              		.file 58 "../../DaisySP/Source/Control/adenv.h"
 2532              		.file 59 "../../DaisySP/Source/Utility/dsp.h"
 2533              		.file 60 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 2534              		.file 61 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 2535              		.file 62 "../../libDaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MIDIController.cpp
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:19     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:26     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:26     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:67     .text._ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:74     .text._ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev:0000000000000000 _ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:74     .text._ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED2Ev:0000000000000000 _ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED1Ev
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:113    .text._Z11initButtonsv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:120    .text._Z11initButtonsv:0000000000000000 _Z11initButtonsv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:175    .text._Z11initButtonsv:000000000000003c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:185    .text._Z8testLEDsv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:192    .text._Z8testLEDsv:0000000000000000 _Z8testLEDsv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:256    .text._Z8testLEDsv:000000000000004c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:268    .text._Z11InitEncoderv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:275    .text._Z11InitEncoderv:0000000000000000 _Z11InitEncoderv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:344    .text._Z11InitEncoderv:0000000000000044 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:354    .text._Z10InitFadersv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:361    .text._Z10InitFadersv:0000000000000000 _Z10InitFadersv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:535    .text._Z10InitFadersv:000000000000012c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:546    .rodata._Z11ReadEncoderv.str1.4:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:550    .text._Z11ReadEncoderv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:557    .text._Z11ReadEncoderv:0000000000000000 _Z11ReadEncoderv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:662    .text._Z11ReadEncoderv:000000000000004c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:672    .text._Z14remapWithCurveff:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:679    .text._Z14remapWithCurveff:0000000000000000 _Z14remapWithCurveff
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:818    .text._Z14remapWithCurveff:000000000000006c $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:825    .rodata._Z10ReadFadersv.str1.4:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:844    .text._Z10ReadFadersv:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:851    .text._Z10ReadFadersv:0000000000000000 _Z10ReadFadersv
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:1296   .text._Z10ReadFadersv:00000000000001ac $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:1316   .rodata.main.str1.4:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:1338   .text.startup.main:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:1345   .text.startup.main:0000000000000000 main
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:1640   .text.startup.main:00000000000000f0 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:1656   .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:1662   .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2194   .text.startup._GLOBAL__sub_I_hw:00000000000000a8 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2414   .bss.midi:0000000000000000 midi
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2213   .init_array:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2394   .bss.knob3cfg:0000000000000000 knob3cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2387   .bss.knob2cfg:0000000000000000 knob2cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2380   .bss.knob1cfg:0000000000000000 knob1cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2366   .bss.fader3cfg:0000000000000000 fader3cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2359   .bss.fader2cfg:0000000000000000 fader2cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2352   .bss.fader1cfg:0000000000000000 fader1cfg
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2408   .bss.lastEncB:0000000000000000 lastEncB
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2401   .bss.lastEncA:0000000000000000 lastEncA
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2345   .bss.encoderPos:0000000000000000 encoderPos
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2338   .bss.encoderB:0000000000000000 encoderB
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2331   .bss.encoderA:0000000000000000 encoderA
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2261   .bss.LED_W2:0000000000000000 LED_W2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2254   .bss.LED_W1:0000000000000000 LED_W1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2247   .bss.LED_R2:0000000000000000 LED_R2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2240   .bss.LED_R1:0000000000000000 LED_R1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2324   .bss.button3:0000000000000000 button3
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2317   .bss.button2:0000000000000000 button2
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 101


/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2310   .bss.button1:0000000000000000 button1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2373   .bss.hw:0000000000000000 hw
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2236   .bss.LED_R1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2243   .bss.LED_R2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2250   .bss.LED_W1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2257   .bss.LED_W2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2264   .bss._ZZ10ReadFadersvE10last_knob1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2268   .bss._ZZ10ReadFadersvE10last_knob1:0000000000000000 _ZZ10ReadFadersvE10last_knob1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2271   .bss._ZZ10ReadFadersvE10last_knob2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2275   .bss._ZZ10ReadFadersvE10last_knob2:0000000000000000 _ZZ10ReadFadersvE10last_knob2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2278   .bss._ZZ10ReadFadersvE10last_knob3:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2282   .bss._ZZ10ReadFadersvE10last_knob3:0000000000000000 _ZZ10ReadFadersvE10last_knob3
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2285   .bss._ZZ10ReadFadersvE11last_fader1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2289   .bss._ZZ10ReadFadersvE11last_fader1:0000000000000000 _ZZ10ReadFadersvE11last_fader1
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2292   .bss._ZZ10ReadFadersvE11last_fader2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2296   .bss._ZZ10ReadFadersvE11last_fader2:0000000000000000 _ZZ10ReadFadersvE11last_fader2
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2299   .bss._ZZ10ReadFadersvE11last_fader3:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2303   .bss._ZZ10ReadFadersvE11last_fader3:0000000000000000 _ZZ10ReadFadersvE11last_fader3
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2306   .bss.button1:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2313   .bss.button2:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2320   .bss.button3:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2327   .bss.encoderA:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2334   .bss.encoderB:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2341   .bss.encoderPos:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2348   .bss.fader1cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2355   .bss.fader2cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2362   .bss.fader3cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2369   .bss.hw:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2376   .bss.knob1cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2383   .bss.knob2cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2390   .bss.knob3cfg:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2397   .bss.lastEncA:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2404   .bss.lastEncB:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2411   .bss.midi:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2417   .rodata._ZN5daisy4seedL2D0E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2421   .rodata._ZN5daisy4seedL2D0E:0000000000000000 _ZN5daisy4seedL2D0E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2425   .rodata._ZN5daisy4seedL2D1E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2429   .rodata._ZN5daisy4seedL2D1E:0000000000000000 _ZN5daisy4seedL2D1E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2433   .rodata._ZN5daisy4seedL2D2E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2437   .rodata._ZN5daisy4seedL2D2E:0000000000000000 _ZN5daisy4seedL2D2E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2441   .rodata._ZN5daisy4seedL2D3E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2445   .rodata._ZN5daisy4seedL2D3E:0000000000000000 _ZN5daisy4seedL2D3E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2449   .rodata._ZN5daisy4seedL2D4E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2453   .rodata._ZN5daisy4seedL2D4E:0000000000000000 _ZN5daisy4seedL2D4E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2457   .rodata._ZN5daisy4seedL2D5E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2461   .rodata._ZN5daisy4seedL2D5E:0000000000000000 _ZN5daisy4seedL2D5E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2465   .rodata._ZN5daisy4seedL2D6E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2469   .rodata._ZN5daisy4seedL2D6E:0000000000000000 _ZN5daisy4seedL2D6E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2473   .rodata._ZN5daisy4seedL2D7E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2477   .rodata._ZN5daisy4seedL2D7E:0000000000000000 _ZN5daisy4seedL2D7E
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2481   .rodata._ZN5daisy4seedL2D8E:0000000000000000 $d
/var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s:2485   .rodata._ZN5daisy4seedL2D8E:0000000000000000 _ZN5daisy4seedL2D8E
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN5daisy11MidiHandlerINS_16MidiUsbTransportEED5Ev

UNDEFINED SYMBOLS
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
ARM GAS  /var/folders/3j/b_n5rprd12l_m65s7lnm5vx00000gn/T//ccUGIjos.s 			page 102


_ZN5daisy4GPIO4ReadEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
srand
rand
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
pow
powf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy9DaisySeed6SetLedEb
_ZN5daisy9DaisySeed7DelayMsEj
__aeabi_atexit
__dso_handle
